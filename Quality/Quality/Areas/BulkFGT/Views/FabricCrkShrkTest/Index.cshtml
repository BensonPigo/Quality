
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model DatabaseObject.ResultModel.FabricCrkShrkTest_Result
<link href="~/ThirdParty/plugins/DataTables/datatables.min.css" rel="stylesheet" />
<link href="~/ThirdParty/SciCustom/css/TableStyle.css" rel="stylesheet" />
<script src="~/ThirdParty/plugins/DataTables/datatables.min.js"></script>
<link href="~/ThirdParty/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" />
<style type="text/css">

    tr.row-name {
        color: black;
    }

    .row {
        --bs-gutter-x: 1.5rem;
        --bs-gutter-y: 0;
        display: flex;
        flex-wrap: wrap;
        width: 95vw;
        margin-top: calc(var(--bs-gutter-y) * -1);
        margin-right: calc(var(--bs-gutter-x)/ -2);
        margin-left: calc(var(--bs-gutter-x)/ -2);
    }

    .button {
        background-color: #E00000; /* Red */
        border: none;
        color: white;
        padding: 6px 16px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
    }

    .row > * {
        flex-shrink: 0;
        width: 100%;
        max-width: 100%;
        padding-left: calc(var(--bs-gutter-x)/ 2);
    }

    .rowHeader {
        font-size: 1.1vw;
        font-weight: bold;
    }

        .rowHeader input[type="text"] {
            width: 10vw;
        }

    .col-auto {
        width: auto;
    }

        .col-auto > p {
            padding: 0
        }

    .White {
        color: white !important;
    }

    .Black {
        color: black !important;
    }

    .IsEditMode {
        color: white !important;
        cursor: pointer;
    }

    .IsEditModeQuery {
        color: gray !important;
        cursor: no-drop;
    }

    #ButtonMode {
        width: 92vw;
    }

    #myCartons_info, #myEndlineMoisture_info, #myView_info {
        color: white
    }

    .table_div tr td:nth-child(2n+1) {
        font-size: 1.2em;
        font-weight: bold;
    }


    .DataTable {
        width: 92vw;
        font-size: 1rem;
        font-weight: bold;
        border: solid 1px black;
        background-color: white;
    }

        .DataTable > tbody img {
            cursor: pointer;
        }

        .DataTable > tbody > tr:nth-of-type(odd) {
            background-color: #ffffff;
        }

        .DataTable > tbody > tr:nth-of-type(even) {
            background-color: #F0F2F2;
        }

        .DataTable > tbody > tr > td {
            border: solid 1px gray;
            padding: 0.5em;
            vertical-align: middle;
        }

        .DataTable > thead > tr > th {
            width: 5vw;
        }
    .DetailDataArea {
        width: 260%;
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
    }
    .DetailDataAreaItem1 {
        width: 3%;
        padding: 2px;
        height: 3rem;
        border: 1px solid;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
    }
    .DetailDataAreaItem2 {
        width: 1.5%;
        padding: 2px;
        height: 3rem;
        border: 1px solid;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
    }
    .DetailDataAreaItem3 {
        width: 4.5%;
        padding: 2px;
        height: 3rem;
        border: 1px solid;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
    }
    .colHead {
        background-color: wheat;
        color: darkslategray;
        font-size: 1rem;
        font-weight: bold;
        font-size: 1rem;
    }
    .colBody {
        font-size: 1rem;
    }
    .fixedColumn1 {
        position: sticky;
        left: 1px;
        background-color: mistyrose;
        /*width: 5vw;*/
        /*border: solid 1px gray;*/
    }

    .fixedColumn2 {
        position: sticky;
        /*width: 5vw;*/
        left: 7.8%;
        background-color: mistyrose;
        /*border: solid 1px gray;*/
    }

    .fixedColumn3 {
        position: sticky;
        /*width: 5vw;*/
        left:11.7%;
        background-color: mistyrose;
        border-left:0;
        /*border: solid 1px gray;*/
    }

    .CheckBoxColor {
        background-color: rgb(255, 228, 225);
    }

    .CrockingColor {
        background-color: rgb(255, 250, 205);
    }

    .HeatColor {
        background-color: rgb(224, 255, 255);
    }

    .WashColor {
        background-color: rgb(173, 216, 230);
    }
</style>
<div class="main-content">
    <header class="page-header">
        <h3>
            <span>Fabric Crocking & Shrinkage Test</span>
        </h3>
        <div class="breadcrumb">
            <div>Home</div>
            <div class="current">Fabric Crocking & Shrinkage Test</div>
        </div>
    </header>
    <div class="main-area">
        <div class="content-scroll">
            <div class="inner-scroll">
                <div>
                    @using (Html.BeginForm("Index", ViewContext.RouteData.GetRequiredString("Controller"), FormMethod.Post, new { id = "QueryForm" }))
                    {
                        @*查詢*@
                        <div class="row rowHeader">
                            <div class="col-auto">
                                <p class="InfoTitle White">SP</p>
                            </div>
                            <div class="col-auto">
                                <input id="POID" name="POID" type="text" value="@ViewBag.POID" />
                            </div>
                            <div class="col-auto">
                                <button id="btnQuery" type="submit" class="site-btn btn-gy font1rem Black" style="padding: 0.4em;">Query</button>
                            </div>
                        </div>
                    }

                    @*按鈕*@
                    <div style="margin-top: 1em;">
                        <table id="ButtonMode">
                            <tbody>
                                <tr>
                                    <td>
                                        <h4 id="Edit" style="margin-right: 1em;">
                                            <img src="~/Image/Icon/Edit.png" width="30" />
                                            Edit
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="Save" style="margin-right: 1em;">
                                            <img src="~/Image/Icon/Save.png" width="30" />
                                            Save
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="Undo" style="margin-right: 1em;">
                                            <img src="~/Image/Icon/Undo.png" width="30" />
                                            Undo
                                        </h4>
                                    </td>
                                    <td style="width: 70%;">
                                    </td>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div>
                    @*明細*@
                    <div style="margin-top: 1em;">
                        <table class="DataTable MainTable">
                            <tbody>
                                <tr>
                                    <td style="width: 10vw;"><h5>SP#</h5></td>
                                    <td style="width: 20vw;">
                                        @Html.TextBoxFor(o => o.Main.POID, new { @readonly = "readonly" })
                                    </td>
                                    <td style="width: 10vw;"><h5>Style</h5></td>
                                    <td style="width: 20vw;">
                                        @Html.DisplayFor(o => o.Main.StyleID)
                                    </td>
                                    <td style="width: 10vw;"><h5>Brand</h5></td>
                                    <td style="width: 20vw;">
                                        @Html.DisplayFor(o => o.Main.BrandID)
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>Season</h5></td>
                                    <td>
                                        @Html.DisplayFor(o => o.Main.SeasonID)
                                    </td>
                                    <td><h5>Earliest Est. Cutting Date</h5></td>
                                    <td>
                                        @Html.ValueFor(o => o.Main.CutInline, "{0:yyyy/MM/dd}")
                                    </td>
                                    <td><h5>Earliest SCI Del</h5></td>
                                    <td>
                                        @Html.ValueFor(o => o.Main.MinSciDelivery, "{0:yyyy/MM/dd}")
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>Target Lead Time</h5></td>
                                    <td>
                                        @Html.ValueFor(o => o.Main.TargetLeadTime, "{0:yyyy/MM/dd}")
                                    </td>
                                    <td><h5>Completion Date</h5></td>
                                    <td>
                                        @Html.ValueFor(o => o.Main.CompletionDate, "{0:yyyy/MM/dd}")
                                    </td>
                                    <td><h5>% of Inspection</h5></td>
                                    <td>
                                        @Html.DisplayFor(o => o.Main.FIRLabInspPercent)
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>Mtl Cmplt (SP)</h5></td>
                                    <td>
                                        @Model.Main.complete
                                    </td>
                                    <td><h5>Remark</h5></td>
                                    <td colspan="3">
                                        @Html.TextBoxFor(o => o.Main.FirLaboratoryRemark, new { @style = "width:100%" })
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>Create By</h5></td>
                                    <td colspan="2">
                                        @Html.DisplayFor(o => o.Main.CreateBy)
                                    </td>
                                    <td><h5>Edit By</h5></td>
                                    <td colspan="2">
                                        @Html.DisplayFor(o => o.Main.EditBy)
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>


                <div class="bodyDiv" style="overflow:auto;">

                    <div class="detailDataDiv">
                        <br />
                        <div class="DetailDataArea">
                            <!--#region Head-->
                            <div class="DetailDataAreaItem1 colHead fixedColumn1">Report No</div>
                            <div class="DetailDataAreaItem2 colHead fixedColumn2">Seq</div>
                            <div class="DetailDataAreaItem1 colHead fixedColumn3">WKNo</div>
                            <div class="DetailDataAreaItem1 colHead">Arrive W/H Date</div>
                            <div class="DetailDataAreaItem3 colHead">SCI Refno</div>
                            <div class="DetailDataAreaItem1 colHead">Refno</div>
                            <div class="DetailDataAreaItem1 colHead">Color</div>
                            <div class="DetailDataAreaItem1 colHead">Supplier</div>
                            <div class="DetailDataAreaItem1 colHead">Arrive Qty</div>
                            <div class="DetailDataAreaItem1 colHead">Sample Rcv. Date</div>
                            <div class="DetailDataAreaItem1 colHead">Insp. Deadline</div>
                            <div class="DetailDataAreaItem1 colHead">All Result</div>
                            <div class="DetailDataAreaItem1 colHead">
                                Crocking N/A<br />
                                <input id="selectAllCrocking" type="checkbox" class="CanEdit" name="name" />
                            </div>
                            <div class="DetailDataAreaItem1 colHead">Crocking Result</div>
                            <div class="DetailDataAreaItem1 colHead">Crocking Test Date</div>
                            <div class="DetailDataAreaItem1 colHead">Remark</div>
                            <div class="DetailDataAreaItem1 colHead">
                                HT N/A<br />
                                <input id="selectAllHT" type="checkbox" class="CanEdit" name="name" />
                            </div>
                            <div class="DetailDataAreaItem1 colHead">Heat Result</div>
                            <div class="DetailDataAreaItem1 colHead">Heat Last Test Date</div>
                            <div class="DetailDataAreaItem1 colHead">Remark</div>
                            <div class="DetailDataAreaItem1 colHead">
                                Iron N/A<br />
                                <input id="selectAllIron" type="checkbox" class="CanEdit" name="name" />
                            </div>
                            <div class="DetailDataAreaItem1 colHead">Iron Result</div>
                            <div class="DetailDataAreaItem1 colHead">Iron Last Test Date</div>
                            <div class="DetailDataAreaItem1 colHead">Remark</div>

                            <div class="DetailDataAreaItem1 colHead">
                                Wash N/A<br />
                                <input id="selectAllWash" type="checkbox" class="CanEdit" name="name" />
                            </div>
                            <div class="DetailDataAreaItem1 colHead">Wash Result</div>
                            <div class="DetailDataAreaItem1 colHead">Wash Last Test Date</div>
                            <div class="DetailDataAreaItem1 colHead">Remark</div>
                            <div class="DetailDataAreaItem1 colHead">Receiving</div>
                            <div class="DetailDataAreaItem1 colHead">Crocking</div>
                            <div class="DetailDataAreaItem1 colHead">Heat</div>
                            <div class="DetailDataAreaItem1 colHead">Iron</div>
                            <div class="DetailDataAreaItem1 colHead">Wash</div>

                            <!--#endregion-->

                            @if (Model.Details != null)
                            {
                                for (int i = 0; i < Model.Details.Count; i++)
                                {
                                    string rowName = $@"Row{i}";
                                    string styleColor = string.Empty;
                                    string controllerName = ViewContext.RouteData.GetRequiredString("Controller");

                                    <div class="detailRow" style="width:100%;display:flex;">

                                        <div class="DetailDataAreaItem1 colBody @rowName fixedColumn1">
                                            @Html.DisplayFor(modelItem => Model.Details[i].ReportNo)
                                        </div>
                                        <div class="DetailDataAreaItem2 colBody @rowName fixedColumn2">
                                            @Html.HiddenFor(modelItem => Model.Details[i].ID)
                                            @Html.DisplayFor(modelItem => Model.Details[i].Seq)
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody @rowName fixedColumn3">
                                            @Html.DisplayFor(modelItem => Model.Details[i].WKNo)
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody @rowName">
                                            @Html.ValueFor(modelItem => Model.Details[i].WhseArrival, "{0:yyyy/MM/dd}")
                                        </div>
                                        <div class="DetailDataAreaItem3 colBody @rowName">
                                            @Html.DisplayFor(modelItem => Model.Details[i].SCIRefno)
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody @rowName">
                                            @Html.DisplayFor(modelItem => Model.Details[i].Refno)
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody @rowName">
                                            @Html.DisplayFor(modelItem => Model.Details[i].ColorID)
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody @rowName">
                                            @Html.DisplayFor(modelItem => Model.Details[i].Supplier)
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody @rowName">
                                            @Html.DisplayFor(modelItem => Model.Details[i].ArriveQty)
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody" style="background-color:rgb(255, 228, 225)">
                                            @Html.TextBoxFor(modelItem => Model.Details[i].ReceiveSampleDate, "{0:yyyy/MM/dd}", new { @class = "date-picker CanEdit ReceiveSampleDate", @style = "width: 100%;background-color:rgb(255, 228, 225);" })
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody @rowName">
                                            @Html.ValueFor(modelItem => Model.Details[i].InspDeadline, "{0:yyyy/MM/dd}")
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody @rowName">
                                            @{
                                                if (Model.Details[i].AllResult == "Pass")
                                                {
                                                    styleColor = "blue";
                                                }
                                                else
                                                {
                                                    styleColor = "red";
                                                }
                                            }
                                            <font color="@styleColor">@Html.DisplayFor(modelItem => Model.Details[i].AllResult)</font>
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody CheckBoxColor @rowName">
                                            @Html.CheckBox("Details[" + i + "].NonCrocking", Convert.ToBoolean(Model.Details[i].NonCrocking), new { @class = "NonCrocking CanEdit" })
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody CrockingColor @rowName">
                                            @{
                                                if (Model.Details[i].Crocking == "Pass")

                                                {
                                                    styleColor = "blue";
                                                }
                                                else
                                                {
                                                    styleColor = "red";
                                                }
                                            }
                                            <font color="@styleColor">@Html.DisplayFor(modelItem => Model.Details[i].Crocking)</font>
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody CrockingColor @rowName">
                                            @Html.ValueFor(modelItem => Model.Details[i].CrockingDate, "{0:yyyy/MM/dd}")
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody CrockingColor @rowName">
                                            @Html.DisplayFor(modelItem => Model.Details[i].CrockingRemark)
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody CheckBoxColor @rowName">
                                            @Html.CheckBox("Details[" + i + "].NonHeat", Convert.ToBoolean(Model.Details[i].NonHeat), new { @class = "NonHeat CanEdit" })
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody HeatColor @rowName">
                                            @{
                                                if (Model.Details[i].Heat == "Pass")

                                                {
                                                    styleColor = "blue";
                                                }
                                                else
                                                {
                                                    styleColor = "red";
                                                }
                                            }
                                            <font color="@styleColor">@Html.DisplayFor(modelItem => Model.Details[i].Heat)</font>
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody HeatColor @rowName">
                                            @Html.ValueFor(modelItem => Model.Details[i].HeatDate, "{0:yyyy/MM/dd}")
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody HeatColor @rowName">
                                            @Html.DisplayFor(modelItem => Model.Details[i].HeatRemark)
                                        </div>

                                        <div class="DetailDataAreaItem1 colBody CheckBoxColor @rowName">
                                            @Html.CheckBox("Details[" + i + "].NonIron", Convert.ToBoolean(Model.Details[i].NonIron), new { @class = "NonIron CanEdit" })
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody IronColor @rowName">
                                            @{
                                                if (Model.Details[i].Iron == "Pass")

                                                {
                                                    styleColor = "blue";
                                                }
                                                else
                                                {
                                                    styleColor = "red";
                                                }
                                            }
                                            <font color="@styleColor">@Html.DisplayFor(modelItem => Model.Details[i].Iron)</font>
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody IronColor @rowName">
                                            @Html.ValueFor(modelItem => Model.Details[i].IronDate, "{0:yyyy/MM/dd}")
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody IronColor @rowName">
                                            @Html.DisplayFor(modelItem => Model.Details[i].IronRemark)
                                        </div>

                                        <div class="DetailDataAreaItem1 colBody CheckBoxColor @rowName">
                                            @Html.CheckBox("Details[" + i + "].NonWash", Convert.ToBoolean(Model.Details[i].NonWash), new { @class = "NonWash CanEdit" })
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody WashColor @rowName">
                                            @{
                                                if (Model.Details[i].Wash == "Pass")
                                                {
                                                    styleColor = "blue";
                                                }
                                                else
                                                {
                                                    styleColor = "red";
                                                }
                                            }
                                            <font color="@styleColor">@Html.DisplayFor(modelItem => Model.Details[i].Wash)</font>
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody WashColor @rowName">
                                            @Html.ValueFor(modelItem => Model.Details[i].WashDate, "{0:yyyy/MM/dd}")
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody WashColor @rowName">
                                            @Html.DisplayFor(modelItem => Model.Details[i].WashRemark)
                                        </div>
                                        <div class="DetailDataAreaItem1 colBody @rowName">
                                            @Html.DisplayFor(modelItem => Model.Details[i].ReceivingID)
                                        </div>

                                        <div class="DetailDataAreaItem1 colBody @rowName"><a class="link" href="@Url.Action("CrockingTest", @controllerName)?ID=@Model.Details[i].ID">CrockingTest</a></div>
                                        <div class="DetailDataAreaItem1 colBody @rowName"><a class="link" href="@Url.Action("HeatTest", @controllerName)?ID=@Model.Details[i].ID">HeatTest</a></div>
                                        <div class="DetailDataAreaItem1 colBody @rowName"><a class="link" href="@Url.Action("IronTest", @controllerName)?ID=@Model.Details[i].ID">IronTest</a></div>
                                        <div class="DetailDataAreaItem1 colBody @rowName"><a class="link" href="@Url.Action("WashTest", @controllerName)?ID=@Model.Details[i].ID">WashTest</a></div>
                                    </div>
                                }
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var msg;
    var EditMode;
    $(function () {
        msg = new MessagerAlert();
        EditMode = false;
        IsEditModeChange();
        @Html.Raw(Model.ErrorMessage)


        $("#selectAllCrocking").mousedown(function () {

            var oldValue = $(this).prop('checked');

            $('.NonCrocking').prop('checked', !oldValue);
            $('.NonCrocking').attr('checked', !oldValue);
        });

        $("#selectAllHT").mousedown(function () {

            var oldValue = $(this).prop('checked');

            $('.NonHeat').prop('checked', !oldValue);
            $('.NonHeat').attr('checked', !oldValue);
        });

        $("#selectAllIron").mousedown(function () {

            var oldValue = $(this).prop('checked');

            $('.NonIron').prop('checked', !oldValue);
            $('.NonIron').attr('checked', !oldValue);
        });

        $("#selectAllWash").mousedown(function () {

            var oldValue = $(this).prop('checked');

            $('.NonWash').prop('checked', !oldValue);
            $('.NonWash').attr('checked', !oldValue);
        });

        if (!$("body").hasClass("sidebar-collapse")) {
            $(".menu-trigger").click();
        }
    });

    function IsEditModeChange() {
        EditModeButtionBind();

        if (EditMode) {
            // 可編輯欄位開啟
            $('.CanEdit').removeAttr("disabled");
            $('.CanEdit').removeAttr("readonly");

            $('.ReceiveSampleDate').addClass('date-picker');
            $('.date-picker').datepicker({ changeYear: true, changeMonth: true, currentText: "Now" });

            $(".rowHeader input[type='text']").attr("disabled", "disabled");
            $(".rowHeader input[type='button']").unbind('click').addClass("IsEditModeQuery");
            $('#btnQuery').addClass("IsEditModeQuery");

            $("#Edit").removeClass("IsEditMode");
            $('#Save, #Undo, #New').addClass("IsEditMode");

            $(".link").hide();
        }
        else {
            $(".rowHeader input[type='text']").removeAttr("disabled");
            $(".rowHeader input[type='button']").removeClass("IsEditModeQuery");
            $('#Save, #Undo, #New').unbind('click').removeClass("IsEditMode");


            $('.ReceiveSampleDate').removeClass('date-picker');
            // 可編輯欄位關閉
            $('.DetailDataAreaItem1 select ,.DetailDataAreaItem2 select ,.DetailDataAreaItem3 select').attr("disabled", true);
            $('.DetailDataAreaItem1 input ,.DetailDataAreaItem2 input ,.DetailDataAreaItem3 input').attr("readonly", "readonly");
            $('.DetailDataAreaItem1 input[type="checkbox"] ,.DetailDataAreaItem2 input[type="checkbox"] ,.DetailDataAreaItem3 input[type="checkbox"]').attr("disabled", true);

            $(".link").show();
            if ('@Model.Main.POID' != '') {
                $("#Edit").addClass("IsEditMode");
            }
        }
    }

    function EditModeButtionBind() {
        $('#Edit').on('click', function () {
            if ('@Model.Main.POID' != '') {
                EditMode = true;
                IsEditModeChange();
            }
        });

        $('#Save').on('click', function (e) {
            var detail = [];
            var ErrMsg = "";

            if (ErrMsg != "") {
                msg.WithError(ErrMsg);
                return;
            }

            var main = {
                POID: $('#Main_POID').val(),
                FirLaboratoryRemark: $('#Main_FirLaboratoryRemark').val(),
            };

            var detail = [];
            var ErrMsg = "";
            $('.detailRow').each(function (index, value) {
                detail.push({
                    ID: parseInt($('#Details_' + index + '__ID').val()),
                    ReceiveSampleDate: $('#Details_' + index + '__ReceiveSampleDate').val(),
                    NonCrocking: $('#Details_' + index + '__NonCrocking').prop("checked"),
                    NonHeat: $('#Details_' + index + '__NonHeat').prop("checked"),
                    NonIron: $('#Details_' + index + '__NonIron').prop("checked"),
                    NonWash: $('#Details_' + index + '__NonWash').prop("checked"),
                });
            });

            $.ajax({
                url: "@Url.Action("SaveIndex", "FabricCrkShrkTest", new { Area = "BulkFGT" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ main: main, detail: detail }),
                async: false,
                success: function (data) {
                    if (data.Result) {
                        msg.WithSuccesCheck("Success", function () {
                            $(".rowHeader input[type='text']").removeAttr("disabled");
                            document.getElementById("QueryForm").submit();
                        });
                    }
                    else {
                        msg.WithError(data.ErrorMessage);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $('#Undo').on('click', function () {
            EditMode = false;
            IsEditModeChange();
            $('#btnQuery').click();
        });
    }
</script>