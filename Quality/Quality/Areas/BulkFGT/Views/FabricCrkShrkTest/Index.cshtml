
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model DatabaseObject.ResultModel.FabricCrkShrkTest_Result
<link href="~/ThirdParty/plugins/DataTables/datatables.min.css" rel="stylesheet" />
<link href="~/ThirdParty/SciCustom/css/TableStyle.css" rel="stylesheet" />
<script src="~/ThirdParty/plugins/DataTables/datatables.min.js"></script>
<link href="~/ThirdParty/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" />
<style type="text/css">

    tr.row-name {
        color: black;
    }

    .row {
        --bs-gutter-x: 1.5rem;
        --bs-gutter-y: 0;
        display: flex;
        flex-wrap: wrap;
        width: 95vw;
        margin-top: calc(var(--bs-gutter-y) * -1);
        margin-right: calc(var(--bs-gutter-x)/ -2);
        margin-left: calc(var(--bs-gutter-x)/ -2);
    }

    .button {
        background-color: #E00000; /* Red */
        border: none;
        color: white;
        padding: 6px 16px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
    }

    .row > * {
        flex-shrink: 0;
        width: 100%;
        max-width: 100%;
        padding-left: calc(var(--bs-gutter-x)/ 2);
    }

    .rowHeader {
        font-size: 1.1vw;
        font-weight: bold;
    }

        .rowHeader input[type="text"] {
            width: 10vw;
        }

    .col-auto {
        width: auto;
    }

        .col-auto > p {
            padding: 0
        }

    .White {
        color: white !important;
    }

    .Black {
        color: black !important;
    }

    .IsEditMode {
        color: white !important;
        cursor: pointer;
    }

    .IsEditModeQuery {
        color: gray !important;
        cursor: no-drop;
    }

    #ButtonMode {
        width: 92vw;
    }

    #myCartons_info, #myEndlineMoisture_info, #myView_info {
        color: white
    }

    .table_div tr td:nth-child(2n+1) {
        font-size: 1.2em;
        font-weight: bold;
    }


    .DataTable {
        width: 92vw;
        font-size: 1rem;
        font-weight: bold;
        border: solid 1px black;
        background-color: white;
    }

        .DataTable > tbody img {
            cursor: pointer;
        }

        .DataTable > tbody > tr:nth-of-type(odd) {
            background-color: #ffffff;
        }

        .DataTable > tbody > tr:nth-of-type(even) {
            background-color: #F0F2F2;
        }

        .DataTable > tbody > tr > td {
            border: solid 1px gray;
            padding: 0.5em;
            vertical-align: middle;
        }

    .CheckBoxColor {
        background-color: rgb(255, 228, 225);
    }

    .CrockingColor {
        background-color: rgb(255, 250, 205);
    }

    .HeatColor {
        background-color: rgb(224, 255, 255);
    }

    .WashColor {
        background-color: rgb(173, 216, 230);
    }
</style>
<div class="main-content">
    <header class="page-header">
        <h3>
            <span>Fabric Crocking & Shrinkage Test</span>
        </h3>
        <div class="breadcrumb">
            <div>Home</div>
            <div class="current">Fabric Crocking & Shrinkage Test</div>
        </div>
    </header>
    <div class="main-area">
        <div class="content-scroll">
            <div class="inner-scroll">
                <div>
                    @using (Html.BeginForm("Index", ViewContext.RouteData.GetRequiredString("Controller"), FormMethod.Post, new { id = "QueryForm" }))
                    {
                        @*查詢*@
                        <div class="row rowHeader">
                            <div class="col-auto">
                                <p class="InfoTitle White">SP</p>
                            </div>
                            <div class="col-auto">
                                <input id="POID" name="POID" type="text" value="@ViewBag.POID" />
                            </div>
                            <div class="col-auto">
                                <button id="btnQuery" type="submit" class="site-btn btn-gy font1rem Black" style="padding: 0.4em;">Query</button>
                            </div>
                        </div>
                    }

                    @*按鈕*@
                    <div style="margin-top: 1em;">
                        <table id="ButtonMode">
                            <tbody>
                                <tr>
                                    <td>
                                        <h4 id="Edit" style="margin-right: 1em;">
                                            <img src="~/Image/Icon/Edit.png" width="30" />
                                            Edit
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="Save" style="margin-right: 1em;">
                                            <img src="~/Image/Icon/Save.png" width="30" />
                                            Save
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="Undo" style="margin-right: 1em;">
                                            <img src="~/Image/Icon/Undo.png" width="30" />
                                            Undo
                                        </h4>
                                    </td>
                                    <td style="width: 70%;">
                                    </td>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div>
                    @*明細*@
                    <div style="margin-top: 1em;">
                        <table class="DataTable MainTable">
                            <tbody>
                                <tr>
                                    <td style="width: 10vw;"><h5>SP#</h5></td>
                                    <td style="width: 20vw;">
                                        @Html.TextBoxFor(o => o.Main.POID, new { @readonly = "readonly" })
                                    </td>
                                    <td style="width: 10vw;"><h5>Style</h5></td>
                                    <td style="width: 20vw;">
                                        @Html.DisplayFor(o => o.Main.StyleID)
                                    </td>
                                    <td style="width: 10vw;"><h5>Brand</h5></td>
                                    <td style="width: 20vw;">
                                        @Html.DisplayFor(o => o.Main.BrandID)
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>Season</h5></td>
                                    <td>
                                        @Html.DisplayFor(o => o.Main.SeasonID)
                                    </td>
                                    <td><h5>Earliest Est. Cutting Date</h5></td>
                                    <td>
                                        @Html.ValueFor(o => o.Main.CutInline, "{0:yyyy/MM/dd}")
                                    </td>
                                    <td><h5>Earliest SCI Del</h5></td>
                                    <td>
                                        @Html.ValueFor(o => o.Main.MinSciDelivery, "{0:yyyy/MM/dd}")
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>Target Lead Time</h5></td>
                                    <td>
                                        @Html.ValueFor(o => o.Main.TargetLeadTime, "{0:yyyy/MM/dd}")
                                    </td>
                                    <td><h5>Completion Date</h5></td>
                                    <td>
                                        @Html.ValueFor(o => o.Main.CompletionDate, "{0:yyyy/MM/dd}")
                                    </td>
                                    <td><h5>% of Inspection</h5></td>
                                    <td>
                                        @Html.DisplayFor(o => o.Main.FIRLabInspPercent)
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>Mtl Cmplt (SP)</h5></td>
                                    <td>
                                        @Model.Main.complete
                                    </td>
                                    <td><h5>Remark</h5></td>
                                    <td colspan="3">
                                        @Html.TextBoxFor(o => o.Main.FirLaboratoryRemark, new { @style = "width:100%" })
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>Create By</h5></td>
                                    <td colspan="2">
                                        @Html.DisplayFor(o => o.Main.CreateBy)
                                    </td>
                                    <td><h5>Edit By</h5></td>
                                    <td colspan="2">
                                        @Html.DisplayFor(o => o.Main.EditBy)
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <div style="margin-top: 1em;overflow:auto">
                    <table cellspacing="100" class="DataTable DetailTable table table-striped display;" style="width: 250vw">
                        <thead>
                            <tr class="row-name" id="row-name">
                                <th style="width:5vw">Report No</th>
                                <th style="width:5vw">Seq</th>
                                <th style="width:5vw">WKNo</th>
                                <th style="width:5vw">Arrive W/H Date</th>
                                <th style="width:5vw">SCI Refno</th>
                                <th style="width:5vw">Refno</th>
                                <th style="width:5vw">Color</th>
                                <th style="width:5vw">Supplier</th>
                                <th style="width:5vw">Arrive Qty</th>
                                <th style="width:5vw">Sample Rcv. Date</th>
                                <th style="width:5vw">Insp. Deadline</th>
                                <th style="width:5vw">All Result</th>
                                <th style="width:5vw">
                                    Crocking N/A<br />
                                    <input id="selectAllCrocking" type="checkbox" name="name" />
                                </th>
                                <th style="width:5vw">Crocking Result</th>
                                <th style="width:5vw">Crocking Test Date</th>
                                <th style="width:5vw">Remark</th>
                                <th style="width:5vw">
                                    HT N/A<br />
                                    <input id="selectAllHT" type="checkbox" name="name" />
                                </th>
                                <th style="width:5vw">Heat Result</th>
                                <th style="width:5vw">Heat Last Test Date</th>
                                <th style="width:5vw">Remark</th>
                                <th style="width:5vw">
                                    Wash N/A<br />
                                    <input id="selectAllWash" type="checkbox" name="name" />
                                </th>
                                <th style="width:5vw">Wash Result</th>
                                <th style="width:5vw">Wash Last Test Date</th>
                                <th style="width:5vw">Remark</th>
                                <th style="width:5vw">Receiving</th>
                                <th style="width:5vw">Crocking</th>
                                <th style="width:5vw">Heat</th>
                                <th style="width:5vw">Wash</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.Details.Count; i++)
                            {
                                string styleColor = string.Empty;
                                <tr class="row-content" style="vertical-align: middle; text-align: center;">
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.Details[i].ReportNo)
                                    </td>
                                    <td>
                                        @Html.HiddenFor(modelItem => Model.Details[i].ID)
                                        @Html.DisplayFor(modelItem => Model.Details[i].Seq)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.Details[i].WKNo)
                                    </td>
                                    <td>
                                        @Html.ValueFor(modelItem => Model.Details[i].WhseArrival, "{0:yyyy/MM/dd}")
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.Details[i].SCIRefno)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.Details[i].Refno)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.Details[i].ColorID)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.Details[i].Supplier)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.Details[i].ArriveQty)
                                    </td>
                                    <td style="background-color:rgb(255, 228, 225)">
                                        @Html.TextBoxFor(modelItem => Model.Details[i].ReceiveSampleDate, "{0:yyyy/MM/dd}", new { @class = "date-picker" })
                                    </td>
                                    <td>
                                        @Html.ValueFor(modelItem => Model.Details[i].InspDeadline, "{0:yyyy/MM/dd}")
                                    </td>
                                    <td>
                                        @{
                                            if (Model.Details[i].AllResult == "Pass")
                                            {
                                                styleColor = "blue";
                                            }
                                            else
                                            {
                                                styleColor = "red";
                                            }
                                        }
                                        <font color="@styleColor">@Html.DisplayFor(modelItem => Model.Details[i].AllResult)</font>
                                    </td>
                                    <td class="CheckBoxColor">
                                        @Html.CheckBox("Details[" + i + "].NonCrocking", Convert.ToBoolean(Model.Details[i].NonCrocking), new { @class = "NonCrocking" })
                                    </td>
                                    <td class="CrockingColor">
                                        @{
                                            if (Model.Details[i].Crocking == "Pass")

                                            {
                                                styleColor = "blue";
                                            }
                                            else
                                            {
                                                styleColor = "red";
                                            }
                                        }
                                        <font color="@styleColor">@Html.DisplayFor(modelItem => Model.Details[i].Crocking)</font>
                                    </td>
                                    <td class="CrockingColor">
                                        @Html.ValueFor(modelItem => Model.Details[i].CrockingDate, "{0:yyyy/MM/dd}")
                                    </td>
                                    <td class="CrockingColor">
                                        @Html.DisplayFor(modelItem => Model.Details[i].CrockingRemark)
                                    </td>
                                    <td class="CheckBoxColor">
                                        @Html.CheckBox("Details[" + i + "].NonHeat", Convert.ToBoolean(Model.Details[i].NonHeat), new { @class = "NonHeat" })
                                    </td>
                                    <td class="HeatColor">
                                        @{
                                            if (Model.Details[i].Heat == "Pass")

                                            {
                                                styleColor = "blue";
                                            }
                                            else
                                            {
                                                styleColor = "red";
                                            }
                                        }
                                        <font color="@styleColor">@Html.DisplayFor(modelItem => Model.Details[i].Heat)</font>
                                    </td>
                                    <td class="HeatColor">
                                        @Html.ValueFor(modelItem => Model.Details[i].HeatDate, "{0:yyyy/MM/dd}")
                                    </td>
                                    <td class="HeatColor">
                                        @Html.DisplayFor(modelItem => Model.Details[i].HeatRemark)
                                    </td>
                                    <td class="CheckBoxColor">
                                        @Html.CheckBox("Details[" + i + "].NonWash", Convert.ToBoolean(Model.Details[i].NonWash), new { @class = "NonWash" })
                                    </td>
                                    <td class="WashColor">
                                        @{
                                            if (Model.Details[i].Wash == "Pass")
                                            {
                                                styleColor = "blue";
                                            }
                                            else
                                            {
                                                styleColor = "red";
                                            }
                                        }
                                        <font color="@styleColor">@Html.DisplayFor(modelItem => Model.Details[i].Wash)</font>
                                    </td>
                                    <td class="WashColor">
                                        @Html.ValueFor(modelItem => Model.Details[i].WashDate, "{0:yyyy/MM/dd}")
                                    </td>
                                    <td class="WashColor">
                                        @Html.DisplayFor(modelItem => Model.Details[i].WashRemark)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.Details[i].ReceivingID)
                                    </td>
                                    @{
                                        string controllerName = ViewContext.RouteData.GetRequiredString("Controller");
                                    }

                                    <td><a class="link" href="@Url.Action("CrockingTest", @controllerName)?ID=@Model.Details[i].ID">CrockingTest</a></td>
                                    <td><a class="link" href="@Url.Action("HeatTest", @controllerName)?ID=@Model.Details[i].ID">HeatTest</a></td>
                                    <td><a class="link" href="@Url.Action("WashTest", @controllerName)?ID=@Model.Details[i].ID">WashTest</a></td>
                                </tr>
                            }
                        </tbody>

                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var msg;
    var EditMode;
    $(function () {
        msg = new MessagerAlert();
        EditMode = false;
        IsEditModeChange();
        @Html.Raw(Model.ErrorMessage)


        $("#selectAllCrocking").mousedown(function () {

            var oldValue = $(this).prop('checked');

            $('.NonCrocking').prop('checked', !oldValue);
            $('.NonCrocking').attr('checked', !oldValue);
        });

        $("#selectAllHT").mousedown(function () {

            var oldValue = $(this).prop('checked');

            $('.NonHeat').prop('checked', !oldValue);
            $('.NonHeat').attr('checked', !oldValue);
        });

        $("#selectAllWash").mousedown(function () {

            var oldValue = $(this).prop('checked');

            $('.NonWash').prop('checked', !oldValue);
            $('.NonWash').attr('checked', !oldValue);
        });

        if (!$("body").hasClass("sidebar-collapse")) {
            $(".menu-trigger").click();
        }
    });

    function IsEditModeChange() {
        EditModeButtionBind();

        if (EditMode) {
            $(".rowHeader input[type='text']").attr("disabled", "disabled");
            $(".rowHeader input[type='button']").unbind('click').addClass("IsEditModeQuery");
            $('#btnQuery').addClass("IsEditModeQuery");

            $("#Edit").removeClass("IsEditMode");
            $('#Save, #Undo, #New').addClass("IsEditMode");
            $(".DataTable input").removeAttr("disabled", "disabled");
            $(".link").hide();
        }
        else {
            $(".rowHeader input[type='text']").removeAttr("disabled");
            $(".rowHeader input[type='button']").removeClass("IsEditModeQuery");
            $('#Save, #Undo, #New').unbind('click').removeClass("IsEditMode");
            $(".DataTable input").attr("disabled", "disabled");
            $(".link").show();
            if ('@Model.Main.POID' != '') {
                $("#Edit").addClass("IsEditMode");
            }
        }
    }

    function EditModeButtionBind() {
        $('#Edit').on('click', function () {
            if ('@Model.Main.POID' != '') {
                EditMode = true;
                IsEditModeChange();
            }
        });

        $('#Save').on('click', function (e) {
            var detail = [];
            var ErrMsg = "";

            if (ErrMsg != "") {
                msg.WithError(ErrMsg);
                return;
            }

            var main = {
                POID: $('#Main_POID').val(),
                FirLaboratoryRemark: $('#Main_FirLaboratoryRemark').val(),
            };

            var detail = [];
            var ErrMsg = "";
            $('.DetailTable > tbody > tr').each(function (index, value) {
                detail.push({
                    ID: parseInt($('#Details_' + index + '__ID').val()),
                    ReceiveSampleDate: $('#Details_' + index + '__ReceiveSampleDate').val(),
                    NonCrocking: $('#Details_' + index + '__NonCrocking').prop("checked"),
                    NonHeat: $('#Details_' + index + '__NonHeat').prop("checked"),
                    NonWash: $('#Details_' + index + '__NonWash').prop("checked"),
                });
            });

            $.ajax({
                url: "@Url.Action("SaveIndex", "FabricCrkShrkTest", new { Area = "BulkFGT" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ main: main, detail: detail }),
                async: false,
                success: function (data) {
                    if (data.Result) {
                        msg.WithSuccesCheck("Success", function () {
                            $(".rowHeader input[type='text']").removeAttr("disabled");
                            document.getElementById("QueryForm").submit();
                        });
                    }
                    else {
                        msg.WithError(data.ErrorMessage);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $('#Undo').on('click', function () {
            EditMode = false;
            IsEditModeChange();
            $('#btnQuery').click();
        });
    }
</script>