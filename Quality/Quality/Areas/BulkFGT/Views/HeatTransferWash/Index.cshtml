@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/ThirdParty/plugins/DataTables/datatables.min.css" rel="stylesheet" />
<link href="~/ThirdParty/SciCustom/css/TableStyle.css" rel="stylesheet" />
<script src="~/ThirdParty/plugins/DataTables/datatables.min.js"></script>
<link href="~/ThirdParty/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" />

@model DatabaseObject.ViewModel.BulkFGT.HeatTransferWash_ViewModel

<style type="text/css">
    .input-group {
        display: flex
    }

        .input-group > input:nth-child(1) {
            flex-grow: 3
        }

        .input-group > input:nth-child(2) {
            flex-grow: 2
        }

        .input-group > input:nth-child(3) {
            flex-grow: 1
        }

    .DetailTable > tbody > tr > td > input[type="text"] {
        width: 100%;
    }

    .row {
        --bs-gutter-x: 1.5rem;
        --bs-gutter-y: 0;
        display: flex;
        flex-wrap: wrap;
        margin-top: calc(var(--bs-gutter-y) * -1);
        margin-right: calc(var(--bs-gutter-x)/ -2);
        margin-left: calc(var(--bs-gutter-x)/ -2);
    }

    .button {
        background-color: #E00000; /* Red */
        border: none;
        color: white;
        padding: 6px 16px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
    }

    .row > * {
        flex-shrink: 0;
        width: 100%;
        max-width: 100%;
        padding-left: calc(var(--bs-gutter-x)/ 2);
    }

    .rowHeader {
        font-size: 1.1vw;
        font-weight: bold;
    }

    .queryHeader select {
        width: 10vw;
    }

    .rowHeader input[type="text"] {
        width: 10vw;
    }

    .col-auto {
        width: auto;
    }

        .col-auto > p {
            padding: 0
        }

    .White {
        color: white !important;
    }

    .Black {
        color: black !important;
    }

    .IsEditMode {
        color: white !important;
        cursor: pointer;
    }

    .IsEditModeQuery {
        color: gray !important;
        cursor: no-drop;
    }

    #ButtonMode {
        width: 92vw;
    }

    .DataTable {
        width: 92vw;
        font-size: 1rem;
        font-weight: bold;
        border: solid 1px black;
        background-color: white;
    }

        .DataTable > tbody img {
            cursor: pointer;
        }

        .DataTable > tbody > tr:nth-of-type(odd) {
            background-color: #ffffff;
        }

        .DataTable > tbody > tr:nth-of-type(even) {
            background-color: #F0F2F2;
        }

        .DataTable > tbody > tr > td {
            border: solid 1px gray;
            padding: 0.5em;
            text-align: left;
            vertical-align: middle;
        }

        .DataTable input[type='text'], .DataTable input[type='number'] {
            width: 70%;
        }

    .bigSize {
        width: 3em;
        height: 2em;
    }
</style>

@using (Html.BeginForm("Index", ViewContext.RouteData.GetRequiredString("Controller"), new { }, FormMethod.Post, new { @id = "DetailForm" }))
{

    <div class="main-content">
        <header class="page-header">
            <div style="float:left">
                <h3>
                    <span>Daily HT Wash Test</span>
                </h3>
                <div class="breadcrumb">
                    <div>Home</div>
                    <div class="current">Daily HT Wash Test</div>
                </div>
            </div>
            <div class="breadcrumb queryHeader" style="justify-content: flex-end;">
                <h4 style="margin-right: 1em;color:white">Report No</h4>

                @Html.DropDownListFor(o => Model.Request.ReportNo, (List<SelectListItem>)Model.ReportNo_Source, new
                {
                    @value = Model.Request.ReportNo,
                    @onchange = "ReportNoChange(this.value)"
                })
                <input id="btnNew" type="button" class="button" style="margin-left:1em;border:0;cursor:pointer;" name="New" value="New">
            </div>
        </header>

        <div class="main-area">
            <div class="content-scroll">
                <div class="inner-scroll">
                    @*查詢列*@
                    <div class="row rowHeader">
                        <div class="col-auto">
                            <p class="InfoTitle White">Brand</p>
                        </div>
                        <div class="col-auto">
                            <input id="Request_BrandID" name="Request.BrandID" type="text" value="@Model.Request.BrandID">
                            <input id="btnBrandSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                        </div>
                        <div class="col-auto"><p class="InfoTitle White">Season</p></div>
                        <div class="col-auto">
                            <input id="Request_SeasonID" name="Request.SeasonID" type="text" value="@Model.Request.SeasonID">
                            <input id="btnSeasonSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                        </div>
                        <div class="col-auto"><p class="InfoTitle White">Style</p></div>
                        <div class="col-auto">
                            <input id="Request_StyleID" name="Request.StyleID" type="text" value="@Model.Request.StyleID">
                            <input id="btnStyleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                        </div>
                        <div class="col-auto"><p class="InfoTitle White">Article</p></div>
                        <div class="col-auto">
                            <input id="Request_Article" name="Request.Article" type="text" value="@Model.Request.Article">
                            <input id="btnArticleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                        </div>

                        <div class="col-auto">
                            <button id="btnQuery" type="submit" name="Action:Query" class="site-btn btn-gy font1rem Black" style="padding: 0.4em;">Query</button>
                        </div>
                    </div>

                    @*按鈕列*@
                    <div style="margin-top: 1em;">
                        <table id="ButtonMode">
                            <tbody>
                                <tr>
                                    <td>
                                        <h4 id="Edit" style="margin-right: 1em;">
                                            <img src="~/Image/Icon/Edit.png" width="30" />
                                            Edit
                                        </h4>
                                    </td>
                                    <td>
                                        @*<button id="Save" type="submit" style="margin:0;min-width:0;background-color:transparent">
                                                <img src="~/Image/Icon/Save.png" width="30" />
                                                Save
                                            </button>*@

                                        <input id="SaveSubmit" type="submit" name="action:Edit" style="display:none" />
                                        <h4 id="Save" style=" margin-right: 1em;">
                                            <img src="~/Image/Icon/Save.png" width="30" />
                                            Save
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="Undo" style="margin-right: 1em;">
                                            <img src="~/Image/Icon/Undo.png" width="30" />
                                            Undo
                                        </h4>
                                    </td>
                                    <td>
                                        <input id="DeleteSubmit" type="submit" name="action:Delete" style="display:none" />
                                        <h4 id="Delete" style=" margin-right: 1em;">
                                            <img src="~/Image/Icon/Delete.png" width="30" />
                                            Delete
                                        </h4>
                                    </td>
                                    <td>
                                        <input id="EncodeSubmit" type="submit" name="action:Encode" style="display:none" />
                                        <h4 id="Encode" style=" margin-right: 1em;">
                                            <img src="~/Image/Icon/Lock.png" width="30" />
                                            Encode
                                        </h4>
                                    </td>
                                    <td>
                                        <input id="AmendSubmit" type="submit" name="action:Amend" style="display:none" />
                                        <h4 id="Amend" style=" margin-right: 1em;">
                                            <img src="~/Image/Icon/Unlock.png" width="30" />
                                            Amend
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="Excel" style=" margin-right: 1em;">
                                            <img src="~/Image/Icon/XLS.png" width="30" />
                                            Excel
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="PDF" style="margin-right: 1em;">
                                            <img src="~/Image/Icon/PDF.png" width="30" />
                                            PDF
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="SendMail" style="margin-right: 1em;">
                                            <img src="~/Image/Icon/SendMail.png" width="30" />
                                            Send to MR
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="Picture" style=" margin-right: 1em;">
                                            <img src="~/Image/Icon/Camera.png" width="30" />
                                            Picture
                                        </h4>
                                    </td>
                                    <td style="width: 30%;">
                                    </td>
                                    <td align="right">
                                        <h4 id="New">
                                            <img src="~/Image/Icon/New.png" width="30" />
                                            New Item
                                        </h4>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    @*表頭*@
                    <div style="margin-top: 1em;">
                        <table class="DataTable">
                            <tbody>
                                <tr>
                                    <td style="width: 10vw;"><h5>Report No</h5></td>
                                    <td style="width: 20vw;">
                                        <input id="ReportNo" name="Main.ReportNo" readonly="readonly" type="text" value="@Model.Main.ReportNo">

                                        <input type="hidden" id="Main_ReportNo" name="Main.ReportNo" value="@Model.Main.ReportNo">
                                        <input type="hidden" id="Main_Status" name="Main.Status" value="@Model.Main.Status">
                                        <input type="hidden" id="Main_TestBeforePicture" name="Main.TestBeforePicture" value="@Model.Main.TestBeforePicture">
                                        <input type="hidden" id="Main_TestAfterPicture" name="Main.TestAfterPicture" value="@Model.Main.TestAfterPicture">
                                        <input type="hidden" id="Main_MRHandleEmail" name="Main.MRHandleEmail" value="@Model.Main.MRHandleEmail">
                                    </td>
                                    <td style="width: 10vw;"><h5>SP#</h5></td>
                                    <td style="width: 20vw;">
                                        @Html.TextBoxFor(o => o.Main.OrderID)
                                    </td>
                                    <td style="width: 10vw;"><h5>Brand</h5></td>
                                    <td style="width: 20vw;">
                                        @Html.TextBoxFor(o => o.Main.BrandID, new { @class = "Readonly" })
                                        @*<input id="btnDetailBrandSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />*@
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>Season</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.Main.SeasonID, new { @class = "Readonly" })
                                        @*<input id="btnDetailSeasonSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />*@
                                    </td>
                                    <td><h5>Style#</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.Main.StyleID, new { @class = "Readonly" })
                                        @*<input id="btnDetailStyleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />*@
                                    </td>
                                    <td><h5>Article</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.Main.Article, new { @class = "Readonly" })
                                        @*<input id="btnDetailArticleSelectItem" type="button" class="OnlyEdit site-btn btn-blue" style="margin:0;border:0;" value="..." />*@
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>Line#</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.Main.Line, new { @maxlength = "15", @class = "OnlyEdit" })
                                    </td>
                                    <td><h5>Machine#</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.Main.Machine, new { @maxlength = "15", @class = "OnlyEdit" })
                                    </td>
                                    <td><h5>Artwork</h5></td>
                                    <td>
                                        @Html.DropDownListFor(o=>o.Main.ArtworkTypeID, Model.ArtworkType_Source, new { @class = "OnlyEdit" ,@onchange= "ArtworkTypeListChange(this)" })
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>Teamwear</h5></td>
                                    <td>
                                        <div class="input-group">
                                            @Html.CheckBoxFor(o => o.Main.Teamwear, new { @class = "bigSize Readonly", @style = "flex-grow: 0;" })
                                            <label for="Main_Teamwear" style="padding: 5px;">Teamwear</label>
                                        </div>
                                    </td>
                                    <td><h5>Received Date</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.Main.ReceivedDate, "{0:yyyy/MM/dd}", new { @class = "date-picker OnlyEdit" })
                                    </td>
                                    <td><h5>Report Date</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.Main.ReportDate, "{0:yyyy/MM/dd}", new { @class = "date-picker Readonly" })
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>Remark</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.Main.Remark, new { @style = "width:100%;", @maxlength = "300", @class = "OnlyEdit" })
                                    </td>
                                    <td><h5>Result</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.Main.Result, new { @class = "Readonly" })
                                    </td>
                                    <td><h5>Last Edit Name</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.Main.LastEditName, new { @class = "Readonly" })
                                    </td>
                                </tr>
                                
                            </tbody>
                        </table>
                    </div>

                    @*表身*@
                    <div style="margin-top: 1em; width: 92vw; overflow:auto;">
                        <table cellspacing="100" class="DetailTable DataTable table table-striped display;" style="width: 263vw">
                            <thead>
                                <tr>

                                    <th style="width: 13vw;"><h4>Fabric Ref No.</h4></th>
                                    <th style="width: 13vw; "><h4>HT Ref No.</h4></th>
                                    <th style="width: 5vw;"><h4>HT-Temperature</h4></th>
                                    <th style="width: 6vw;"><h4>HT-Time(Sec)</h4></th>
                                    <th style="width: 6vw;"><h4>2nd HT-Time(Sec)</h4></th>
                                    <th style="width: 6vw; "><h4>HT-Pressure</h4></th>
                                    <th style="width: 5vw;"><h4>Peel Off</h4></th>
                                    <th style="width: 5vw;"><h4>Washing Cycles</h4></th>
                                    <th style="width: 5vw;"><h4>Washing ℃</h4></th>
                                    <th style="width: 3vw;"><h4>Result</h4></th>
                                    <th style="width: 20vw;"><h4>Remark</h4></th>
                                    <th style="width: 10vw;"><h4>Last Update</h4></th>
                                    <th style="width: 3vw;"><h4></h4></th>
                                </tr>

                            </thead>
                            <tbody>

                                @for (int i = 0; i <= Model.Details.Count - 1; i++)
                                {
                                    <tr>
                                        <td>
                                            <input idx='@i' type='hidden' />
                                            @Html.HiddenFor(o => Model.Details[i].ReportNo)
                                            @Html.HiddenFor(o => Model.Details[i].Ukey)
                                            @Html.TextBoxFor(o => Model.Details[i].FabricRefNo, "", new { @class = "OnlyEdit FabricRefNoTxt", @style = "width:80%;" })
                                            <input targetID='Details_@{@i}__FabricRefNo' type='button' class='btnRefnoSelectItem site-btn btn-blue' style='margin:0;border:0;' value='...' />
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(o => Model.Details[i].HTRefNo, "", new { @class = "OnlyEdit HTRefNoTxt", @style = "width:80%;" })
                                            <input targetID='Details_@{@i}__HTRefNo' type='button' class='btnHTRefNoSelectItem site-btn btn-blue' style='margin:0;border:0;' value='...' />
                                        </td>

                                        <td>
                                            @Html.TextBoxFor(o => Model.Details[i].Temperature, new { @class = "OnlyEdit", @type = "number" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(o => Model.Details[i].Time, new { @class = "OnlyEdit", @type = "number" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(o => Model.Details[i].SecondTime, new { @class = "OnlyEdit", @type = "number" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(o => Model.Details[i].Pressure, new { @class = "OnlyEdit", @type = "number", @onchange = "value=PressureCheck(value)" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(o => Model.Details[i].PeelOff, new { @class = "OnlyEdit", @maxlength = "5" })
                                        </td>
                                        <td>
                                            <select id="Details_@{@i}__Cycles" name="Details[@{@i}].Cycles">
                                                @foreach (var item in (List<SelectListItem>)Model.Cycles_Source)
                                                {
                                                    string selected = item.Text.Equals(Model.Details[i].Cycles.ToString()) ? "selected" : "";
                                                    <option value="@item.Value" @selected>@item.Text</option>
                                                }
                                            </select>

                                        </td>
                                        <td>
                                            <select id="Details_@{@i}__TemperatureUnit" name="Details[@{@i}].TemperatureUnit">
                                                @foreach (var item in (List<SelectListItem>)Model.TemperatureUnit_Source)
                                                {
                                                    string selected = item.Text.Equals(Model.Details[i].TemperatureUnit.ToString()) ? "selected" : "";
                                                    <option value="@item.Value" @selected>@item.Text</option>
                                                }
                                            </select>
                                        </td>
                                        <td>
                                            <select id="Details_@{@i}__Result" name="Details[@{@i}].Result">
                                                @foreach (var item in (List<SelectListItem>)Model.PassFail_Source)
                                                {
                                                    string selected = item.Text.Equals(Model.Details[i].Result) ? "selected" : "";
                                                    <option value="@item.Value" @selected>@item.Text</option>
                                                }
                                            </select>
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(o => Model.Details[i].Remark, new { @class = "OnlyEdit" })
                                        </td>
                                        <td>
                                            @Html.DisplayFor(o => Model.Details[i].LastEditName, new { @class = "OnlyEdit" })
                                        </td>
                                        <td>
                                            <div style="width:100%;">
                                                <img class="detailDelete" src="~/Image/Icon/Delete.png" width="30" style="min-width:30px" />
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    var msg;
    var EditMode;
    var EditType;
    $(function () {
        msg = new MessagerAlert();
        EditMode = false;
        @Html.Raw(Model.ErrorMessage)
        IsEditModeChange();

        if (!$("body").hasClass("sidebar-collapse")) {
            $(".menu-trigger").click();
        }
    });

    function IsEditModeChange() {
        EditModeButtionBind();
        Clear();
        $(".readonly").attr("disabled", "disabled");
        if (EditMode) {
            $(".queryHeader select").attr("disabled", "disabled");
            $('#btnNew').unbind('click').addClass("IsEditModeQuery");

            $(".rowHeader input[type='text']").attr("disabled", "disabled");
            $(".rowHeader input[type='button']").unbind('click').addClass("IsEditModeQuery");
            $('#btnQuery').addClass("IsEditModeQuery");

            $('#Edit ,#Delete ,#Encode, #Amend, #Excel, #PDF ,#SendMail').unbind('click').removeClass("IsEditMode");
            $('#Save, #Undo, #New, #Picture').bind('click').addClass("IsEditMode");

            $('.DetailTable input,.DetailTable select:not(.NotEdit)').removeAttr("disabled");

            if (EditType == "New") {
                $(".DataTable input:not(#ReportNo,#LastEditName,.Readonly), .DataTable select").removeAttr("disabled");
            }
            else {
                $(".OnlyEdit").removeAttr("disabled").removeAttr("readonly");
            }

            $(".DetailTable img").removeClass('display-None');

            DetailButtonBind();
            DetailDetailButtonBind();

            $('#btnQuery').on('click', function () {
                return false;
            });
        }
        else {
            $(".queryHeader select").removeAttr("disabled");
            $(".rowHeader input[type='text']").removeAttr("disabled");
            $(".rowHeader input[type='button']").removeClass("IsEditModeQuery");
            $('#btnNew').removeClass("IsEditModeQuery");
            $('#Save, #Undo, #New').unbind('click').removeClass("IsEditMode");
            $('#btnQuery').unbind('click').removeClass("IsEditModeQuery");

            QueryButtonBind();

            if ($('#ReportNo').val() != undefined && $('#ReportNo').val() != '') {
                $("#Edit, #Delete, #Picture ,#Excel ,#PDF, #SendMail").bind('click').addClass("IsEditMode");
            }
            else {
                $("#Edit, #Picture, #Delete ,#Excel ,#PDF, #SendMail").unbind('click').removeClass("IsEditMode");
            }

            if ($('#Main_Status').val() == "New") {
                $('#Encode').bind('click').addClass("IsEditMode");
                $('#Amend').unbind('click').removeClass("IsEditMode");
            }
            if ($('#Main_Status').val() == "Confirmed") {
                $('#Amend').bind('click').addClass("IsEditMode");
                $('#Encode ,#Edit ,#Delete').unbind('click').removeClass("IsEditMode");
            }

            $(".DataTable input, .DataTable select").attr("disabled", "disabled");
            $('.DetailTable input,.DetailTable select').attr("disabled");
            $(".DetailTable img").addClass('display-None');


            $('#btnQuery').on('click', function () {
                if (EditType != "New") {
                    if ($('#Request_BrandID').val() == '' || $('#Request_SeasonID').val() == '' || $('#Request_StyleID').val() == '' || $('#Request_Article').val() == '') {
                        msg.WithError("Style, Brand, Season and Article cannot be empty");
                        return false;
                    }
                }
            });
        }

    }

    function Clear() {
        if (EditType == "New") {
            $(".DataTable input[type='text'], .DataTable input[type='number'], .DataTable select").val('');
            $('#Result').html('');
        }
    }

    function ReportNoChange(value) {
        $('#btnQuery').unbind('click').click();
    }

    function QueryButtonBind() {
        $('#btnBrandSelectItem').on('click', function () {
            var para = "?TargetID=Request_BrandID";
            window.open('@Url.Action("BrandList","PublicWondow",new{Area=""})' + para, 'Brand', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnSeasonSelectItem').on('click', function () {
            var para = "?TargetID=Request_SeasonID&BrandID=" + $('#Request_BrandID').val();
            window.open('@Url.Action("SeasonList","PublicWondow",new{Area=""})' + para, 'Season', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnStyleSelectItem').on('click', function () {
            var para = "?TargetID=Request_StyleID&BrandID=" + $('#Request_BrandID').val() + "&SeasonID=" + $('#Request_SeasonID').val();
            window.open('@Url.Action("StyleList","PublicWondow",new{Area=""})' + para, 'Style', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnArticleSelectItem').on('click', function () {
            if ($('#Request_BrandID').val() == '' || $('#Request_SeasonID').val() == '' || $('#Request_StyleID').val() == '') {
                msg.WithError('Please input style, brand and season before choose article.');
                return;
            }

            var para = "?TargetID=Request_Article&OrderID=&StyleUkey=0&BrandID=" + $('#Request_BrandID').val() + "&SeasonID=" + $('#Request_SeasonID').val() + "&StyleID=" + $('#Request_StyleID').val();
            window.open('@Url.Action("ArticleList","PublicWondow",new{Area=""})' + para, 'Article', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });


        blurEvent('Request_');
    }

    function blurEvent(name) {

        $("#Main_OrderID").unbind('blur').blur(function () {
            if ($(this).val() == '') {
                return;
            }

            $.ajax({
                url: "@Url.Action("SPBlur", new{Area= "BulkFGT" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ OrderID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.ErrMsg != "") {
                        $("#Main_OrderID").val('');
                        msg.WithError(data.ErrMsg);
                    }
                    else {

                        $('.DetailTable > tbody').empty();
                        if (data.BrandID != "") {
                            $('#Main_BrandID').val(data.BrandID);
                        }

                        if (data.SeasonID != "") {
                            $('#Main_SeasonID').val(data.SeasonID);
                        }

                        if (data.StyleID != "") {
                            $('#Main_StyleID').val(data.StyleID);
                        }

                        if (data.Article != "") {
                            $('#Main_Article').val(data.Article);
                        }

                        if (data.Teamwear == true) {
                            $('#Main_Teamwear').attr('checked', 'checked');
                        }
                        else {
                            $('#Main_Teamwear').removeAttr('checked');
                        }

                        $('#Main_ArtworkTypeID').empty();
                        if (data.ArtworkTypeList != null) {

                            $.each(data.ArtworkTypeList, function () {
                                var obj = this;
                                var dom = `<option value='${obj.Value}'>${obj.Text}</ option>`;
                                $('#Main_ArtworkTypeID').append(dom);
                            });
                        }
                        $('#Main_ArtworkTypeID').change();

                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $("#" + name + "BrandID").blur(function () {
            if ($(this).val() == '') {
                if (name == '') {
                    ClearColor();
                }

                return;
            }

            $.ajax({
                url: "@Url.Action("BrandList","PublicWondow",new{Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#" + name + "BrandID").val('');
                        msg.WithError('Brand Not Found');
                    }

                    if (name == '') {
                        GetAccessoryRefNoList();
                    }

                    //ReportNoClear(name);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $("#" + name + "SeasonID").blur(function () {
            if ($(this).val() == '') {
                if (name == '') {
                }

                return;
            }


            var BrandID = $('#' + name + 'BrandID').val();
            $.ajax({
                url: "@Url.Action("SeasonList","PublicWondow",new{Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: BrandID, SeasonID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#" + name + "SeasonID").val('');
                        msg.WithError('Season Not Found');
                    }

                    if (name == '') {
                        GetAccessoryRefNoList();
                    }

                    //ReportNoClear(name);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $("#" + name + "StyleID").blur(function () {
            if ($(this).val() == '') {

                if (name == '') {
                }

                return;
            }


            var BrandID = $('#' + name + 'BrandID').val();
            var SeasonID = $('#' + name + 'SeasonID').val();
            var targetID = $(this).attr("ID");
            $.ajax({
                url: "@Url.Action("StyleList","PublicWondow",new{Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: BrandID, SeasonID: SeasonID, StyleID: $(this).val(), TargetID: targetID, ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#" + name + "StyleID").val('');
                        msg.WithError('Style Not Found');
                    }

                    if (name == '') {
                        GetAccessoryRefNoList();
                    }

                    //ReportNoClear(name);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $('#' + name + 'Article').blur(function () {
            if ($(this).val() == '') {
                return;
            }

            var BrandID = $('#' + name + 'BrandID').val();
            var SeasonID = $('#' + name + 'SeasonID').val();
            var StyleID = $('#' + name + 'StyleID').val();

            $.ajax({
                url: "@Url.Action("ArticleList","PublicWondow",new{Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: BrandID, StyleUkey: 0, SeasonID: SeasonID, StyleID: StyleID, Article: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#" + name + "Article").val('');
                        msg.WithError('Article Not Found');
                    }

                    //ReportNoClear(name);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });
    }

    function EditModeButtionBind() {
        $('#Edit').on('click', function () {
            if ($('#ReportNo').val() != null && $('#ReportNo').val() != "") {
                EditMode = true;
                EditType = "";
                $("#SaveSubmit").attr("name", "Action:Edit");
                IsEditModeChange();
            }
        });

        $('#btnNew').on('click', function () {
            EditMode = true;
            EditType = "New";
            $("#SaveSubmit").attr("name", "Action:New");
            $("#Main_TestBeforePicture").val('');
            $("#Main_TestAfterPicture").val('');
            IsEditModeChange();

            $('.DetailTable > tbody > tr').each(function () {
                $(this).remove();
            });

        });

        $('#New').unbind('click').on('click', function () {
            if (!EditMode) {
                return;
            }
            AddDetailRow();
        });

        $('#Save').on('click', function (e) {
            if (EditMode == false) {
                return false;
            }

            var detail = [];
            var ErrMsg = "";

            if ($('#Main_OrderID').val() == '' || $('#Main_OrderID').val() == undefined) {
                ErrMsg += "SP# cannot be empty<br/>";
            }

            if (ErrMsg != "") {
                msg.WithError(ErrMsg);
                return false;
            }

            // 重新調整index 順序。
            $('.DetailTable > tbody > tr').each(function (index, data) {
                var idx = $(this).closest('tr').attr('idx');
                if (idx != index) {
                    $.each($(this).find("input[id^='Details']"), function () {
                        var tableName = $(this).attr('name').substr(0, $(this).attr('name').indexOf("["));
                        var rollName = $(this).attr('name').substr($(this).attr('name').indexOf("]") + 2, $(this).attr('name').length - $(this).attr('name').indexOf("]"));
                        $(this).attr("id", tableName + "_" + index.toString() + "__" + rollName);
                        $(this).attr("name", tableName + "[" + index.toString() + "]." + rollName);
                    });

                    $.each($(this).find("select[id^='Details']"), function () {
                        var tableName = $(this).attr('name').substr(0, $(this).attr('name').indexOf("["));
                        var rollName = $(this).attr('name').substr($(this).attr('name').indexOf("]") + 2, $(this).attr('name').length - $(this).attr('name').indexOf("]"));
                        $(this).attr("id", tableName + "_" + index.toString() + "__" + rollName);
                        $(this).attr("name", tableName + "[" + index.toString() + "]." + rollName);
                    });
                }
            });

            $(".rowHeader input[type='text']").removeAttr("disabled");
            $(".DataTable input, .DataTable select").removeAttr("disabled");

            $("#SaveSubmit").click();
        });

        $('#Undo').on('click', function () {
            EditMode = false;
            IsEditModeChange();
            if (EditType != "New") {
                $('#btnQuery').unbind('click').click();
            }
            else {
                if ($('#Request_BrandID').val() != '' || $('#Request_SeasonID').val() != '' || $('#Request_StyleID').val() != '' || $('#Request_Article').val() != '') {
                    $('#btnQuery').unbind('click').click();
                }
            }

            EditType = "";
        });

        $('#Delete').on('click', function (e) {
            if (EditMode == false && $('#ReportNo').val() != null && $('#ReportNo').val() != "") {
                e.preventDefault();
                msg.WithConfirm('Do you want to delete the data ?',
                    function () {
                        $("#DeleteSubmit").click();
                    }, null);
            }
        });

        $('#Encode').on('click', function (e) {
            if (EditMode == false && $('#Main_ReportNo').val() != null && $('#Main_ReportNo').val() != "") {
                e.preventDefault();
                msg.WithConfirm('Do you want to Encode the data ?',
                    function () {
                        $("#EncodeSubmit").click();
                    }, null);
            }
        });

        $('#Amend').on('click', function (e) {
            if (EditMode == false && $('#Main_ReportNo').val() != null && $('#Main_ReportNo').val() != "") {
                e.preventDefault();
                msg.WithConfirm('Do you want to Amend the data ?',
                    function () {
                        $("#AmendSubmit").click();
                    }, null);
            }
        });

        $('#Picture').on('click', function () {
            var para = "?Title=" + $('.page-header span').html() + "&EditMode=" + EditMode;
            para += "&" + "Table=HeatTransferWash";
            para += "&" + "TargetBeforeColumn=Main_TestBeforePicture";
            para += "&" + "TargetAfterColumn=Main_TestAfterPicture";
            para += "&" + "BeforeColumn=TestBeforePicture";
            para += "&" + "AfterColumn=TestAfterPicture";
            para += "&" + "PKey_1=ReportNo";
            para += "&" + "PKey_1_Val=" + $('#ReportNo').val();
            window.open('@Url.Action("PictureList", "PublicWondow",new { Area=""})' + para, 'Picture List', config = 'toolbar=no,status=no,location=no,width=1024,height=750');
        });

        $('#PDF').on('click', function () {
            if ($('#ReportNo').val() == "") {
                return false;
            }

            ToReport(1);
        });

        $('#Excel').on('click', function () {
            if ($('#ReportNo').val() == "") {
                return false;
            }

            ToReport(0);
        });


        $('#SendMail').on('click', function () {
            $.ajax({
                url: "@Url.Action("SendMail", new { Area = "BulkFGT" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ ReportNo: $('#ReportNo').val() }),
                async: false,
                success: function (data) {
                    if (data.Result) {
                        var para = "?To=" + $('#Main_MRHandleEmail').val();
                        para += "&CC=";
                        para += "&Subject=" + "Daily HT Wash Test – ReportNo:" + $('#ReportNo').val();
                        para += "&Body=" + "Attachment Is Daily HT Wash Test - ReportNo:" + $('#ReportNo').val() + " detail data";
                        para += "&file=" + data.FileName;
                        window.open('@Url.Action("SendMailer", "SendMailAttachfiles", new { Area=""})' + para, 'SendMail', config = 'toolbar=no,status=no,location=no,width=800,height=600');
                    }
                    else {
                        msg.WithError(data.ErrorMessage);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });
    }

    function DetailButtonBind() {
        $('#btnDetailBrandSelectItem').on('click', function () {
            var para = "?TargetID=BrandID";
            window.open('@Url.Action("BrandList","PublicWondow",new{Area=""})' + para, 'BrandID', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnDetailSeasonSelectItem').on('click', function () {
            var para = "?TargetID=SeasonID&BrandID=" + $('#BrandID').val();
            window.open('@Url.Action("SeasonList","PublicWondow",new{Area=""})' + para, 'SeasonID', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnDetailStyleSelectItem').on('click', function () {
            var para = "?TargetID=StyleID&BrandID=" + $('#BrandID').val() + "&SeasonID=" + $('#SeasonID').val();
            window.open('@Url.Action("StyleList","PublicWondow",new{Area=""})' + para, 'StyleID', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnDetailArticleSelectItem').on('click', function () {
            var para = "?TargetID=Article&OrderID=&StyleUkey=0&BrandID=" + $('#BrandID').val() + "&SeasonID=" + $('#SeasonID').val() + "&StyleID=" + $('#StyleID').val();
            window.open('@Url.Action("ArticleList","PublicWondow",new{Area=""})' + para, 'Article', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnDetailSubconNameSelectItem').on('click', function () {
            window.open('@Url.Action("LocalSuppList","PublicWondow",new{Area=""})', 'T1/SubconName', config = 'toolbar=no,status=no,location=no,width=900,height=650');
        });

        $('#btnDetailSupplierNameSelectItem').on('click', function () {
            window.open('@Url.Action("TPESuppList","PublicWondow",new{Area=""})', 'T2/SupplierName', config = 'toolbar=no,status=no,location=no,width=800,height=650');
        });

        $('#btnDetailTechnicianSelectItem').on('click', function () {
            var para = "?CallFunction=MockupOven";
            window.open('@Url.Action("TechnicianList", "PublicWondow",new{Area=""})' + para, 'Technician', config = 'toolbar=no,status=no,location=no,width=800,height=650');
        });

        $('#btnDetailMRSelectItem').on('click', function () {
            window.open('@Url.Action("Pass1List", "PublicWondow",new{Area=""})', 'MR', config = 'toolbar=no,status=no,location=no,width=800,height=650');
        });

        blurEvent("");
    }

    function ClearColor() {
        $('.AFColor').each(function () {
            $(this).val('');
        });
    }

    function DetailDetailButtonBind() {
        $('.btnArtworkColorItem').on('click', function () {
            var brandid = $('#BrandID').val();
            if (brandid == '') {
                msg.WithError('Brand is null');
                return;
            }

            var idx = $(this).attr("idv");
            var para = "?TargetID=" + idx + "__ArtworkColor&BrandID=" + brandid + "&Title=Artwork Color";
            window.open('@Url.Action("ColorList", "PublicWondow",new{Area=""})' + para, 'Artwork Color', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('.btnFabricColorItem').on('click', function () {
            var brandid = $('#BrandID').val();
            if (brandid == '') {
                msg.WithError('Brand is null');
                return;
            }

            var idx = $(this).attr("idv");
            var para = "?TargetID=" + idx + "__FabricColor&BrandID=" + brandid + "&Title=Fabric Color";
            window.open('@Url.Action("ColorList", "PublicWondow",new{Area=""})' + para, 'Fabric Color', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('.detailDelete').unbind('click').on('click', function () {
            var t = $(this);

            msg.WithConfirm('Do you want to delete the data ?',
                function () {
                    t.parents().parents('tr').remove();
                    msg.WithSuccess("Delete Success");
                }, null);
        });

        $('.btnRefnoSelectItem').on('click', function () {
            var targetID = $(this).attr("targetID");
            var OrderID = $("#Main_OrderID").val();
            if (OrderID == '') {
                msg.WithError('Please input SP#.');
                return;
            }
            var para = `?TargetID=${targetID}&OrderID=${OrderID}`;
            window.open('@Url.Action("Po_Supp_Detail_RefnoList", "PublicWondow",new{Area=""})' + para, 'Style', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('.FabricRefNoTxt').unbind('blur').blur(function () {
            var targetID = $(this).attr("ID");
            var orderID = $('#Main_OrderID').val();
            var refno = $(this).val();
            if (refno == '') {
                return;
            }
            if (orderID == '') {
                $(this).val('');
                msg.WithError('Please input SP#.');
                return;
            }
            $.ajax({
                url: "@Url.Action("Po_Supp_Detail_RefnoList", "PublicWondow",new { Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ OrderID: orderID, Refno: refno , TargetID: targetID, ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data == '') {
                        $(`#${targetID}`).val('');
                        msg.WithError('Refno Not Found');
                    }
                    else {
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $('.btnRefnoSelectItem').on('click', function () {
            var targetID = $(this).attr("targetID");
            var OrderID = $("#Main_OrderID").val();
            if (OrderID == '') {
                msg.WithError('Please input SP#.');
                return;
            }
            var para = `?TargetID=${targetID}&OrderID=${OrderID}`;
            window.open('@Url.Action("Po_Supp_Detail_RefnoList", "PublicWondow",new{Area=""})' + para, 'Style', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('.HTRefNoTxt').unbind('blur').blur(function () {
            var targetID = $(this).attr("ID");
            var orderID = $('#Main_OrderID').val();
            var refno = $(this).val();
            if (refno == '') {
                return;
            }

            HTRefNoAutoChange();

            if (orderID == '') {
                $(this).val('');
                msg.WithError('Please input SP#.');
                return;
            }
            $.ajax({
                url: "@Url.Action("Po_Supp_Detail_RefnoList", "PublicWondow",new { Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ OrderID: orderID, Refno: refno, MtlTypeID: 'HEAT TRANS', TargetID: targetID, ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data == '') {
                        $(`#${targetID}`).val('');
                        msg.WithError('Refno Not Found');
                    }
                    else {
                        GetDetailByHTRefNo($(`#${targetID}`).val(), targetID.replace('HTRefNo', ''));
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $('.btnHTRefNoSelectItem').on('click', function () {
            var targetID = $(this).attr("targetID");
            var OrderID = $("#Main_OrderID").val();
            if (OrderID == '') {
                msg.WithError('Please input SP#.');
                return;
            }
            var para = `?TargetID=${targetID}&OrderID=${OrderID}&MtlTypeID=HEAT TRANS`;
            window.open('@Url.Action("Po_Supp_Detail_RefnoList", "PublicWondow",new{Area=""})' + para, 'Style', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

    }

    function GetDetailByHTRefNo(HTRefNo, domIdHead) {

            $.ajax({
                url: "@Url.Action("GetLastDetailData", new{Area= "BulkFGT" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ HTRefNo: HTRefNo }),
                async: true,
                success: function (data) {
                    if (data.ErrMsg != "") {
                        msg.WithError(data.ErrMsg);
                    }
                    else {
                        $(`#${domIdHead}Temperature`).val(data.DetailData.Temperature);
                        $(`#${domIdHead}Time`).val(data.DetailData.Time);
                        $(`#${domIdHead}SecondTime`).val(data.DetailData.SecondTime);
                        $(`#${domIdHead}Pressure`).val(data.DetailData.Pressure);
                        $(`#${domIdHead}PeelOff`).val(data.DetailData.PeelOff);
                        $(`#${domIdHead}Cycles`).val(data.DetailData.Cycles);
                        $(`#${domIdHead}TemperatureUnit`).val(data.DetailData.TemperatureUnit);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
    }

    function GetBrandList(data, targetID) {
        $('#' + targetID).val(data);

        GetAccessoryRefNoList();
        ClearColor();
        ReportNoClear(targetID);
    }

    function GetSeasonList(data, targetID) {
        $('#' + targetID).val(data);

        GetAccessoryRefNoList();
        ReportNoClear(targetID);
    }

    function GetStyleList(data, targetID) {
        $('#' + targetID).val(data);

        GetAccessoryRefNoList();
        ReportNoClear(targetID);
    }

    function GetArticleList(data, targetID) {
        $('#' + targetID).val(data);
        ReportNoClear(targetID);
    }

    function GetPo_Supp_Detail_Refno(data, targetID) {
        $('#' + targetID).val(data);

        GetDetailByHTRefNo(data, targetID.replace('HTRefNo', ''));
    }

    function ReportNoClear(targetID) {
        if (targetID.indexOf('Request_') > -1) {
            $('#Request_ReportNo').html('');
        }
    }

    function GetLocalSupp(data) {
        $('#T1Subcon').val(data.ID);
        $('#T1SubconAbb').val(data.Name);
    }

    function GetTPESupp(data) {
        $('#T2Supplier').val(data.ID);
        $('#T2SupplierAbb').val(data.Name);
    }

    function GetTechnician(data) {
        $('#Technician').val(data.ID);
        $('#TechnicianDesc').val(data.Name + " Ext. " + data.ExtNo);
    }

    function GetPass1(data) {
        $('#MR').val(data.ID);
        $('#MRDesc').val(data.Name + " Ext. " + data.ExtNo);
        $('#MRMail').val(data.EMail);
    }

    function GetColor(pickList, targetID) {
        var id = [];
        var name = [];
        $.each(pickList, function (idx, obj) {
            id.push(obj.ID);
            name.push(obj.Name);
        });

        $('#MockupOven_Detail_' + targetID ).val(id.join(';'));
        $('#MockupOven_Detail_' + targetID + 'Name').val(name.join(';'));
    }

    function selectChange(obj) {
        var result = $(obj).val();
        if (result == "Pass") {
            $(obj).removeClass('red').addClass('blue');
        }
        else {
            $(obj).removeClass('blue').addClass('red');
        }

        var key = $(obj).parents('td').parents('tr').children('td').find("input[type='hidden']").attr('idx');

        var resultChange = document.getElementById("MockupOven_Detail_" + key + "__ResultChange").value;
        var resultStain = document.getElementById("MockupOven_Detail_" + key + "__ResultStain").value;

        if (resultChange == "Fail" || resultStain == "Fail") {
            document.getElementById("MockupOven_Detail_" + key + "__Result").value = 'Fail';
        }
        else {
            document.getElementById("MockupOven_Detail_" + key + "__Result").value = 'Pass';
        }

        $("#MockupOven_Detail_" + key + "__Result").removeClass("blue").removeClass("red");;
        var detailResultColor = document.getElementById("MockupOven_Detail_" + key + "__Result").value == "Pass" ? "blue" : "red";
        $("#MockupOven_Detail_" + key + "__Result").addClass(detailResultColor);

    }

    function AddDetailRow() {
        var BrandID = $('#BrandID').val();
        var SeasonID = $('#SeasonID').val();
        var StyleID = $('#StyleID').val();

        var lastNO;
        if ($('.DetailTable > tbody > tr').length > 0) {
            lastNO = parseInt($('.DetailTable > tbody > tr:last-child > td > input[type="hidden"] ').attr('idx')) + 1;
        }
        else {
            lastNO = 0;
        }

        $.ajax({
            url: "@Url.Action("AddDetailRow", new { Area = "BulkFGT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ lastNO: lastNO, BrandID: BrandID, SeasonID: SeasonID, StyleID: StyleID }),
            async: false,
            success: function (data) {
                $('.DetailTable > tbody').append(data);
                DetailDetailButtonBind();
                HTRefNoAutoChange();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function GetPicture(data) {
        $('#Main_TestBeforePicture').val(data.BeforePicture.replace("data:image/png;base64,", ""));
        $('#Main_TestAfterPicture').val(data.AfterPicture.replace("data:image/png;base64,", ""));
    }

    function FailMail() {
        var para = "?Title=" + $('.page-header span').html() + "&FactoryID=@ViewBag.FactoryID&Type=BulkFGT&ExitReload=False";
        window.open('@Url.Action("TestFailMailList", "PublicWondow",new { Area=""})' + para, 'Mail List', config = 'toolbar=no,status=no,location=no,width=650,height=750');
    }

    function GetTestFailMailList(data) {
        var to = "";
        var cc = "";
        $.each(data, function (index, value) {
            to += value.To + ';';
            cc += value.CC + ';';
        });

        $.ajax({
            url: "@Url.Action("FailMail", "MockupOvenTest", new { Area = "BulkFGT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ ReportNo: $('#ReportNo').val(), TO: to, CC: cc }),
            async: false,
            success: function (data) {
                if (data.result) {
                    msg.WithSuccess("Success");
                }
                else {
                    msg.WithWarning(data.resultMsg);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                // console.log(xhr.responseText);
                msg.WithWarningCheck(xhr.responseText, function () {
                    location.reload();
                });
            }
        });
    }

    var isHeatTransfer = false;
    function ToReport(IsToPDF) {
        $.ajax({
            url: "@Url.Action("Report", new { Area = "BulkFGT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ ReportNo: $('#ReportNo').val(), IsToPDF: IsToPDF }),
            async: false,
            success: function (data) {
                if (data.Result) {
                    window.location.href = data.reportPath;
                }
                else {
                    msg.WithError(data.ErrorMessage);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function ArtworkTypeListChange(obj) {
        if ($(obj).val() == 'HEAT TRANSFER') {
            isHeatTransfer = true;
        }
        else {
            isHeatTransfer = false;
        }
        HTRefNoAutoChange();
    }

    function HTRefNoAutoChange() {

        isHeatTransfer = $("#Main_ArtworkTypeID").val() == 'HEAT TRANSFER';

        if (!isHeatTransfer) {
            $('.HTRefNoTxt').val('').attr("readonly", "readonly");
            $('.btnHTRefNoSelectItem').attr("disabled", "disabled");
        }
        else {
            $('.HTRefNoTxt').removeAttr("readonly");
            $('.btnHTRefNoSelectItem').removeAttr("disabled");
        }

    }

    function PressureCheck(value) {
        if (parseFloat(value) >= 100) {
            return 100;
        }
        else if (parseFloat(value) < 0) {
            return 0;
        }

        return Number.parseFloat(value).toFixed(2);
    }
</script>