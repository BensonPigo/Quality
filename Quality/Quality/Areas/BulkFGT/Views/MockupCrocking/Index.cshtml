@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model DatabaseObject.ViewModel.BulkFGT.MockupCrocking_ViewModel

<link href="~/ThirdParty/plugins/DataTables/datatables.min.css" rel="stylesheet" />
<link href="~/ThirdParty/SciCustom/css/TableStyle.css" rel="stylesheet" />
<script src="~/ThirdParty/plugins/DataTables/datatables.min.js"></script>
<link href="~/ThirdParty/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" />

<style type="text/css">
    tr.row-name
    {
        color:black;
    }

    .input-group {
        display: flex
    }

    .input-group > input:nth-child(1) {
        flex-grow: 3
    }

    .input-group > input:nth-child(2) {
        flex-grow: 2
    }

    .input-group > input:nth-child(3) {
        flex-grow: 1
    }

    .DetailTable > tbody > tr > td > input[type="text"] {
        width: 100%;
    }

    .row {
        --bs-gutter-x: 1.5rem;
        --bs-gutter-y: 0;
        display: flex;
        flex-wrap: wrap;
        width: 95vw;
        margin-top: calc(var(--bs-gutter-y) * -1);
        margin-right: calc(var(--bs-gutter-x)/ -2);
        margin-left: calc(var(--bs-gutter-x)/ -2);
    }

    .button {
        background-color: #E00000; /* Red */
        border: none;
        color: white;
        padding: 6px 16px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
    }

    .row > * {
        flex-shrink: 0;
        width: 100%;
        max-width: 100%;
        padding-left: calc(var(--bs-gutter-x)/ 2);
    }

    .rowHeader {
        font-size: 1.1vw;
        font-weight: bold;
    }

    .queryHeader select {
        width: 10vw;
    }

    .rowHeader input[type="text"] {
        width: 10vw;
    }

    .col-auto {
        width: auto;
    }

    .col-auto > p {
        padding: 0
    }

    .White {
        color: white !important;
    }

    .Black {
        color: black !important;
    }

    .IsEditMode {
        color: white !important;
        cursor: pointer;
    }

    .IsEditModeQuery {
        color: gray !important;
        cursor: no-drop;
    }

    #ButtonMode {
        width: 92vw;
    }

    .DataTable {
        width: 92vw;
        font-size: 1rem;
        font-weight: bold;
        border: solid 1px black;
        background-color: white;
    }

        .DataTable > tbody img {
            cursor: pointer;
        }

        .DataTable > tbody > tr:nth-of-type(odd) {
            background-color: #ffffff;
        }

        .DataTable > tbody > tr:nth-of-type(even) {
            background-color: #F0F2F2;
        }

        .DataTable > tbody > tr > td {
            border: solid 1px gray;
            padding: 0.5em;
            text-align: left;
            vertical-align: middle;
        }

        .DataTable input[type='text'], .DataTable input[type='number'] {
            width: 70%;
        }
</style>
@using (Html.BeginForm("Index", ViewContext.RouteData.GetRequiredString("Controller"), FormMethod.Post, new { @id = "DetailForm" }))
{
    <div class="main-content">
        <header class="page-header">
            <div style="float:left">
                <h3>
                    <span>Mockup Crocking Test</span>
                </h3>
                <div class="breadcrumb">
                    <div>Home</div>
                    <div class="current">Mockup Crocking Test</div>
                </div>
            </div>
            <div class="breadcrumb queryHeader" style="justify-content: flex-end;">
                <h4 style="margin-right: 1em;color:white">Report No</h4>               
                <select id="Request_ReportNo" name="Request.ReportNo" onchange="ReportNoChange(this.value)">
                    @foreach (var item in (List<SelectListItem>)ViewBag.ReportNo_Source)
                    {
                        string reportNO = Model.Request != null && !string.IsNullOrEmpty(Model.Request.ReportNo) ? Model.Request.ReportNo : string.Empty;
                        string selected = item.Value.Equals(reportNO) ? "selected" : "";
                        <option value="@item.Value" @selected>@item.Text</option>
                    }
                </select>
                <input id="btnNew" type="button" class="button" style="margin-left:1em;border:0;cursor:pointer;" name="New" value="New">
            </div>
        </header>
        <div class="main-area">
            <div class="content-scroll">
                <div class="inner-scroll">
                    @*查詢*@
                    <div class="row rowHeader">
                        <div class="col-auto">
                            <p class="InfoTitle White">Brand</p>
                        </div>
                        <div class="col-auto">
                            <input id="Request_BrandID" name="Request.BrandID" type="text" value="@Model.Request.BrandID">
                            <input id="btnBrandSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                        </div>
                        <div class="col-auto"><p class="InfoTitle White">Season</p></div>
                        <div class="col-auto">
                            <input id="Request_SeasonID" name="Request.SeasonID" type="text" value="@Model.Request.SeasonID">
                            <input id="btnSeasonSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                        </div>
                        <div class="col-auto"><p class="InfoTitle White">Style</p></div>
                        <div class="col-auto">
                            <input id="Request_StyleID" name="Request.StyleID" type="text" value="@Model.Request.StyleID">
                            <input id="btnStyleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                        </div>
                        <div class="col-auto"><p class="InfoTitle White">Article</p></div>
                        <div class="col-auto">
                            <input id="Request_Article" name="Request.Article" type="text" value="@Model.Request.Article">
                            <input id="btnArticleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                        </div>

                        <div class="col-auto">
                            <button id="btnQuery" type="submit" name="Action:Query" class="site-btn btn-gy font1rem Black" style="padding: 0.4em;">Query</button>
                        </div>
                    </div>

                    @*查詢*@
                    <div style="margin-top: 1em;">
                        <table id="ButtonMode">
                            <tbody>
                                <tr>
                                    <td>
                                        <h4 id="Edit" style="margin-right: 1em;">
                                            <img src="~/Image/Icon/Edit.png" width="30" />
                                            Edit
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 style="margin-right: 1em;">
                                            <button id="Save" type="submit" style="margin:0;min-width:0;background-color:transparent">
                                                <img src="~/Image/Icon/Save.png" width="30" />
                                                Save
                                            </button>
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="Undo" style="margin-right: 1em;">
                                            <img src="~/Image/Icon/Undo.png" width="30" />
                                            Undo
                                        </h4>
                                    </td>
                                    <td>
                                        <input id="DeleteSubmit" type="submit" name="action:Delete" style="display:none" />
                                        <h4 id="Delete" style=" margin-right: 1em;">
                                            <img src="~/Image/Icon/Delete.png" width="30" />
                                            Delete
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="SendMail" style="margin-right: 1em;">
                                            <img src="~/Image/Icon/SendMail.png" width="30" />
                                            Send to MR
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="PDF" style="margin-right: 1em;">
                                            <img src="~/Image/Icon/PDF.png" width="30" />
                                            PDF
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="Picture" style=" margin-right: 1em;">
                                            <img src="~/Image/Icon/Camera.png" width="30" />
                                            Picture
                                        </h4>
                                    </td>
                                    <td style="width: 30%;">
                                    </td>
                                    <td align="right">
                                        <h4 id="New" style=" margin-right: 1em;">
                                            <img src="~/Image/Icon/New.png" width="30" />
                                            New Item
                                        </h4>
                                    </td>
                            </tbody>
                        </table>
                    </div>

                    @*主資料*@
                    <div style="margin-top: 1em;">
                        <table class="DataTable">
                            <tbody>
                                <tr>
                                    <td style="width: 10vw;"><h5>Report No</h5></td>
                                    <td style="width: 20vw;">
                                        <input id="ReportNo" name="ReportNo" readonly="readonly" type="text" value="@Model.ReportNo">
                                        @Html.HiddenFor(o => o.TestBeforePicture)
                                        @Html.HiddenFor(o => o.TestAfterPicture)
                                    </td>
                                    <td style="width: 10vw;"><h5>SP#</h5></td>
                                    <td style="width: 20vw;">
                                        @Html.TextBoxFor(o => o.POID, "")
                                    </td>
                                    <td style="width: 10vw;"><h5>Brand</h5></td>
                                    <td style="width: 20vw;">
                                        @Html.TextBoxFor(o => o.BrandID, "")
                                        <input id="btnDetailBrandSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>Season</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.SeasonID, "")
                                        <input id="btnDetailSeasonSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                    </td>
                                    <td><h5>Style#</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.StyleID, "")
                                        <input id="btnDetailStyleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                    </td>
                                    <td><h5>Article</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.Article, "", new { @class = "OnlyEdit" })
                                        <input id="btnDetailArticleSelectItem" type="button" class="OnlyEdit site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>Artwork</h5></td>
                                    <td>
                                        <select id="ArtworkTypeID" name="ArtworkTypeID" style="width:157px;">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ArtworkTypeID_Source)
                                            {
                                                string selected = item.Text.Equals(Model.ArtworkTypeID) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td><h5>Remark</h5></td>
                                    <td colspan="3">
                                        @Html.TextBoxFor(o => o.Remark, "", new { @class = "OnlyEdit" })
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>T1/SubconName</h5></td>
                                    <td>
                                        <div class="input-group">
                                            @Html.TextBoxFor(o => o.T1Subcon, "", new { @class = "OnlyEdit", style="width:5vw" })
                                            @Html.TextBoxFor(o => o.T1SubconAbb, "", new { @readonly = "readonly" })
                                            <input id="btnT1SubconSelectItem" type="button" class="OnlyEdit site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                        </div>
                                    </td>
                                    <td><h5>Test Date</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.TestDate, "{0:yyyy/MM/dd}", new { @class = "date-picker OnlyEdit" })
                                    </td>
                                    <td><h5>Receive Date</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.ReceivedDate, "{0:yyyy/MM/dd}", new { @class = "date-picker OnlyEdit" })
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>Released Date</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.ReleasedDate, "{0:yyyy/MM/dd}", new { @readonly = "readonly", @class = "date-picker OnlyEdit" })
                                    </td>
                                    <td><h5>Result</h5></td>
                                    <td>
                                        @{
                                            string styleColor = "";
                                            if (Model.Result == "Pass")
                                            {
                                                styleColor = "blue";
                                            }
                                            else
                                            {
                                                styleColor = "red";
                                            }
                                        }
                                        <font id="Result" class="@styleColor">@Model.Result</font>
                                    </td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td><h5>Technician</h5></td>
                                    <td>
                                        @{
                                            string nameValue = string.Empty;
                                            if (!string.IsNullOrWhiteSpace(Model.TechnicianName))
                                            {
                                                nameValue = Model.TechnicianName + " Ext." + Model.TechnicianExtNo;
                                            }
                                        }
                                        <div class="input-group">
                                            @Html.TextBoxFor(o => o.Technician, "", new { @class = "OnlyEdit", style = "width:5vw" })
                                            <input type="text" id="TechnicianDesc" readonly="readonly" value="@nameValue" />
                                            <input id="btnTechnicianSelectItem" type="button" class="OnlyEdit site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                        </div>
                                    </td>
                                    <td><h5>MR</h5></td>
                                    <td>
                                        @{
                                            nameValue = string.Empty;
                                            string mrmail = string.Empty;
                                            if (!string.IsNullOrWhiteSpace(Model.MRName))
                                            {
                                                nameValue = Model.MRName + " Ext." + Model.MRExtNo;
                                                mrmail = Model.MRMail;
                                            }

                                        }
                                        <div class="input-group">
                                            @Html.TextBoxFor(o => o.MR, "", new { @class = "OnlyEdit", style = "width:5vw" })
                                            <input type="text" id="MRDesc" readonly="readonly" value="@nameValue" />
                                            <input type="hidden" id="MRMail" readonly="readonly" value="@mrmail" />
                                            <input id="btnMRSelectItem" type="button" class="OnlyEdit site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                        </div>
                                    </td>
                                    <td><h5>Last Edit Name</h5></td>
                                    <td colspan="5">
                                        <input id="LastEditName" name="LastEditName" readonly="readonly" type="text" value="@Model.LastEditName">
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    @*明細*@
                    <div style="margin-top: 1em; overflow:auto">
                        <table cellspacing="100" class="DataTable DetailTable table table-striped display;" style="width: 120vw">
                            <thead>
                                <tr class="row-name" id="row-name">
                                    <th>Design</th>
                                    <th>Artwork Color</th>
                                    <th>Fabric Ref No.</th>
                                    <th>Fabric Color</th>
                                    <th>Dry Scale</th>
                                    <th>Wet Scale</th>
                                    <th>Result</th>
                                    <th>Remark</th>
                                    <th>Last update</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.MockupCrocking_Detail.Count; i++)
                                {
                                <tr idx="@i" class="row-content" style="vertical-align: middle; text-align: center;">
                                    <td>
                                        <div class="input-group">
                                            <input id="MockupCrocking_Detail_@{@i}__Design" name="MockupCrocking_Detail[@{@i}].Design" type="text" value="@Model.MockupCrocking_Detail[i].Design">                                            
                                        </div>
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            @Html.HiddenFor(modelItem => Model.MockupCrocking_Detail[i].ArtworkColor, new { @class = "AFColor" })
                                            @Html.TextBoxFor(modelItem => Model.MockupCrocking_Detail[i].ArtworkColorName, new { @class= "AFColor", @readonly = "readonly" })
                                            @Html.HiddenFor(modelItem => Model.MockupCrocking_Detail[i].Ukey)
                                            <input type="button" class="site-btn btn-blue btnArtworkColorItem" style="margin:0;border:0;" value="..." />
                                        </div>
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(modelItem => Model.MockupCrocking_Detail[i].FabricRefNo)
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            @Html.HiddenFor(modelItem => Model.MockupCrocking_Detail[i].FabricColor, new { @class = "AFColor" })
                                            @Html.TextBoxFor(modelItem => Model.MockupCrocking_Detail[i].FabricColorName, new { @class = "AFColor", @readonly = "readonly" })
                                            <input type="button" class="site-btn btn-blue btnFabricColorItem" style="margin:0;border:0;" value="..." />
                                        </div>
                                    </td>
                                    <td>
                                        <select id="MockupCrocking_Detail_@{@i}__DryScale" name="MockupCrocking_Detail[@i].DryScale" style="width:157px;">
                                            @foreach (var item in (List<SelectListItem>)Model.Scale_Source)
                                            {
                                                string selected = item.Text.Equals(Model.MockupCrocking_Detail[i].DryScale) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td>
                                        <select id="MockupCrocking_Detail_@{@i}__WetScale" name="MockupCrocking_Detail[@i].WetScale" style="width:157px;">
                                            @foreach (var item in (List<SelectListItem>)Model.Scale_Source)
                                            {
                                                string selected = item.Text.Equals(Model.MockupCrocking_Detail[i].WetScale) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td>
                                        @{
                                            styleColor = "red";
                                            if (Model.MockupCrocking_Detail[i].Result == "Pass")
                                            {
                                                styleColor = "blue";
                                            }
                                        }
                                        <select id="MockupCrocking_Detail_@{@i}__Result" class="result @styleColor" name="MockupCrocking_Detail[@i].Result" onchange="changeResult(this)">
                                            @foreach (var item in (List<SelectListItem>)Model.Result_Source)
                                            {
                                                string selected = item.Text.Equals(Model.MockupCrocking_Detail[i].Result) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td>
                                        <input id="MockupCrocking_Detail_@{@i}__Remark" name="MockupCrocking_Detail[@{@i}].Remark" type="text" value="@Model.MockupCrocking_Detail[i].Remark">
                                    </td>
                                    <td>
                                        <input id="MockupCrocking_Detail_@{@i}__LastUpdate" name="MockupCrocking_Detail[@{@i}].LastUpdate" readonly="readonly" type="text" value="@Model.MockupCrocking_Detail[i].LastUpdate">
                                    </td>
                                    <td>
                                        <img class='detailDelete' src="~/Image/Icon/Delete.png" width=30 style="min-width:30px">
                                    </td>
                                </tr>
                                }
                            </tbody>

                        </table>
                    </div>
                </div>
            </div>
         </div>
    </div>
}

<script type="text/javascript">
    var msg;
    var EditMode;
    var EditType;
    $(function () {
        msg = new MessagerAlert();
        EditMode = false;

        @Html.Raw(Model.ErrorMessage)
        IsEditModeChange();

        if (!$("body").hasClass("sidebar-collapse")) {
            $(".menu-trigger").click();
        }
    });

    function IsEditModeChange() {
        EditModeButtionBind();
        Clear();
        if (EditMode) {
            $(".queryHeader select").attr("disabled", "disabled");
            $('#btnNew').unbind('click').addClass("IsEditModeQuery");

            $(".rowHeader input[type='text']").attr("disabled", "disabled");
            $(".rowHeader input[type='button']").unbind('click').addClass("IsEditModeQuery");
            $('#btnQuery').addClass("IsEditModeQuery");

            $("#Edit, #Delete, #SendMail, #PDF").unbind('click').removeClass("IsEditMode");
            $('#Save, #Undo, #New, #Picture').addClass("IsEditMode");
            $('.DetailTable input,.DetailTable select').removeAttr("disabled");

            if (EditType == "New") {
                $(".DataTable input:not(#ReportNo,#LastEditName), .DataTable select").removeAttr("disabled");
            }
            else {
                $(".OnlyEdit").removeAttr("disabled");
            }

            $(".DetailTable img").removeClass('display-None');

            DetailButtonBind();

            $('#btnQuery').on('click', function () {
                return false;
            });
        }
        else {
            $(".queryHeader select").removeAttr("disabled");
            $(".rowHeader input[type='text']").removeAttr("disabled");
            $(".rowHeader input[type='button']").removeClass("IsEditModeQuery");
            $('#btnNew').removeClass("IsEditModeQuery");
            $('#Save').removeClass("IsEditMode");
            $('#Undo, #New').unbind('click').removeClass("IsEditMode");
            $('#btnQuery').unbind('click').removeClass("IsEditModeQuery");
            QueryButtonBind();

            if ($('#ReportNo').val() != undefined && $('#ReportNo').val() != '') {
                $("#Edit, #Delete, #Picture, #PDF, #SendMail").addClass("IsEditMode");
            }
            else {
                $("#Edit, #Picture, #Delete, #PDF, #SendMail").unbind('click').removeClass("IsEditMode");
            }

            $(".DataTable input, .DataTable select").attr("disabled", "disabled");
            $('.DetailTable input,.DetailTable select').attr("disabled");
            $(".DetailTable img").addClass('display-None');

            $('#btnQuery').on('click', function () {
                if (EditType != "New") {
                    if ($('#Request_BrandID').val() == '' || $('#Request_SeasonID').val() == '' || $('#Request_StyleID').val() == '' || $('#Request_Article').val() == '') {
                        msg.WithError("Brand, Season, Style and Article cannot be empty.");
                        return false;
                    }
                }
            });
        }
    }

    function Clear() {
        if (EditType == "New") {
            $(".DataTable input[type='text'], .DataTable input[type='number'], .DataTable select").val('');
            $('#Result').html('');
        }
    }

    function ReportNoChange(value) {
        $('#btnQuery').unbind('click').click();
    }

    function QueryButtonBind() {
        $('#btnBrandSelectItem').on('click', function () {
            var para = "?TargetID=Request_BrandID";
            window.open('@Url.Action("BrandList","PublicWindow",new{Area=""})' + para, 'Brand', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnSeasonSelectItem').on('click', function () {
            var para = "?TargetID=Request_SeasonID&BrandID=" + $('#Request_BrandID').val();
            window.open('@Url.Action("SeasonList","PublicWindow",new{Area=""})' + para, 'Season', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnStyleSelectItem').on('click', function () {
            var para = "?TargetID=Request_StyleID&BrandID=" + $('#Request_BrandID').val() + "&SeasonID=" + $('#Request_SeasonID').val();
            window.open('@Url.Action("StyleList","PublicWindow",new{Area=""})' + para, 'Style', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnArticleSelectItem').on('click', function () {
            if ($('#Request_BrandID').val() == '' || $('#Request_SeasonID').val() == '' || $('#Request_StyleID').val() == '') {
                msg.WithError('Please input style, brand and season before choose article.');
                return;
            }

            var para = "?TargetID=Request_Article&OrderID=&StyleUkey=0&BrandID=" + $('#Request_BrandID').val() + "&SeasonID=" + $('#Request_SeasonID').val() + "&StyleID=" + $('#Request_StyleID').val();
            window.open('@Url.Action("ArticleList","PublicWindow",new{Area=""})' + para, 'Article', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        blurEvent('Request_');
    }

    function blurEvent(name) {
        $("#" + name + "BrandID").unbind('blur').blur(function () {
            if ($(this).val() == '') {
                if (name == '') {
                    GetArtworkTypeIDList();
                    ClearColor();
                }
                return;
            }

            $.ajax({
                url: "@Url.Action("BrandList","PublicWindow",new{Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#" + name +"BrandID").val('');
                        msg.WithError('Brand Not Found');
                    }

                    if (name == '') {
                        GetArtworkTypeIDList();
                        ClearColor();
                    }

                    ReportNoClear(name);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $("#" + name + "SeasonID").unbind('blur').blur(function () {
            if ($(this).val() == '') {
                if (name == '') {
                    GetArtworkTypeIDList();
                }
                return;
            }

            var BrandID = $('#' + name +'BrandID').val();
            $.ajax({
                url: "@Url.Action("SeasonList","PublicWindow",new{Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: BrandID, SeasonID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#" + name+"SeasonID").val('');
                        msg.WithError('Season Not Found');
                    }

                    if (name == '') {
                        GetArtworkTypeIDList();
                    }

                    ReportNoClear(name);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $("#" + name + "StyleID").unbind('blur').blur(function () {
            if ($(this).val() == '') {
                if (name == '') {
                    GetArtworkTypeIDList();
                }

                return;
            }

            var BrandID = $('#' + name +'BrandID').val();
            var SeasonID = $('#' + name +'SeasonID').val();
            $.ajax({
                url: "@Url.Action("StyleList","PublicWindow",new{Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: BrandID, SeasonID: SeasonID, StyleID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#" + name+"StyleID").val('');
                        msg.WithError('Style Not Found');
                    }

                    if (name == '') {
                        GetArtworkTypeIDList();
                    }

                    ReportNoClear(name);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $('#' + name + 'Article').unbind('blur').blur(function () {
            if ($(this).val() == '') {
                return;
            }

            var BrandID = $('#' + name +'BrandID').val();
            var SeasonID = $('#' + name +'SeasonID').val();
            var StyleID = $('#' + name +'StyleID').val();
            $.ajax({
                url: "@Url.Action("ArticleList","PublicWindow",new{Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: BrandID, StyleUkey : 0, SeasonID: SeasonID, StyleID: StyleID, Article: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#" + name+"Article").val('');
                        msg.WithError('Article Not Found');
                    }

                    ReportNoClear(name);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $("#POID").unbind('blur').blur(function () {
            if ($(this).val() == '') {
                return;
            }

            $.ajax({
                url: "@Url.Action("SPBlur", "MockupCrocking", new{Area= "BulkFGT" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ POID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.ErrMsg != "") {
                        $("#POID").val('');
                        msg.WithError(data.ErrMsg);
                    }
                    else
                    {
                        if (data.BrandID != "") {
                            $('#BrandID').val(data.BrandID).trigger('blur');
                        }

                        if (data.SeasonID != "") {
                            $('#SeasonID').val(data.SeasonID);
                        }

                        if (data.StyleID != "") {
                            $('#StyleID').val(data.StyleID);
                        }

                        if (data.Article != "") {
                            $('#Article').val(data.Article);
                        }
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $('#T1Subcon').unbind('blur').on('blur', function () {
            if ($(this).val() == "") {
                $("#T1SubconAbb").val('');
                return;
            }

            $.ajax({
                url: "@Url.Action("LocalSuppList", "PublicWindow",new { Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ SuppID:$(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#T1Subcon").val('');
                        $("#T1SubconAbb").val('');
                        msg.WithError('Lab Tech Not Found');
                    }
                    else
                    {
                        $("#T1Subcon").val(data[0].ID);
                        $("#T1SubconAbb").val(data[0].Name);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $('#Technician').unbind('blur').on('blur', function () {
            if ($(this).val() == "") {
                $("#Technician").val('');
                $("#TechnicianDesc").val('');
                return;
            }

            $.ajax({
                url: "@Url.Action("TechnicianList", "PublicWindow",new { Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ CallFunction:"MockupCrocking", ID:$(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#Technician").val('');
                        $("#TechnicianDesc").val('');
                        msg.WithError('Lab Tech Not Found');
                    }
                    else
                    {
                        $("#Technician").val(data[0].ID);
                        $("#TechnicianDesc").val(data[0].Name + ' Ext.' + data[0].ExtNo);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $('#MR').unbind('blur').on('blur', function () {
            if ($(this).val() == "") {
                $("#MR").val('');
                $("#MRDesc").val('');
                $("#MRMail").val('');
                return;
            }

            $.ajax({
                url: "@Url.Action("Pass1List", "PublicWindow",new { Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ ID:$(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#MR").val('');
                        $("#MRDesc").val('');
                        $("#MRMail").val('');
                        msg.WithError('Lab Tech Not Found');
                    }
                    else
                    {
                        $("#MR").val(data[0].ID);
                        $("#MRDesc").val(data[0].Name + ' Ext.' + data[0].ExtNo);
                        $("#MRMail").val(data[0].EMail);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $('.detailDelete').unbind('click').on('click', function () {
            var t = $(this).closest('tr');

            msg.WithConfirm('Do you want to delete the data ?',
                function () {
                    t.remove();
                    msg.WithSuccess("Delete Success");
                }, null);
        });
    }

    function EditModeButtionBind() {
        $('#Edit').on('click', function () {
            if ($('#ReportNo').val() != null && $('#Detail').val() != "") {
                EditMode = true;
                EditType = "";
                $("#Save").attr("name", "action:Edit");
                IsEditModeChange();
            }
        });

        $('#btnNew').on('click', function () {
            EditMode = true;
            EditType = "New";
            $("#Save").attr("name", "action:New");
            $("#TestBeforePicture").val('');
            $("#TestAfterPicture").val('');
            IsEditModeChange();
            GetArtworkTypeIDList();

            $('.DetailTable > tbody > tr').each(function () {
                $(this).remove();
            });
        });

        $('#New').on('click', function () {
            AddDetailRow();
        });

        $('#Save').on('click', function (e) {
            if (EditMode == false) {
                return false;
            }

            var detail = [];
            var ErrMsg = "";

            if ($('#BrandID').val() == '' || $('#SeasonID').val() == '' || $('#StyleID').val() == '' || $('#Article').val() == ''
                || $('#BrandID').val() == undefined || $('#SeasonID').val() == undefined || $('#StyleID').val() == undefined || $('#Article').val() == undefined) {
                ErrMsg += "Style, Brand, Season and Article cannot be empty<br/>";
            }

            if (ErrMsg != "") {
                msg.WithError(ErrMsg);
                return false;
            }

            // 重新調整index 順序。
            $('.DetailTable > tbody > tr').each(function (index, data) {
                var idx = $(this).closest('tr').attr('idx');
                if (idx != index) {
                    $.each($(this).find("input[id^='MockupCrocking_Detail']"), function () {
                        var tableName = $(this).attr('name').substr(0, $(this).attr('name').indexOf("["));
                        var rollName = $(this).attr('name').substr($(this).attr('name').indexOf("]") + 2, $(this).attr('name').length - $(this).attr('name').indexOf("]"));
                        $(this).attr("id", tableName + "_" + index.toString() + "__" + rollName);
                        $(this).attr("name", tableName + "[" + index.toString() + "]." + rollName);
                    });

                    $.each($(this).find("select[id^='MockupCrocking_Detail']"), function () {
                        var tableName = $(this).attr('name').substr(0, $(this).attr('name').indexOf("["));
                        var rollName = $(this).attr('name').substr($(this).attr('name').indexOf("]") + 2, $(this).attr('name').length - $(this).attr('name').indexOf("]"));
                        $(this).attr("id", tableName + "_" + index.toString() + "__" + rollName);
                        $(this).attr("name", tableName + "[" + index.toString() + "]." + rollName);
                    });
                }
            });

            $(".rowHeader input[type='text']").removeAttr("disabled");
            $(".DataTable input, .DataTable select").removeAttr("disabled");
        });

        $('#Undo').on('click', function () {
            EditMode = false;
            IsEditModeChange();
            if (EditType != "New") {
                $('#btnQuery').unbind('click').click();
            }
            else {
                if ($('#Request_BrandID').val() != '' || $('#Request_SeasonID').val() != '' || $('#Request_StyleID').val() != '' || $('#Request_Article').val() != '') {
                    $('#btnQuery').unbind('click').click();
                }
            }

            EditType = "";
        });

        $('#Delete').on('click', function (e) {
            if (EditMode == false && $('#ReportNo').val() != null && $('#ReportNo').val() != "") {
                e.preventDefault();
                msg.WithConfirm('Do you want to delete the data ?',
                    function () {
                        $("#DeleteSubmit").click();
                    }, null);
            }
        });

        $('#Picture').on('click', function () {
            var para = "?Title=" + $('.page-header span').html() + "&EditMode=" + EditMode;
            para += "&" + "Table=MockupCrocking";
            para += "&" + "TargetBeforeColumn=TestBeforePicture";
            para += "&" + "TargetAfterColumn=TestAfterPicture";
            para += "&" + "BeforeColumn=TestBeforePicture";
            para += "&" + "AfterColumn=TestAfterPicture";
            para += "&" + "PKey_1=ReportNo";
            para += "&" + "PKey_1_Val=" + $('#ReportNo').val();
            window.open('@Url.Action("PictureList", "PublicWindow",new { Area=""})' + para, 'Picture List', config = 'toolbar=no,status=no,location=no,width=1024,height=750');
        });

        $('#PDF').on('click', function () {
            if ($('#ReportNo').val() == ""
                || $('#Request_BrandID').val() == ""
                || $('#Request_SeasonID').val() == ""
                || $('#Request_StyleID').val() == ""
                || $('#Request_Article').val() == "") {

                return false;
            }

            var mockupCrocking_Request = {
                ReportNo: $('#ReportNo').val(),
                BrandID: $('#Request_BrandID').val(),
                SeasonID: $('#Request_SeasonID').val(),
                StyleID: $('#Request_StyleID').val(),
                Article: $('#Request_Article').val(),
            };
            $.ajax({
                url: "@Url.Action("ToPDF", "MockupCrocking", new { Area = "BulkFGT" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ mockupCrocking_Request }),
                async: false,
                success: function (data) {
                    if (data.Result) {
                        window.location.href = data.reportPath;
                    }
                    else {
                        msg.WithError(data.ErrorMessage);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $('#SendMail').on('click', function () {
            if ($('#ReportNo').val() == ""
                || $('#Request_BrandID').val() == ""
                || $('#Request_SeasonID').val() == ""
                || $('#Request_StyleID').val() == ""
                || $('#Request_Article').val() == "") {

                return false;
            }
            var para = '';
            window.open('@Url.Action("SendMailer", "SendMailAttachfiles", new { Area=""})' + para, 'SendMail', config = 'toolbar=no,status=no,location=no,width=800,height=400');
        });
    }



    function DetailButtonBind() {
        $('#btnDetailBrandSelectItem').on('click', function () {
            var para = "?TargetID=BrandID";
            window.open('@Url.Action("BrandList","PublicWindow",new{Area=""})' + para,'BrandID',config='toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnDetailSeasonSelectItem').on('click', function () {
            var para = "?TargetID=SeasonID&BrandID=" + $('#BrandID').val();
            window.open('@Url.Action("SeasonList","PublicWindow",new{Area=""})' + para,'SeasonID',config='toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnT1SubconSelectItem').on('click', function () {
            window.open('@Url.Action("LocalSuppList", "PublicWindow",new{Area=""})','Inspector',config='toolbar=no,status=no,location=no,width=1000,height=650');
        });

        $('#btnTechnicianSelectItem').on('click', function () {
            var para = "?CallFunction=MockupCrocking";
            window.open('@Url.Action("TechnicianList", "PublicWindow",new{Area=""})' + para,'Inspector',config='toolbar=no,status=no,location=no,width=1000,height=650');
        });

        $('#btnMRSelectItem').on('click', function () {
            var para = "?TargetID=MR";
            window.open('@Url.Action("Pass1List","PublicWindow",new{Area=""})' + para,'Inspector',config='toolbar=no,status=no,location=no,width=1000,height=650');
        });

        $('#btnDetailStyleSelectItem').on('click', function () {
            var para = "?TargetID=StyleID&BrandID=" + $('#BrandID').val() + "&SeasonID=" + $('#SeasonID').val();
            window.open('@Url.Action("StyleList","PublicWindow",new{Area=""})' + para,'StyleID',config='toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnDetailArticleSelectItem').on('click', function () {
            var para = "?TargetID=Article&OrderID=&StyleUkey=0&BrandID=" + $('#BrandID').val() + "&SeasonID=" + $('#SeasonID').val() + "&StyleID=" + $('#StyleID').val();
            window.open('@Url.Action("ArticleList","PublicWindow",new{Area=""})' + para,'Article',config='toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('.btnArtworkColorItem').on('click', function () {
            var brandid = $('#BrandID').val();
            if (brandid == '') {
                msg.WithError('Brand is null');
                return;
            }

            var idx = $(this).closest('tr').attr('idx');
            var para = "?TargetID=" + idx + "__ArtworkColor&BrandID=" + brandid + "&Title=Artwork Color";
            window.open('@Url.Action("ColorList", "PublicWindow",new{Area=""})' + para, 'Artwork Color', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('.btnFabricColorItem').on('click', function () {
            var brandid = $('#BrandID').val();
            if (brandid == '') {
                msg.WithError('Brand is null');
                return;
            }

            var idx = $(this).closest('tr').attr('idx');
            var para = "?TargetID=" + idx + "__FabricColor&BrandID=" + brandid + "&Title=Fabric Color";;
            window.open('@Url.Action("ColorList", "PublicWindow",new{Area=""})' + para, 'Fabric Color', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        blurEvent("");
    }

    function ClearColor() {
        $('.AFColor').each(function () {
            $(this).val('');
        });
    }

    function GetBrandList(data,targetID) {
        $('#' + targetID).val(data);
        GetArtworkTypeIDList();
        ClearColor();
        ReportNoClear(targetID);
    }

    function GetSeasonList(data, targetID) {
        $('#' + targetID).val(data);
        GetArtworkTypeIDList();
        ReportNoClear(targetID);
    }

    function GetStyleList(data, targetID) {
        $('#' + targetID).val(data);
        GetArtworkTypeIDList();
        ReportNoClear(targetID);
    }

    function GetArticleList(data, targetID) {
        $('#' + targetID).val(data);
        ReportNoClear(targetID);
    }

    function ReportNoClear(targetID) {
        if (targetID.indexOf('Request_') > -1) {
            $('#Request_ReportNo').html('');
        }
    }

    function GetLocalSupp(data) {
        $('#T1Subcon').val(data.ID);
        $('#T1SubconAbb').val(data.Name);
    }

    function GetTechnician(data, targetID) {
        $('#Technician').val(data.ID);
        $('#TechnicianDesc').val(data.Name + ' Ext.' + data.ExtNo);
    }

    function GetPass1(data, targetID) {
        $('#' + targetID).val(data.ID);
        $('#' + targetID + "Desc").val(data.Name + ' Ext.' + data.ExtNo);
        $('#' + targetID + 'Mail').val(data.EMail);
    }

    function GetColor(pickList, targetID) {
        var id = [];
        var name = [];
        $.each(pickList, function (idx, obj) {
            id.push(obj.ID);
            name.push(obj.Name);
        });

        $('#MockupCrocking_Detail_' + targetID).val(id.join(';'));
        $('#MockupCrocking_Detail_' + targetID + 'Name').val(name.join(';'));
    }

    function GetArtworkTypeIDList() {
        $('#ArtworkTypeID').empty();

        var brandid = $('#BrandID').val();
        var seasonid = $('#SeasonID').val();
        var styleid = $('#StyleID').val();

        if (brandid == '' || seasonid == '' || styleid == '') {
            return;
        }

        $.ajax({
            url: '@Url.Action("GetArtworkTypeID_Source", "MockupCrocking")',
            type: 'POST',
            data: jQuery.param({ brandid: brandid, seasonid: seasonid, styleid: styleid }),
            global: false,
            success: function (response) {
                if (response) {
                    $.each(response, function (idx, obj) {
                        $('#ArtworkTypeID').append($('<option></option>').val(obj.Value).html(obj.Text));
                    });
                }
            },
            error: function (xhr, status) {
                msg.WithError("Get View fail:" + xhr.responseText + " " + xhr.status);
            }
        });
    }

    function changeResult(obj) {
        var result = $(obj).val();
        if (result == "Pass") {
            $(obj).removeClass('red').addClass('blue');
        }
        else {
            $(obj).removeClass('blue').addClass('red');
        }

        var result = true;
        $(".result").each(function () {
            if ($(this).val() != "Pass") {
                result = false;
            }
        });

        if (result) {
            $('#Result').html("Pass").removeClass('red').addClass("blue");
        }
        else {
            $('#Result').html("Fail").removeClass('blue').addClass("red");
        }
    }

    function AddDetailRow() {
        var lastNO;
        if ($('.DetailTable > tbody > tr').length > 0) {
            lastNO = parseInt($('.DetailTable > tbody > tr:last-child').attr('idx')) + 1;
        }
        else {
            lastNO = 0;
        }

        $.ajax({
            url: "@Url.Action("AddDetailRow", "MockupCrocking", new { Area = "BulkFGT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ lastNO: lastNO}),
            async: false,
            success: function (data) {
                $('.DetailTable > thead > tr').show();
                $('.DetailTable > tbody').append(data);

                DetailButtonBind();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function GetPicture(data) {
        $('#TestBeforePicture').val(data.BeforePicture.replace("data:image/png;base64,", ""));
        $('#TestAfterPicture').val(data.AfterPicture.replace("data:image/png;base64,", ""));
    }

    function FailMail() {
        var para = "?Title=" + $('.page-header span').html() + "&FactoryID=@ViewBag.FactoryID&Type=BulkFGT&ExitReload=False";
        window.open('@Url.Action("TestFailMailList", "PublicWindow",new { Area=""})' + para, 'Mail List', config = 'toolbar=no,status=no,location=no,width=650,height=750');
    }

    function GetTestFailMailList(data) {
        var to = "";
        var cc = "";
        $.each(data, function (index, value) {
            to += value.To + ';';
            cc += value.CC + ';';
        });

        $.ajax({
            url: "@Url.Action("SendMail", "MockupCrocking", new { Area = "BulkFGT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ ReportNo: $('#ReportNo').val(), TO: to, CC: cc }),
            async: false,
            success: function (data) {
                if (data.result) {
                    msg.WithSuccesCheck("Success", function () {
                        $("#btnQuery").click();
                    });
                }
                else {
                    msg.WithWarningCheck(data.resultMsg, function () {
                        location.reload();
                    });
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                // console.log(xhr.responseText);
                msg.WithWarningCheck(xhr.responseText, function () {
                    location.reload();
                });
            }
        });
    }

    function GetSendMailer(data) {
        var to = data.To;
        var cc = data.CC;

        if (to != "") {

        $.ajax({
            url: "@Url.Action("SendMail", "MockupCrocking", new { Area = "BulkFGT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ ReportNo: $('#ReportNo').val(), TO: to, CC: cc }),
            async: false,
            success: function (data) {
                if (data.result) {
                    msg.WithSuccesCheck("Success", function () {
                        $("#btnQuery").click();
                    });
                }
                else {
                    msg.WithWarningCheck(data.resultMsg, function () {
                        location.reload();
                    });
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                // console.log(xhr.responseText);
                msg.WithWarningCheck(xhr.responseText, function () {
                    location.reload();
                });
            }
        });
        }
    }
</script>
