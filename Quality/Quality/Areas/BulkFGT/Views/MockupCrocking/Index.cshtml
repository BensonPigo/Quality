@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model DatabaseObject.ViewModel.BulkFGT.MockupCrocking_ViewModel

<link href="~/ThirdParty/plugins/DataTables/datatables.min.css" rel="stylesheet" />
<link href="~/ThirdParty/SciCustom/css/TableStyle.css" rel="stylesheet" />
<script src="~/ThirdParty/plugins/DataTables/datatables.min.js"></script>
<link href="~/ThirdParty/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" />

<style type="text/css">
    .row {
        --bs-gutter-x: 1.5rem;
        --bs-gutter-y: 0;
        display: flex;
        flex-wrap: wrap;
        width: 95vw;
        margin-top: calc(var(--bs-gutter-y) * -1);
        margin-right: calc(var(--bs-gutter-x)/ -2);
        margin-left: calc(var(--bs-gutter-x)/ -2);
    }

    .button {
        background-color: #E00000; /* Red */
        border: none;
        color: white;
        padding: 6px 16px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
    }

    .row > * {
        flex-shrink: 0;
        width: 100%;
        max-width: 100%;
        padding-left: calc(var(--bs-gutter-x)/ 2);
    }

    .rowHeader {
        font-size: 1.1vw;
        font-weight: bold;
    }

    .queryHeader select {
        width: 10vw;
    }

    .rowHeader input[type="text"] {
        width: 10vw;
    }

    .col-auto {
        width: auto;
    }

    .col-auto > p {
        padding: 0
    }

    .White {
        color: white !important;
    }

    .Black {
        color: black !important;
    }

    .IsEditMode {
        color: white !important;
        cursor: pointer;
    }

    .IsEditModeQuery {
        color: gray !important;
        cursor: no-drop;
    }

    #ButtonMode {
        width: 92vw;
    }

    .DataTable {
        width: 92vw;
        font-size: 1rem;
        font-weight: bold;
        border: solid 1px black;
        background-color: white;
    }

        .DataTable > tbody img {
            cursor: pointer;
        }

        .DataTable > tbody > tr:nth-of-type(odd) {
            background-color: #ffffff;
        }

        .DataTable > tbody > tr:nth-of-type(even) {
            background-color: #F0F2F2;
        }

        .DataTable > tbody > tr > td {
            border: solid 1px gray;
            padding: 0.5em;
            text-align: left;
            vertical-align: middle;
        }

        .DataTable input[type='text'], .DataTable input[type='number'] {
            width: 70%;
        }
</style>
@using (Html.BeginForm("Index", ViewContext.RouteData.GetRequiredString("Controller"), new { @id = "DataForm" }, FormMethod.Post))
{
    <div class="main-content">
        <header class="page-header">
            <div style="float:left">
                <h3>
                    <span>Mockup Crocking Test</span>
                </h3>
                <div class="breadcrumb">
                    <div>Home</div>
                    <div class="current">Mockup Crocking Test</div>
                </div>
            </div>
            <div class="breadcrumb queryHeader" style="justify-content: flex-end;">
                <h4 style="margin-right: 1em;color:white">Report No</h4>
                @Html.DropDownList("ReportNo", (List<SelectListItem>)ViewBag.ReportNo_Source, null, new { @class = "form-control" })
                <input id="btnNew" type="button" class="button" style="margin-left:1em;border:0;" name="New" value="New">
            </div>
        </header>
        <div class="main-area">
            <div class="content-scroll">
                <div class="inner-scroll">
                    @*查詢*@
                    <div class="row rowHeader">
                        <div class="col-auto">
                            <p class="InfoTitle White">Brand</p>
                        </div>
                        <div class="col-auto">
                            @Html.TextBoxFor(o => o.Request.BrandID)
                            <input id="btnBrandSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                        </div>
                        <div class="col-auto"><p class="InfoTitle White">Season</p></div>
                        <div class="col-auto">
                            @Html.TextBoxFor(o => o.Request.SeasonID)
                            <input id="btnSeasonSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                        </div>
                        <div class="col-auto"><p class="InfoTitle White">Style</p></div>
                        <div class="col-auto">
                            @Html.TextBoxFor(o => o.Request.StyleID)
                            <input id="btnStyleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                        </div>
                        <div class="col-auto"><p class="InfoTitle White">Article</p></div>
                        <div class="col-auto">
                            @Html.TextBoxFor(o => o.Request.Article)
                            <input id="btnArticleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                        </div>

                        <div class="col-auto">
                            <button id="btnQuery" type="submit" name="Action:Query" class="site-btn btn-gy font1rem Black" style="padding: 0.4em;">Query</button>
                        </div>
                    </div>

                    @*查詢*@
                    <div style="margin-top: 1em;">
                        <table id="ButtonMode">
                            <tbody>
                                <tr>
                                    <td>
                                        <h4 id="Edit" style="margin-right: 1em;">
                                            <img src="~/Image/Icon/Edit.png" width="30" />
                                            Edit
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 style="margin-right: 1em;">
                                            <button id="Save" type="submit" style="margin:0;min-width:0;background-color:transparent">
                                                <img src="~/Image/Icon/Save.png" width="30" />
                                                Save
                                            </button>
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="Undo" style="margin-right: 1em;">
                                            <img src="~/Image/Icon/Undo.png" width="30" />
                                            Undo
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="Delete" style=" margin-right: 1em;">
                                            <img src="~/Image/Icon/Delete.png" width="30" />
                                            Delete
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="SendMail" style="margin-right: 1em;">
                                            <img src="~/Image/Icon/SendMail.png" width="30" />
                                            Send to MR
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="PDF" style="margin-right: 1em;">
                                            <img src="~/Image/Icon/PDF.png" width="30" />
                                            PDF
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="Picture" style=" margin-right: 1em;">
                                            <img src="~/Image/Icon/Camera.png" width="30" />
                                            Picture
                                        </h4>
                                    </td>
                                    <td style="width: 30%;">
                                    </td>
                                    <td align="right">
                                        <h4 id="New" style=" margin-right: 1em;">
                                            <img src="~/Image/Icon/New.png" width="30" />
                                            New Item
                                        </h4>
                                    </td>
                            </tbody>
                        </table>
                    </div>

                    @*主資料*@
                    <!--<div style="margin-top: 1em;">-->
                        <table class="DataTable">
                            <tbody>
                                <tr>
                                    <td style="width: 10vw;"><h5>Report No</h5></td>
                                    <td style="width: 20vw;">
                                        @Html.TextBoxFor(o => o.ReportNo, "")
                                    </td>
                                    <td style="width: 10vw;"><h5>SP#</h5></td>
                                    <td style="width: 20vw;">
                                        @Html.TextBoxFor(o => o.POID, "")
                                    </td>
                                    <td style="width: 10vw;"><h5>Brand</h5></td>
                                    <td style="width: 20vw;">
                                        @Html.TextBoxFor(o => o.BrandID, "")
                                        <input id="btnDetailBrandSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>Season</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.SeasonID, "")
                                        <input id="btnDetailSeasonSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                    </td>
                                    <td><h5>Style#</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.StyleID, "")
                                        <input id="btnDetailStyleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                    </td>
                                    <td><h5>Article</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.Article, "", new { @class = "OnlyEdit"})
                                        <input id="btnDetailArticleSelectItem" type="button" class="OnlyEdit site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>Artwork</h5></td>
                                    <td>
                                        <select id="ArtworkTypeID" name="ArtworkTypeID" style="width:157px;">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ArtworkTypeID_Source)
                                            {
                                                string selected = item.Text.Equals(Model.ArtworkTypeID) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td><h5>Remark</h5></td>
                                    <td colspan="3">
                                        @Html.TextBoxFor(o => o.Remark, "", new { @class = "OnlyEdit"})
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>T1/SubconName</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.T1Subcon, "", new { @class = "OnlyEdit" })
                                        @Html.TextBoxFor(o => o.T1SubconAbb, "", new { @readonly = "readonly" })
                                        <input type="button" />
                                    </td>
                                    <td><h5>Test Date</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.TestDate, "{0:yyyy/MM/dd}", new { @class = "date-picker OnlyEdit" })
                                    </td>
                                    <td><h5>Receive Date</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.ReceivedDate, "{0:yyyy/MM/dd}", new { @class = "date-picker OnlyEdit" })
                                    </td>
                                </tr>
                                <tr>
                                    <td><h5>Released Date</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => o.ReleasedDate, "{0:yyyy/MM/dd}", new { @readonly = "readonly", @class = "date-picker OnlyEdit" })
                                    </td>
                                    <td><h5>Result</h5></td>
                                    <td>
                                        @Html.DropDownListFor(o => o.Result, (List<SelectListItem>)Model.Result_Source, null, new { @class = "OnlyEdit" })
                                    </td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td><h5>Technician</h5></td>
                                    <td>
                                        @{
                                            string nameValue = Model.MRName;
                                            if (string.IsNullOrWhiteSpace(Model.TechnicianName))
                                            {
                                                nameValue += " Ext." + Model.TechnicianExtNo;
                                            }
                                        }
                                        @Html.TextBoxFor(o => o.Technician, "", new { @readonly = "readonly" })
                                        <input id="btnDetailInspectorSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                    </td>
                                    <td><h5>MR</h5></td>
                                    <td>
                                        @{
                                            nameValue = Model.MRName;
                                            if (string.IsNullOrWhiteSpace(Model.MRExtNo))
                                            {
                                                nameValue += " Ext." + Model.MRExtNo;
                                            }

                                        }
                                        @Html.TextBoxFor(o => o.MR, "", new { @readonly = "readonly" })
                                        <label id="MRName">@nameValue</label>
                                        <input id="btnDetailInspectorSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                    </td>
                                    <td><h5>Last Edit Name</h5></td>
                                    <td colspan="5">
                                        @Html.TextBoxFor(o => o.LastEditName, "", new { @readonly = "readonly" })
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
    </div>
}

<script type="text/javascript">
    var msg;
    var EditMode;
    var EditType;
    $(function () {
        $('#SendMail').click(function () {
            var para = "?TO=jeff.Yeh@sportscity.com.tw";
            window.open('@Url.Action("SendMailer", "SendMailAttachfiles", new { Area=""})' + para, 'SendMail', config = 'toolbar=no,status=no,location=no,width=650,height=400');
        });

        msg = new MessagerAlert();

        EditMode = false;
        IsEditModeChange();
    });

    function IsEditModeChange() {
        EditModeButtionBind();
        Clear();
        $('#btnQuery').unbind('click').removeClass("IsEditModeQuery");

        if (EditMode) {
            $(".queryHeader select").attr("disabled", "disabled");
            $('#btnNew').unbind('click').addClass("IsEditModeQuery");

            $(".rowHeader input[type='text']").attr("disabled", "disabled");
            $(".rowHeader input[type='button']").unbind('click').addClass("IsEditModeQuery");
            $('#btnQuery').addClass("IsEditModeQuery");

            $("#Edit, #Delete, #Picture, #SendMail, #PDF").removeClass("IsEditMode");
            $('#Save, #Undo, #New').addClass("IsEditMode");

            if (EditType == "New") {
                $(".DataTable input:not(#Detail_ReportNo,#Detail_LastEditName), .DataTable select").removeAttr("disabled");
            }
            else {
                $(".OnlyEdit").removeAttr("disabled");
            }

            //$(".DetailTable img").addClass('display-None');

            DetailButtonBind();
        }
        else {
            $(".queryHeader select").removeAttr("disabled");
            $(".rowHeader input[type='text']").removeAttr("disabled");
            $(".rowHeader input[type='button']").removeClass("IsEditModeQuery");
            $('#btnNew').removeClass("IsEditModeQuery");
            $('#Save, #Undo, #New').unbind('click').removeClass("IsEditMode");
            $('#btnQuery').removeClass("IsEditModeQuery");
            QueryButtonBind();

            if ($('#ReportNo').val() != undefined && $('#ReportNo').val() != '') {
                $("#Edit, #Delete, #Picture, #PDF").addClass("IsEditMode");
            }

            $("#SendMail").addClass("IsEditMode");

            $(".DataTable input, .DataTable select").attr("disabled", "disabled");
            //$(".DetailTable img").removeClass('display-None');

            $('#btnQuery').on('click', function () {
                if (EditType != "New") {
                    if ($('#Request_BrandID').val() == '' || $('#Request_SeasonID').val() == '' || $('#Request_StyleID').val() == '' || $('#Request_Article').val() == '') {
                        msg.WithError("Brand, Season, Style and Article cannot be empty.");
                        return false;
                    }
                }
            });
        }
    }

    function Clear() {
        if (EditType == "New") {
            $(".DataTable input[type='text'], .DetailTable select").val('');
        }
    }

    function QueryButtonBind() {
        $('#btnBrandSelectItem').on('click', function () {
            window.open('@Url.Action("BrandList","PublicWondow",new{Area=""})', 'Brand', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnSeasonSelectItem').on('click', function () {
            var para = "?BrandID=" + $('#Request_BrandID').val();
            window.open('@Url.Action("SeasonList","PublicWondow",new{Area=""})' + para, 'Season', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnStyleSelectItem').on('click', function () {
            var para = "?BrandID=" + $('#Request_BrandID').val() + "&SeasonID=" + $('#Request_SeasonID').val();
            window.open('@Url.Action("StyleList","PublicWondow",new{Area=""})' + para, 'Style', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnArticleSelectItem').on('click', function () {
            var para = "?OrderID=&StyleUkey=0&BrandID=" + $('#Request_BrandID').val() + "&SeasonID=" + $('#Request_SeasonID').val() + "&StyleID=" + $('#Request_StyleID').val();
            window.open('@Url.Action("ArticleList","PublicWondow",new{Area=""})' + para, 'Article', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        blurEvent('Request_');
    }

    function blurEvent(name) {
        $("#" + name + "BrandID").blur(function () {
            if ($(this).val() == '') {
                if (name == '') {
                    GetArtworkTypeIDList();
                }
                return;
            }

            $.ajax({
                url: "@Url.Action("BrandList","PublicWondow",new{Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#" + name +"BrandID").val('');
                        msg.WithError('Brand Not Found');
                    }
                    else if (name == '') {
                        GetArtworkTypeIDList();
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $("#" + name + "SeasonID").blur(function () {
            if ($(this).val() == '') {
                return;
            }

            var BrandID = $('#' + name +'BrandID').val();
            $.ajax({
                url: "@Url.Action("SeasonList","PublicWondow",new{Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: BrandID, SeasonID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#" + name+"SeasonID").val('');
                        msg.WithError('Season Not Found');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $("#" + name + "StyleID").blur(function () {
            if ($(this).val() == '') {
                return;
            }

            var BrandID = $('#' + name +'BrandID').val();
            var SeasonID = $('#' + name +'SeasonID').val();
            $.ajax({
                url: "@Url.Action("StyleList","PublicWondow",new{Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: BrandID, SeasonID: SeasonID, StyleID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#" + name+"StyleID").val('');
                        msg.WithError('Style Not Found');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $('#' + name + 'Article').blur(function () {
            if ($(this).val() == '') {
                return;
            }

            var BrandID = $('#' + name +'BrandID').val();
            var SeasonID = $('#' + name +'SeasonID').val();
            var StyleID = $('#' + name +'StyleID').val();
            $.ajax({
                url: "@Url.Action("ArticleList","PublicWondow",new{Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: BrandID, StyleUkey : 0, SeasonID: SeasonID, StyleID: StyleID, Article: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#" + name+"Article").val('');
                        msg.WithError('Article Not Found');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });
    }

    function EditModeButtionBind() {
        $('#Edit').on('click', function () {
            if ($('#ReportNo').val() != null && $('#Detail').val() != "") {
                EditMode = true;
                EditType = "";
                $("#Save").attr("name", "Action:Edit");
                IsEditModeChange();
            }
        });

        $('#btnNew').on('click', function () {
            EditMode = true;
            EditType = "New";
            $("#Save").attr("name", "Action:New");
            IsEditModeChange();
            GetArtworkTypeIDList();
        });

        $('#Save').on('click', function (e) {
            var detail = [];
            var ErrMsg = "";

            if ($('#BrandID').val() == '' || $('#SeasonID').val() == '' || $('#StyleID').val() == '' || $('#Article').val() == ''
                || $('#BrandID').val() == undefined || $('#SeasonID').val() == undefined || $('#StyleID').val() == undefined || $('#Article').val() == undefined) {
                ErrMsg += "Style, Brand, Season and Article cannot be empty<br/>";
            }

            if (ErrMsg != "") {
                e.preventDefault();
                msg.WithError(ErrMsg);
                return;
            }

            //document.getElementById("DataForm").submit();
        });

        $('#Undo').on('click', function () {
            EditMode = false;
            IsEditModeChange();
            if (EditType != "New") {
                $('#btnQuery').click();
            }
            else {
                if ($('#BrandID').val() != '' || $('#SeasonID').val() != '' || $('#StyleID').val() != '' || $('#Article').val() != '') {
                    $('#btnQuery').click();
                }
            }

            EditType = "";
        });

        $('#Delete').on('click', function () {
            if ($('#ReportNo').val() != null && $('#ReportNo').val() != "") {
                msg.WithConfirm('Do you want to delete the data ?',
                    function () {
                    }, null);
            }
        });

        $('#Picture').on('click', function () {
            if ($('#Detail_ReportNo').val() != null && $('#Detail_ReportNo').val() != "") {
                var para = "?EditMode=" + EditMode + "&Table=PullingTest&BrforeColumn=TestBeforePicture&AfterColumn=TestAfterPicture&PKey_1=ReportNo&PKey_1_Val=" + $('#ReportNo').val();
                window.open('@Url.Action("PictureList","PublicWondow",new{Area=""})' + para, 'Article', config = 'toolbar=no,status=no,location=no,width=400,height=650');
            }
        });
    }

    function DetailButtonBind() {
        $('#btnDetailBrandSelectItem').on('click', function () {
            window.open('@Url.Action("BrandList","PublicWondow",new{Area=""})','BrandID',config='toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnDetailSeasonSelectItem').on('click', function () {
            if (checkValue('season','Detail_') == 0) {
                return;
            }

            var para = "?BrandID=" + $('#Detail_BrandID').val();
            window.open('@Url.Action("SeasonList","PublicWondow",new{Area=""})' + para,'SeasonID',config='toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnDetailInspectorSelectItem').on('click', function () {
            window.open('@Url.Action("Pass1List","PublicWondow",new{Area=""})','Inspector',config='toolbar=no,status=no,location=no,width=1000,height=650');
        });

        $('#btnDetailStyleSelectItem').on('click', function () {
            if (checkValue('style', 'Detail_') == 0) {
                return;
            }

            var para = "?BrandID=" + $('#Detail_BrandID').val() + "&SeasonID=" + $('#Detail_SeasonID').val();
            window.open('@Url.Action("StyleList","PublicWondow",new{Area=""})' + para,'StyleID',config='toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnDetailArticleSelectItem').on('click', function () {
            var para = '';
            var result = checkValue('article', 'Detail_');
            if (result == 0) {
                return;
            }
            else if (result == 1) {
                para = "?OrderID=" + $('#Detail_POID').val() + "&StyleUkey=0";
            }
            else if (result == 2) {
                para = "?OrderID=&StyleUkey=0&BrandID=" + $('#Detail_BrandID').val() + "&SeasonID=" + $('#Detail_SeasonID').val() + "&StyleID=" + $('#Detail_StyleID').val();
            }
            window.open('@Url.Action("ArticleList","PublicWondow",new{Area=""})' + para,'Article',config='toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnDetailSizeCodeSelectItem').on('click', function () {
            var para = '';
            var result = checkValue('sizecode', 'Detail_');
            if (result == 0) {
                return;
            }
            else if (result == 1) {
                para = "?OrderID=" + $('#Detail_POID').val() + "&StyleUkey=0&Article=" + $('#Detail_Article').val();
            }
            else if (result == 2) {
                para = "?OrderID=&StyleUkey=0&BrandID=" + $('#Detail_BrandID').val() + "&SeasonID=" + $('#Detail_SeasonID').val() + "&StyleID=" + $('#Detail_StyleID').val();
            }

            window.open('@Url.Action("SizeList","PublicWondow",new{Area=""})' + para,'SizeCode',config='toolbar=no,status=no,location=no,width=400,height=650');
        });

        blurEvent("");
    }

    function GetBrandList(data) {
        $('#Request_BrandID').val(data);
    }

    function GetSeasonList(data) {
        $('#Request_SeasonID').val(data);
    }

    function GetStyleList(data) {
        $('#Request_StyleID').val(data);
    }

    function GetArticleList(data) {
        $('#Request_Article').val(data);
    }

    function GetArtworkTypeIDList() {
        $('#ArtworkTypeID').empty();

        var brandid = $('#BrandID').val();
        var seasonid = $('#SeasonID').val();
        var styleid = $('#StyleID').val();

        $.ajax({
            url: '@Url.Action("GetArtworkTypeID_Source", "MockupCrocking")',
            type: 'POST',
            data: jQuery.param({ brandid:'', seasonid: '', styleid: '' }),
            global: false,
            success: function (response) {
                if (response) {
                    $.each(response, function (idx, obj) {
                        $('#ArtworkTypeID').append($('<option></option>').val(obj.Value).html(obj.Text));
                    });
                }
            },
            error: function (xhr, status) {
                msg.WithError("Get View fail:" + xhr.responseText + " " + xhr.status);
            }
        });
    }
</script>
