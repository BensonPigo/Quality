@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/ThirdParty/plugins/DataTables/datatables.min.css" rel="stylesheet" />
<link href="~/ThirdParty/SciCustom/css/TableStyle.css" rel="stylesheet" />
<script src="~/ThirdParty/plugins/DataTables/datatables.min.js"></script>
<link href="~/ThirdParty/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" />

@model DatabaseObject.ViewModel.BulkFGT.MockupOven_ViewModel
<style type="text/css">
    .row {
        --bs-gutter-x: 1.5rem;
        --bs-gutter-y: 0;
        display: flex;
        flex-wrap: wrap;
        width: 95vw;
        margin-top: calc(var(--bs-gutter-y) * -1);
        margin-right: calc(var(--bs-gutter-x)/ -2);
        margin-left: calc(var(--bs-gutter-x)/ -2);
    }

    .button {
        background-color: #E00000; /* Red */
        border: none;
        color: white;
        padding: 6px 16px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
    }

    .row > * {
        flex-shrink: 0;
        width: 100%;
        max-width: 100%;
        padding-left: calc(var(--bs-gutter-x)/ 2);
    }

    .rowHeader {
        font-size: 1.1vw;
        font-weight: bold;
    }

    .queryHeader select {
        width: 10vw;
    }

    .rowHeader input[type="text"] {
        width: 10vw;
    }

    .col-auto {
        width: auto;
    }

        .col-auto > p {
            padding: 0
        }

    .White {
        color: white !important;
    }

    .Black {
        color: black !important;
    }

    .IsEditMode {
        color: white !important;
        cursor: pointer;
    }

    .IsEditModeQuery {
        color: gray !important;
        cursor: no-drop;
    }

    #ButtonMode {
        width: 92vw;
    }

    .DataTable {
        width: 92vw;
        font-size: 1rem;
        font-weight: bold;
        border: solid 1px black;
        background-color: white;
    }

        .DataTable > tbody img {
            cursor: pointer;
        }

        .DataTable > tbody > tr:nth-of-type(odd) {
            background-color: #ffffff;
        }

        .DataTable > tbody > tr:nth-of-type(even) {
            background-color: #F0F2F2;
        }

        .DataTable > tbody > tr > td {
            border: solid 1px gray;
            padding: 0.5em;
            text-align: left;
            vertical-align: middle;
        }

        .DataTable input[type='text'], .DataTable input[type='number'] {
            width: 70%;
        }
</style>
@using (Html.BeginForm("Index", "MockupOvenTest", new { }, FormMethod.Post))
{
<div class="main-content">
    <header class="page-header">
        <h3>
            <i class="icon-users"></i><span>Mockup Oven Test</span>
        </h3>
        <div class="breadcrumb">
            <div>Home</div>
            <div class="current">Fabric Oven Test</div>
        </div>
        <div class="breadcrumb queryHeader" style="justify-content: flex-end;">
            <h4 style="margin-right: 1em;color:white">Report No</h4>
            @Html.DropDownList("ReportNo", (List<SelectListItem>)ViewBag.ReportNo_Source, null, new { @class = "form-control" })
            <input id="btnNew" type="button" class="button" style="margin-left:1em;border:0;" name="New" value="New">
        </div>
    </header>
    <div class="main-area">
        <div class="content-scroll">
            <div class="inner-scroll">
                <div class="row rowHeader">
                    <div class="col-auto">
                        <p class="InfoTitle White">Brand</p>
                    </div>
                    <div class="col-auto">  
                        @Html.TextBoxFor(o => o.Request.BrandID, "", "")
                        <input id="btnBrandSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                    </div>
                    <div class="col-auto"><p class="InfoTitle White">Season</p></div>
                    <div class="col-auto">
                        @Html.TextBoxFor(o => o.Request.SeasonID, "", "")
                        <input id="btnSeasonSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                    </div>
                    <div class="col-auto"><p class="InfoTitle White">Style</p></div>
                    <div class="col-auto">
                        @Html.TextBoxFor(o => o.Request.StyleID, "", "")
                        <input id="btnStyleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                    </div>
                    <div class="col-auto"><p class="InfoTitle White">Article</p></div>
                    <div class="col-auto">
                        @Html.TextBoxFor(o => o.Request.Article, "", "")
                        <input id="btnArticleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                    </div>

                    <div class="col-auto">
                        <button id="btnQuery" type="submit" name="Action:Query" class="site-btn btn-gy font1rem Black" style="padding: 0.4em;">Query</button>
                    </div>
                </div>

                <div style="margin-top: 1em;">
                    <table id="ButtonMode">
                        <tbody>
                            <tr>
                                <td>
                                    <h4 id="Edit" style="margin-right: 1em;">
                                        <img src="~/Image/Icon/Edit.png" width="30" />
                                        Edit
                                    </h4>
                                </td>
                                <td>
                                    <h4 style="margin-right: 1em;">
                                        <button id="Save" type="submit" style="margin:0;min-width:0;background-color:transparent">
                                            <img src="~/Image/Icon/Save.png" width="30" />
                                            Save
                                        </button>
                                    </h4>
                                </td>
                                <td>
                                    <h4 id="Undo" style="margin-right: 1em;">
                                        <img src="~/Image/Icon/Undo.png" width="30" />
                                        Undo
                                    </h4>
                                </td>
                                <td>
                                    <h4 id="Delete" style=" margin-right: 1em;">
                                        <img src="~/Image/Icon/Delete.png" width="30" />
                                        Delete
                                    </h4>
                                </td>
                                <td>
                                    <h4 id="Picture" style=" margin-right: 1em;">
                                        <img src="~/Image/Icon/Camera.png" width="30" />
                                        Picture
                                    </h4>
                                </td>
                                <td style="width: 50%;">
                                </td>
                        </tbody>
                    </table>
                </div>

                <div style="margin-top: 1em;">
                    <table class="DataTable DetailTable">
                        <tbody>
                            <tr>
                                <td style="width: 10vw;"><h5>Report No</h5></td>
                                <td style="width: 20vw;">
                                    @Html.TextBoxFor(o => o.ReportNo, "", new { @readonly = "readonly" })
                                </td>
                                <td style="width: 10vw;"><h5>SP#</h5></td>
                                <td style="width: 20vw;">
                                    @Html.TextBoxFor(o => o.POID, "")
                                </td>
                                <td style="width: 10vw;"><h5>Brand</h5></td>
                                <td style="width: 20vw;">
                                    @Html.TextBoxFor(o => o.BrandID, "")
                                    <input id="btnDetailBrandSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                </td>
                            </tr>
                            <tr>
                                <td><h5>Season</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.SeasonID, "", new { @readonly = "readonly" })
                                    <input id="btnDetailSeasonSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                </td>
                                <td><h5>Style#</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.StyleID, "", new { @readonly = "readonly" })
                                    <input id="btnDetailStyleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                </td>
                                <td><h5>Article</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.Article, "", new { @class = "OnlyEdit", @readonly = "readonly" })
                                    <input id="btnDetailArticleSelectItem" type="button" class="OnlyEdit site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                </td>
                            </tr>
                            <tr>
                                <td><h5>Artwork</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.ArtworkTypeID, "", new { @class = "OnlyEdit", @readonly = "readonly" })
                                </td>
                                <td><h5>Remark</h5></td>
                                <td colspan="3">
                                    @Html.TextBoxFor(o => o.Remark, "", new { @class = "OnlyEdit", @readonly = "readonly" })
                                </td>
                            </tr>
                            <tr>
                                <td><h5>T1/SubconName</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.T1Subcon, "", new { @class = "OnlyEdit", @readonly = "readonly" })
                                    @Html.TextBoxFor(o => o.T1SubconAbb, "", new { @class = "OnlyEdit", @readonly = "readonly" })
                                    <input id="btnDetailSubconNameSelectItem" type="button" class="OnlyEdit site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                </td>
                                <td><h5>T2/SupplierName</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.T2Supplier, "", new { @class = "OnlyEdit", @readonly = "readonly" })
                                    @Html.TextBoxFor(o => o.T2SupplierAbb, "", new { @class = "OnlyEdit", @readonly = "readonly" })
                  
                                    <input id="btnDetailSupplierNameSelectItem" type="button" class="OnlyEdit site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                </td>
                                <td><h5>Test Date</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.TestDate, "{0:yyyy/MM/dd}", new { @readonly = "readonly", @class = "date-picker OnlyEdit" })
                                </td>
                            </tr>
                            <tr>
                                <td><h5>Receive Date</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.ReceivedDate, "{0:yyyy/MM/dd}", new { @readonly = "readonly", @class = "date-picker OnlyEdit" })
                                </td>
                                <td><h5>Released Date</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.ReleasedDate, "{0:yyyy/MM/dd}", new { @readonly = "readonly", @class = "date-picker OnlyEdit" })
                                </td>
                                <td><h5>Result</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.Remark ,"", new { @class = "OnlyEdit", @readonly = "readonly", @type = "number" })
                                </td>
                            </tr>
                            <tr>
                                <td><h5>Technician</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.Technician, "", new { @class = "OnlyEdit", @readonly = "readonly" })
                                    <input id="TechnicianName" readonly="readonly" value="@Model.TechnicianName @Model.TechnicianExtNo">                                 
                                    <input id="btnDetailTechnicianSelectItem" type="button" class="OnlyEdit site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                </td>
                                <td><h5>MR</h5></td>
                                <td>
                                    @{
                                        string MRname=string.Empty;
                                        if (!string.IsNullOrWhiteSpace(Model.MR))
                                        {
                                            MRname = Model.Technician + " Ext. " + Model.MR;
                                        }

                                    }
                                    @Html.TextBoxFor(o => o.MR, "", new { @class = "OnlyEdit", @readonly = "readonly" })
                                    <input id="MRName" readonly="readonly" value="">
                                    <input id="btnDetailMRSelectItem" type="button" class="OnlyEdit site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                </td>
                                <td><h5>Last Edit Name</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.LastEditName, "", new { @readonly = "readonly" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="6"><h5 style="font-weight: 900;">Testing Method</h5></td>
                            </tr>
                            <tr>
                                <td><h5>Temperature (oC)</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.TestTemperature, "", new { @class = "OnlyEdit", @readonly = "readonly" })

                                </td>
                                <td><h5>Time (hrs)</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.TestTime, "", new { @class = "OnlyEdit", @readonly = "readonly" })
                                </td>
                                <td></td>
                                <td>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="6"><h5>Manufacturer Test Condition (For Heat Transfer)</h5></td>
                            </tr>
                            <tr>
                                <td colspan="2"><h5>Actual Plate Tempereture (˚C)</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.HTPlate, "", new { @class = "OnlyEdit", @readonly = "readonly" })

                                </td>
                                <td colspan="2"><h5>Pell Off (hot/cold)(peel)</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.HTPellOff, "", new { @class = "OnlyEdit", @readonly = "readonly" })
                                </td>

                            </tr>
                            <tr>
                                <td colspan="2"><h5>Actual Flim Tempereture (˚C)</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.HTFlim, "", new { @class = "OnlyEdit", @readonly = "readonly" })

                                </td>
                                <td colspan="2"><h5>2nd Press (no reverse) (sec.)</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.HT2ndPressnoreverse, "", new { @class = "OnlyEdit", @readonly = "readonly" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="2"><h5>Time (sec.)</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.HTTime, "", new { @class = "OnlyEdit", @readonly = "readonly" })

                                </td>
                                <td colspan="2"><h5>2nd Press (reversed)(sec.)</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.HT2ndPressreversed, "", new { @class = "OnlyEdit", @readonly = "readonly" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="2"><h5>Pressure(kg/cm2)</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.HTPressure, "", new { @class = "OnlyEdit", @readonly = "readonly" })

                                </td>
                                <td colspan="2"><h5>Cooling Time (min)</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.HTCoolingTime, "", new { @class = "OnlyEdit", @readonly = "readonly" })
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
}

<script type="text/javascript">

    @*document.getElementById("MRName").value = @Model.Technician + " Ext. " + @Model.MR;;*@

        var msg;
        var EditMode;
        var EditType;
        $(function () {
            msg = new MessagerAlert();

            EditMode = false;
            IsEditModeChange();
        });

    function IsEditModeChange() {
        EditModeButtionBind();
        Clear();

        if (EditMode) {
            $(".queryHeader select").attr("disabled", "disabled");
            $('#btnNew').unbind('click').addClass("IsEditModeQuery");

            $(".rowHeader input[type='text']").attr("disabled", "disabled");
            $(".rowHeader input[type='button']").unbind('click').addClass("IsEditModeQuery");
            $('#btnQuery').addClass("IsEditModeQuery");

            $("#Edit, #Delete, #Picture").removeClass("IsEditMode");
            $('#Save, #Undo, #New').addClass("IsEditMode");

            if (EditType == "New") {
                $(".DetailTable input:not(#Detail_ReportNo,#Detail_LastEditName), .DetailTable select").removeAttr("disabled");
                $(".DetailTable input:not(#Detail_ReportNo,#Detail_LastEditName), .DetailTable select").removeAttr("readonly");
            }
            else {
                $(".OnlyEdit").removeAttr("disabled").removeAttr("readonly");
            }

            $(".DetailTable img").addClass('display-None');

            DetailButtonBind();
            $('#btnQuery').on('click', function () {
                return false;
            });
        }
        else {
            $(".queryHeader select").removeAttr("disabled");
            $(".rowHeader input[type='text']").removeAttr("disabled");
            $(".rowHeader input[type='button']").removeClass("IsEditModeQuery");

            if ($('#ReportNo').val() != undefined && $('#ReportNo').val() != '') {
                $("#Edit, #Delete, #Picture").addClass("IsEditMode");
            }

            $('#btnNew').removeClass("IsEditModeQuery");
            $('#btnQuery').unbind('click').removeClass("IsEditModeQuery");
            $('#Save, #Undo, #New').unbind('click').removeClass("IsEditMode");
            $(".DetailTable input, .DetailTable select").attr("disabled", "disabled");
            $(".DetailTable img").removeClass('display-None');
            QueryButtonBind();

            $('#btnQuery').on('click', function () {
                if (EditType != "New") {
                    if ($('#Request_BrandID').val() == '' || $('#Request_SeasonID').val() == '' || $('#Request_StyleID').val() == '' || $('#Request_Article').val() == '') {
                        msg.WithError("Style, Brand, Season and Article cannot be empty");
                        return false;
                    }
                }
            });
        }
    }


        function Clear() {
            if (EditType == "New") {
                $(".DetailTable input[type='text'], .DetailTable select").val('');
            }
        }

        function EditModeButtionBind() {
            $('#Edit').on('click', function () {
                if ($('#ReportNo').val() != null && $('#ReportNo').val() != "") {
                    EditMode = true;
                    EditType = "";
                    $("#Save").attr("name", "Action:Edit");
                    IsEditModeChange();
                }
            });

            $('#btnNew').on('click', function () {
                EditMode = true;
                EditType = "New";
                $("#Save").attr("name", "Action:New");
                IsEditModeChange();
            });

            $('#Save').on('click', function (e) {
                var detail = [];
                var ErrMsg = "";

                if ($('#Detail_BrandID').val() == '' || $('#Detail_SeasonID').val() == '' || $('#Detail_StyleID').val() == '' || $('#Detail_Article').val() == ''
                    || $('#Detail_BrandID').val() == undefined || $('#Detail_SeasonID').val() == undefined || $('#Detail_StyleID').val() == undefined || $('#Detail_Article').val() == undefined) {
                    ErrMsg += "Style, Brand, Season and Article cannot be empty<br/>";
                }

                //檢查TestDate, {PullForceUnit}, Sec, Fabric Ref#, Accessory Ref# 不可為空
                if ($('#Detail_TestDate').val() == '' || $('#Detail_PullForceUnit').val() == '' || $('#Detail_Time').val() == ''
                    || $('#Detail_FabricRefno').val() == '' || $('#Detail_AccRefno').val() == ''
                    || $('#Detail_TestDate').val() == undefined || $('#Detail_PullForceUnit').val() == undefined || $('#Detail_Time').val() == undefined
                    || $('#Detail_FabricRefno').val() == undefined || $('#Detail_AccRefno').val() == undefined) {
                    ErrMsg += "TestDate, Newton, Sec, Fabric Ref# and Accessory Ref# cannot be empty<br/>";
                }

                if (ErrMsg != "") {
                    e.preventDefault();
                    msg.WithError(ErrMsg);
                    return;
                }

            });

            $('#Undo').on('click', function () {
                EditMode = false;
                IsEditModeChange();
                if (EditType != "New") {
                    $('#btnQuery').click();
                }
                else {
                    if ($('#Request_BrandID').val() != '' || $('#Request_SeasonID').val() != '' || $('#Request_StyleID').val() != '' || $('#Request_Article').val() != '') {
                        $('#btnQuery').click();
                    }
                }

                EditType = "";
            });

            $('#Delete').on('click', function () {
                if ($('#Detail_ReportNo').val() != null && $('#Detail_ReportNo').val() != "") {
                    msg.WithConfirm('Do you want to delete the data ?',
                        function () {
                        }, null);
                }
            });

            $('#Picture').on('click', function () {
                if ($('#Detail_ReportNo').val() != null && $('#Detail_ReportNo').val() != "") {
                    var para = "?EditMode=" + EditMode + "&Table=PullingTest&BrforeColumn=TestBeforePicture&AfterColumn=TestAfterPicture&PKey_1=ReportNo&PKey_1_Val=" + $('#Detail_ReportNo').val();
                    window.open('@Url.Action("PictureList","PublicWondow",new{Area=""})' + para, 'Article', config = 'toolbar=no,status=no,location=no,width=400,height=650');
                }
            });
        }

        function QueryButtonBind() {
            $('#btnBrandSelectItem').on('click', function () {
                 window.open('@Url.Action("BrandList","PublicWondow",new{Area=""})','Brand',config='toolbar=no,status=no,location=no,width=400,height=650');
            });

            $('#btnSeasonSelectItem').on('click', function () {
                var para = "?BrandID=" + $('#Request_BrandID').val();
                window.open('@Url.Action("SeasonList","PublicWondow",new{Area=""})' + para,'Season',config='toolbar=no,status=no,location=no,width=400,height=650');
            });

            $('#btnStyleSelectItem').on('click', function () {
                var para = "?BrandID=" + $('#Request_BrandID').val() + "&SeasonID=" + $('#Request_SeasonID').val();
                window.open('@Url.Action("StyleList","PublicWondow",new{Area=""})' + para,'Style',config='toolbar=no,status=no,location=no,width=400,height=650');
            });

            $('#btnArticleSelectItem').on('click', function () {
                if ($('#Request_BrandID').val() == '' || $('#Request_SeasonID').val() == '' || $('#Request_StyleID').val() == '') {
                    msg.WithError('Please input style, brand and season before choose article.');
                    return;
                }

                var para = "?OrderID=&StyleUkey=0&BrandID=" + $('#Request_BrandID').val() + "&SeasonID=" + $('#Request_SeasonID').val() + "&StyleID=" + $('#Request_StyleID').val();
                window.open('@Url.Action("ArticleList","PublicWondow",new{Area=""})' + para,'Article',config='toolbar=no,status=no,location=no,width=400,height=650');
            });

            blurEvent('Request_');
        }

        function blurEvent(name) {
            $("#" + name + "BrandID").blur(function () {
                if ($(this).val() == '') {
                    return;
                }

                $.ajax({
                    url: "@Url.Action("BrandList","PublicWondow",new{Area=""})",
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ BrandID: $(this).val(), ReturnType: "JSON" }),
                    async: true,
                    success: function (data) {
                        if (data.length == 0) {
                            $("#" + name +"BrandID").val('');
                            msg.WithError('Brand Not Found');
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.responseText);
                    }
                });
            });

            $("#" + name + "SeasonID").blur(function () {
                if ($(this).val() == '') {
                    return;
                }

                var result = checkValue('season', name);
                if (result == 0) {
                    return;
                }

                var BrandID = $('#' + name +'BrandID').val();
                $.ajax({
                    url: "@Url.Action("SeasonList","PublicWondow",new{Area=""})",
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ BrandID: BrandID, SeasonID: $(this).val(), ReturnType: "JSON" }),
                    async: true,
                    success: function (data) {
                        if (data.length == 0) {
                            $("#" + name+"SeasonID").val('');
                            msg.WithError('Season Not Found');
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.responseText);
                    }
                });
            });

            $("#" + name + "StyleID").blur(function () {
                if ($(this).val() == '') {
                    return;
                }

                var result = checkValue('style', name);
                if (result == 0) {
                    return;
                }

                var BrandID = $('#' + name +'BrandID').val();
                var SeasonID = $('#' + name +'SeasonID').val();
                $.ajax({
                    url: "@Url.Action("StyleList","PublicWondow",new{Area=""})",
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ BrandID: BrandID, SeasonID: SeasonID, StyleID: $(this).val(), ReturnType: "JSON" }),
                    async: true,
                    success: function (data) {
                        if (data.length == 0) {
                            $("#" + name+"StyleID").val('');
                            msg.WithError('Style Not Found');
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.responseText);
                    }
                });
            });

            $('#' + name + 'Article').blur(function () {
                if ($(this).val() == '') {
                    return;
                }

                var result = checkValue('article', name);
                if (result == 0) {
                    return;
                }

                var BrandID = $('#' + name +'BrandID').val();
                var SeasonID = $('#' + name +'SeasonID').val();
                var StyleID = $('#' + name +'StyleID').val();
                $.ajax({
                    url: "@Url.Action("ArticleList","PublicWondow",new{Area=""})",
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ BrandID: BrandID, StyleUkey : 0, SeasonID: SeasonID, StyleID: StyleID, Article: $(this).val(), ReturnType: "JSON" }),
                    async: true,
                    success: function (data) {
                        if (data.length == 0) {
                            $("#" + name+"Article").val('');
                            msg.WithError('Article Not Found');
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.responseText);
                    }
                });
            });


            $("#T1Subcon").unbind('blur').blur(function () {
                if ($(this).val() == '') {
                    return;
                }

                $.ajax({
                    url: "@Url.Action("LocalSuppList","PublicWondow",new{Area=""})",
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ Name: $(this).val(), ReturnType: "JSON" }),
                    async: true,
                    success: function (data) {
                        if (data.length == 0) {
                            $("#T1Subcon").val('');
                            msg.WithError('T1/SubconName');
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.responseText);
                    }
                });
            });

            $("#T2Supplier").unbind('blur').blur(function () {
                if ($(this).val() == '') {
                    return;
                }

                $.ajax({
                    url: "@Url.Action("TPESuppList","PublicWondow",new{Area=""})",
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ Name: $(this).val(), ReturnType: "JSON" }),
                    async: true,
                    success: function (data) {
                        if (data.length == 0) {
                            $("T2Supplier").val('');
                            msg.WithError('T2/SupplierName');
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.responseText);
                    }
                });
            });

            $("#Technician").unbind('blur').blur(function () {
                if ($(this).val() == '') {
                    return;
                }

                $.ajax({
                    url: "@Url.Action("TechnicianList", "PublicWondow",new{Area=""})",
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ ID: $(this).val(), ReturnType: "JSON" }),
                    async: true,
                    success: function (data) {
                        if (data.length == 0) {
                            $("Technicain").val('');
                            msg.WithError('Technician');
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.responseText);
                    }
                });
            });


        }

        function DetailButtonBind() {
            $('#btnDetailBrandSelectItem').on('click', function () {
                window.open('@Url.Action("BrandList","PublicWondow",new{Area=""})','BrandID',config='toolbar=no,status=no,location=no,width=400,height=650');
            });

            $('#btnDetailSeasonSelectItem').on('click', function () {
                if (checkValue('season','') == 0) {
                    return;
                }

                var para = "?BrandID=" + $('#BrandID').val();
                window.open('@Url.Action("SeasonList","PublicWondow",new{Area=""})' + para,'SeasonID',config='toolbar=no,status=no,location=no,width=400,height=650');
            });

            $('#btnDetailStyleSelectItem').on('click', function () {
                if (checkValue('style', '') == 0) {
                    return;
                }

                var para = "?BrandID=" + $('#BrandID').val() + "&SeasonID=" + $('#SeasonID').val();
                window.open('@Url.Action("StyleList","PublicWondow",new{Area=""})' + para,'StyleID',config='toolbar=no,status=no,location=no,width=400,height=650');
            });

            $('#btnDetailArticleSelectItem').on('click', function () {
                var para = '';
                var result = checkValue('article', '');
                if (result == 0) {
                    return;
                }
                else if (result == 1) {
                    para = "?OrderID=" + $('#POID').val() + "&StyleUkey=0";
                }
                else if (result == 2) {
                    para = "?OrderID=&StyleUkey=0&BrandID=" + $('#BrandID').val() + "&SeasonID=" + $('#SeasonID').val() + "&StyleID=" + $('#StyleID').val();
                }
                window.open('@Url.Action("ArticleList","PublicWondow",new{Area=""})' + para,'Article',config='toolbar=no,status=no,location=no,width=400,height=650');
            });

            $('#btnDetailSubconNameSelectItem').on('click', function () {
                window.open('@Url.Action("LocalSuppList","PublicWondow",new{Area=""})','T1/SubconName',config='toolbar=no,status=no,location=no,width=800,height=650');
            });

            $('#btnDetailSupplierNameSelectItem').on('click', function () {
                window.open('@Url.Action("TPESuppList","PublicWondow",new{Area=""})','T2/SupplierName',config='toolbar=no,status=no,location=no,width=800,height=650');
            });


            $('#btnDetailTechnicianSelectItem').on('click', function () {
                var para = "?CallFunction=MockupOven";
                window.open('@Url.Action("TechnicianList", "PublicWondow",new{Area=""})' + para,'Technician',config='toolbar=no,status=no,location=no,width=800,height=650');
            });

            $('#btnDetailMRSelectItem').on('click', function () {
                window.open('@Url.Action("Pass1List", "PublicWondow",new{Area=""})','MR',config='toolbar=no,status=no,location=no,width=800,height=650');
            });            


            blurEvent("");
        }

        function checkValue(type,name) {
            switch (type) {
                case 'season': //查詢明細共用
                    if ($('#'+name+'BrandID').val() == '') {
                        msg.WithError('Please input brand before choose season.');
                        return 0;
                    }
                    break;
                case 'style': //查詢明細共用
                    if ($('#' + name + 'BrandID').val() == '' || $('#' + name +'SeasonID').val() == '') {
                        msg.WithError('Please input brand, season before choose style.');
                        return 0;
                    }
                    break;
                case 'article': //查詢明細共用
                    if (name == "Detail_" && $('#Detail_POID').val() != '') {
                        return 1;
                    }
                    else if ($('#' + name + 'BrandID').val() != '' && $('#' + name + 'SeasonID').val() != '' && $('#' + name + 'StyleID').val() != '') {
                        return 2;
                    }
                    else {
                        msg.WithError('Please input sp# or style, brand and season before choose article.');
                        return 0;
                    }
                    break;
            }

        }

        function GetBrandList(data) {
            if (EditMode) {
                $('#BrandID').val(data);
            }
            else {
                $('#Request_BrandID').val(data);
            }
        }

        function GetSeasonList(data) {
            if (EditMode) {
                $('#SeasonID').val(data);
            }
            else {
                $('#Request_SeasonID').val(data);
            }
        }

        function GetStyleList(data) {
            if (EditMode) {
                $('#StyleID').val(data);
            }
            else {
                $('#Request_StyleID').val(data);
            }
        }

        function GetArticleList(data) {
            if (EditMode) {
                $('#Article').val(data);
            }
            else {
                $('#Request_Article').val(data);
            }
    }

        function GetLocalSupp(data) {
            $('#T1Subcon').val(data.ID);
            $('#T1SubconAbb').val(data.Name);
    }

        function GetTPESupp(data) {
            $('#T2Supplier').val(data.ID);
            $('#T2SupplierAbb').val(data.Name);
    }

        function GetTechnician(data) {
            $('#Technicain').val(data.ID);
            $('#T2SupplierAbb').val(data.Name);
        }

        function GetPass1(data) {
            $('#MR').val(data.ID);
            $('#MRName').val(data.Name + " Ext. " + data.ExtNo);
            
        }





</script>
