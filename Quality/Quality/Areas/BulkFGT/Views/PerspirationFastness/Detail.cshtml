@using DatabaseObject.ResultModel;

@{
    ViewBag.Title = "Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/ThirdParty/plugins/Tabs/nicepage.css" rel="stylesheet" />
<script src="~/ThirdParty/plugins/Tabs/nicepage.js"></script>

<link href="~/ThirdParty/plugins/DataTables/datatables.min.css" rel="stylesheet" />
<link href="~/ThirdParty/SciCustom/css/TableStyle.css" rel="stylesheet" />
<script src="~/ThirdParty/plugins/DataTables/datatables.min.js"></script>
<link href="~/ThirdParty/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" />

@model PerspirationFastness_Detail_Result

<style type="text/css">
    #tab-Change {
        width: 92vw;
    }

        #tab-Change > ul {
            display: block;
            margin: 0;
            list-style: none;
        }

    .tab-title {
        list-style: none;
    }

    #tab-Change > ul > li {
        display: inline-block;
        vertical-align: top;
        margin: 0 -1px -1px 0;
        border: 1px solid #BCBCBC;
        height: 4vh;
        line-height: 25px;
        background: #cdcdcd;
        padding: 0 15px;
        list-style: none;
        box-sizing: border-box;
    }

        #tab-Change > ul > li a {
            color: #000;
            text-decoration: none;
        }

        #tab-Change > ul > li.active {
            border-bottom: 1px solid #fff;
            background: #fff;
        }

    #tab-Change > .tab-inner {
        clear: both;
        color: #000;
    }

    #ButtonMode {
        width: 92vw;
    }

    .DataTable {
        width: 92vw;
        font-size: 1rem;
        font-weight: bold;
        border: solid 1px black;
        background-color: white;
    }

        .DataTable > tbody > tr:nth-of-type(odd) {
            background-color: #ffffff;
        }

        .DataTable > tbody > tr:nth-of-type(even) {
            background-color: #F0F2F2;
        }

        .DataTable > tbody > tr > td {
            border: solid 1px gray;
            padding: 1em;
            text-align: left;
            vertical-align: middle;
        }

    .White {
        color: white !important;
    }

    .Black {
        color: black !important;
    }

    .IsEditMode {
        color: white !important;
        cursor: pointer;
    }
    .Alkaline {
        background-color: #f8d2b6;
    }
    .Acid{
        background-color: #f2ecae;
    }

    .IsEditModeQuery {
        color: gray !important;
        cursor: no-drop;
    }

    .bigSize {
        width: 3em;
        height: 2em;
    }

    .ReportAction {
        width: 29vw;
        height: 29vh;
        position: absolute;
        left: 30vw;
        top: 19vh;
        z-index: 1042;
        background-color: #c8eac8;
        border: solid 1px black;
        font-size: 1.4em;
        font-weight: bold;
    }

        .ReportAction > table > tbody > tr > td {
            padding: 0.5em;
        }

            .ReportAction > table > tbody > tr > td > input[type=button] {
                cursor: pointer;
            }
    .width6vw {
        width: 6vw;
    }

    .width8vw {
        width: 8vw;
    }

    .width9vw {
        width: 9vw;
    }
</style>


<div class="main-content">
    <header class="page-header">
        <h3>
            <i class="icon-users"></i><span>Perspiration Fastness Test</span>
        </h3>
        <div class="breadcrumb">
            <div>Home</div>
            <div>Perspiration Fastness Test</div>
            <div class="current">Detail</div>
        </div>
    </header>

    <div class="main-area">
        <div class="content-scroll">
            <div class="inner-scroll">
                @using (Html.BeginForm("DetailSave", ViewContext.RouteData.GetRequiredString("Controller"), FormMethod.Post, new { id = "DetailForm" }))
                {
                    <div style="margin-top: 1em;">
                        <table id="ButtonMode">
                            <tbody>
                                <tr>
                                    <td>
                                        <h4 id="Exit" style=" margin-right: 1em;width:5vw ">
                                            <a href="@Url.Action("IndexBack", "PerspirationFastness", new { POID = Model.Main.POID})">
                                                <img src="~/Image/Icon/Exit.png" width="30" />
                                                Exit
                                            </a>
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="Edit" style=" margin-right: 1em;; width: 5vw">
                                            <img src="~/Image/Icon/Edit.png" width="30" />
                                            Edit
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="Save" style=" margin-right: 1em; width: 6vw">
                                            <img src="~/Image/Icon/Save.png" width="30" />
                                            Save
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="Encode" style=" margin-right: 1em; width: 8vw;">
                                            <img src="~/Image/Icon/Lock.png" width="30" />
                                            Encode
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="Amend" style=" margin-right: 1em; width: 8vw;">
                                            <img src="~/Image/Icon/Unlock.png" width="30" />
                                            Amend
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="Excel" style=" margin-right: 1em; width: 6vw;">
                                            <img src="~/Image/Icon/XLS.png" width="30" />
                                            Excel
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="PDF" style=" margin-right: 1em; width: 6vw;">
                                            <img src="~/Image/Icon/PDF.png" width="30" />
                                            PDF
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="SendMail" style=" margin-right: 1em; width: 7vw;">
                                            <img src="~/Image/Icon/SendMail.png" width="30" />
                                            Send to MR
                                        </h4>
                                    </td>
                                    <td>
                                        <h4 id="Picture" style=" margin-right: 1em; width: 7vw;">
                                            <img src="~/Image/Icon/Camera.png" width="30" />
                                            Picture
                                        </h4>
                                    </td>
                                    <td style="width: 20%;">
                                    </td>
                                    <td>
                                        <h4 id="New">
                                            <img src="~/Image/Icon/New.png" width="30" />
                                            New Item
                                        </h4>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div style="margin-top: 1em;">
                        <table class="DataTable">
                            <tbody>
                                <tr>
                                    <td style="width: 10vw;"><h5>Report No</h5></td>
                                    <td style="width: 20vw;">
                                        @Html.DisplayFor(o => o.Main.ReportNo, "", "")
                                        @Html.HiddenFor(o => o.Main.ReportNo)
                                        @Html.HiddenFor(o => o.Main.TestNo)
                                    </td>
                                    <td style="width: 10vw;"><h5>SP#</h5></td>
                                    <td style="width: 28vw;">
                                        @Html.DisplayFor(o => o.Main.POID, "", "")
                                        @Html.HiddenFor(o => o.Main.POID)
                                    </td>

                                    <td style="width: 10vw;"><h5>TestDate</h5></td>

                                    <td style="width: 15vw;">
                                        @Html.TextBoxFor(o => Model.Main.InspDate, "{0:yyyy/MM/dd}", new { @class = "date-picker" })
                                    </td>
                                </tr>
                                <tr>

                                    <td><h5>Article</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => Model.Main.Article, "", new { @style = "width: 12vw" })
                                        <input id="btnDetailArticleSelectItem" type="button" class="OnlyEdit site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                    </td>
                                    <td><h5>Inspector</h5></td>
                                    <td>
                                        @Html.TextBoxFor(o => Model.Main.Inspector, "", new { @style = "width: 7vw" })
                                        @Html.TextBoxFor(o => Model.Main.InspectorName, "", new { @readonly = "readonly", @style = "width: 8vw" })

                                        <input id="btnDetailInspectorSelectItem" type="button" class="OnlyEdit site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                    </td>
                                    @{
                                        string ResultColor = Model.Main.Result == "Pass" ? "blue" : "red";
                                    }
                                    <td><h5>Result</h5></td>
                                    <td class="@ResultColor">
                                        @Html.DisplayFor(o => o.Main.Result, "", "")
                                    </td>
                                </tr>
                                <tr>

                                    <td><h5>Metal Content</h5></td>
                                    <td>
                                        <select id="Main_MetalContent" name="Main.MetalContent" class="HeaderSelect">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.MetalContentList)
                                            {
                                                string selected = item.Text.Equals(Model.Main.MetalContent) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                </tr>
                                <tr>

                                    <td><h5>Testing Method</h5></td>
                                    <td colspan="5"></td>

                                </tr>
                                <tr>
                                    <td><h5>Temperature(˚C)</h5></td>
                                    <td>
                                        <select id="Main_Temperature" name="Main.Temperature" class="HeaderSelect">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.TemperatureList)
                                            {
                                                string selected = item.Text.Equals(Model.Main.Temperature) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td><h5>Time(hrs)</h5></td>
                                    <td>
                                        <select id="Main_Time" name="Main.Time" class="HeaderSelect">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.TimeList)
                                            {
                                                string selected = item.Text.Equals(Model.Main.Time) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                </tr>
                                <tr>

                                    <td><h5>Remark</h5></td>
                                    <td colspan="5">
                                        @Html.TextBoxFor(o => o.Main.Remark, "", new { @style = "width: 50vw" })
                                        @Html.HiddenFor(o => o.Main.TestBeforePicture)
                                        @Html.HiddenFor(o => o.Main.TestAfterPicture)
                                        @Html.HiddenFor(o => o.Main.Status)
                                        @Html.HiddenFor(o => o.Main.ID)
                                    </td>

                                </tr>

                            </tbody>
                        </table>
                    </div>

                    <div style="margin-top: 1em; width: 92vw; overflow:auto;">
                        <table class="DetailTable DataTable">
                            <thead>
                                <tr>

                                    <th><h4>Submit Date</h4></th>
                                    <th><h4>Group</h4></th>
                                    <th><h4>SEQ#</h4></th>
                                    <th><h4>Roll#</h4></th>
                                    <th><h4>Dyelot</h4></th>
                                    <th><h4>Refno</h4></th>
                                    <th><h4>SCI Refno</h4></th>
                                    <th><h4>Color</h4></th>
                                    <th><h4>Result</h4></th>

                                    <th><h4>Alkaline Color Change Scale</h4></th>
                                    <th><h4>Alkaline Result (Change)</h4></th>
                                    <th><h4>Alkaline Color Acetate Scale</h4></th>
                                    <th><h4>Alkaline Result (Acetate)</h4></th>
                                    <th><h4>Alkaline Color Cotton Scale</h4></th>
                                    <th><h4>Alkaline Result (Cotton)</h4></th>
                                    <th><h4>Alkaline Color Nylon Scale</h4></th>
                                    <th><h4>Alkaline Result (Nylon)</h4></th>
                                    <th><h4>Alkaline Color Polyester Scale</h4></th>
                                    <th><h4>Alkaline Result (Polyester)</h4></th>
                                    <th><h4>Alkaline Color Acrylic Scale</h4></th>
                                    <th><h4>Alkaline Result (Acrylic)</h4></th>
                                    <th><h4>Alkaline Color Wool Scale</h4></th>
                                    <th><h4>Alkaline Result (Wool)</h4></th>

                                    <th><h4>Acid Color Change Scale</h4></th>
                                    <th><h4>Acid Result (Change)</h4></th>
                                    <th><h4>Acid Color Acetate Scale</h4></th>
                                    <th><h4>Acid Result (Acetate)</h4></th>
                                    <th><h4>Acid Color Cotton Scale</h4></th>
                                    <th><h4>Acid Result (Cotton)</h4></th>
                                    <th><h4>Acid Color Nylon Scale</h4></th>
                                    <th><h4>Acid Result (Nylon)</h4></th>
                                    <th><h4>Acid Color Polyester Scale</h4></th>
                                    <th><h4>Acid Result (Polyester)</h4></th>
                                    <th><h4>Acid Color Acrylic Scale</h4></th>
                                    <th><h4>Acid Result (Acrylic)</h4></th>
                                    <th><h4>Acid Color Wool Scale</h4></th>
                                    <th><h4>Acid Result (Wool)</h4></th>

                                    <th><h4>Remark</h4></th>
                                    <th><h4>LastUpdate</h4></th>
                                    @*<th><h4>Temperature(˚C)</h4></th>
        <th><h4>Time(hrs)</h4></th>*@
                                    <th><h4></h4></th>
                                </tr>

                            </thead>
                            <tbody>
                                @for (int i = 0; i <= Model.Details.Count - 1; i++)
                                {
                                <tr idx='@i'>
                                    <td>
                                        <input id='Seq@{@i}' idx='@i' type='hidden'>
                                        @Html.TextBoxFor(o => Model.Details[i].SubmitDate, "{0:yyyy/MM/dd}", new { @class = "date-picker width9vw" })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(o => Model.Details[i].PerspirationFastnessGroup, "", new { @class = "width6vw", @maxlength = "2", @type = "number", @step = "1", @min = "0", @max = "99", @oninput = "value=PerspirationFastnessGroupCheck(value)" })
                                    </td>
                                    <td style="width:11vw;">
                                        <div style="width:10vw;">
                                            @Html.TextBoxFor(o => Model.Details[i].SEQ, "", new { @style = "width:6vw", @idv = (i.ToString()), @class = "InputDetailSEQSelectItem" })

                                            <input id="btnDetailSEQSelectItem" idv=@(i.ToString()) type="button" class="btnDetailSEQSelectItem OnlyEdit site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                        </div>

                                    </td>
                                    <td style="width:11vw;">
                                        <div style="width:10vw;">
                                            @Html.TextBoxFor(o => Model.Details[i].Roll, "", new { @style = "width:6vw", @idv = (i.ToString()), @class = "InputDetailRollSelectItem" })
                                            <input id="btnDetailRollSelectItem" idv=@(i.ToString()) type="button" class="btnDetailRollSelectItem OnlyEdit site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                        </div>
                                    </td>

                                    <td>
                                        @Html.TextBoxFor(o => Model.Details[i].Dyelot, "", new { @readonly = "readonly" })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(o => Model.Details[i].Refno, "", new { @readonly = "readonly" })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(o => Model.Details[i].SCIRefno, "", new { @readonly = "readonly" })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(o => Model.Details[i].ColorID, "", new { @readonly = "readonly" })
                                    </td>
                                    @{
                                        string detailResultColor = Model.Details[i].Result == "Pass" ? "blue width6vw" : "red width6vw";
                                    }
                                    <td>
                                        @Html.TextBoxFor(o => Model.Details[i].Result, "", new { @class = detailResultColor, @readonly = "readonly" })
                                    </td>

                                    @*ChangeScale*@
                                    <td class="Alkaline">
                                        <select id="Details_@{@i}__AlkalineChangeScale" name="Details[@{@i}].AlkalineChangeScale">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ChangeScaleList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AlkalineChangeScale) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td class="Alkaline">
                                        @{
                                            string styleColor = "red";
                                            if (Model.Details[i].AlkalineResultChange == "Pass")
                                            {
                                                styleColor = "blue";
                                            }
                                        }
                                        <select onchange='selectChange(this)' id="Details_@{@i}__AlkalineResultChange" name="Details[@i].AlkalineResultChange" class="@styleColor">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ResultChangeList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AlkalineResultChange) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>

                                    </td>

                                    @*Acetate*@
                                    <td class="Alkaline">
                                        <select id="Details_@{@i}__AlkalineAcetateScale" name="Details[@{@i}].AlkalineAcetateScale">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ChangeScaleList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AlkalineAcetateScale) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td class="Alkaline">
                                        @{
                                            styleColor = "red";
                                            if (Model.Details[i].AlkalineResultAcetate == "Pass")
                                            {
                                                styleColor = "blue";
                                            }
                                        }
                                        <select onchange='selectChange(this)' id="Details_@{@i}__AlkalineResultAcetate" name="Details[@i].AlkalineResultAcetate" class="@styleColor">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ResultChangeList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AlkalineResultAcetate) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>

                                    </td>
                                    @*Cotton*@
                                    <td class="Alkaline">
                                        <select id="Details_@{@i}__AlkalineCottonScale" name="Details[@{@i}].AlkalineCottonScale">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ChangeScaleList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AlkalineCottonScale) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td class="Alkaline">
                                        @{
                                            styleColor = "red";
                                            if (Model.Details[i].AlkalineResultCotton == "Pass")
                                            {
                                                styleColor = "blue";
                                            }
                                        }
                                        <select onchange='selectChange(this)' id="Details_@{@i}__AlkalineResultCotton" name="Details[@i].AlkalineResultCotton" class="@styleColor">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ResultChangeList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AlkalineResultCotton) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>

                                    </td>
                                    @*Nylon*@
                                    <td class="Alkaline">
                                        <select id="Details_@{@i}__AlkalineNylonScale" name="Details[@{@i}].AlkalineNylonScale">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ChangeScaleList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AlkalineNylonScale) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td class="Alkaline">
                                        @{
                                            styleColor = "red";
                                            if (Model.Details[i].AlkalineResultNylon == "Pass")
                                            {
                                                styleColor = "blue";
                                            }
                                        }
                                        <select onchange='selectChange(this)' id="Details_@{@i}__AlkalineResultNylon" name="Details[@i].AlkalineResultNylon" class="@styleColor">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ResultChangeList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AlkalineResultNylon) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>

                                    </td>
                                    @*Polyester*@
                                    <td class="Alkaline">
                                        <select id="Details_@{@i}__AlkalinePolyesterScale" name="Details[@{@i}].AlkalinePolyesterScale">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ChangeScaleList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AlkalinePolyesterScale) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td class="Alkaline">
                                        @{
                                            styleColor = "red";
                                            if (Model.Details[i].AlkalineResultPolyester == "Pass")
                                            {
                                                styleColor = "blue";
                                            }
                                        }
                                        <select onchange='selectChange(this)' id="Details_@{@i}__AlkalineResultPolyester" name="Details[@i].AlkalineResultPolyester" class="@styleColor">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ResultChangeList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AlkalineResultPolyester) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>

                                    </td>
                                    @*Acrylic*@
                                    <td class="Alkaline">
                                        <select id="Details_@{@i}__AlkalineAcrylicScale" name="Details[@{@i}].AlkalineAcrylicScale">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ChangeScaleList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AlkalineAcrylicScale) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td class="Alkaline">
                                        @{
                                            styleColor = "red";
                                            if (Model.Details[i].AlkalineResultAcrylic == "Pass")
                                            {
                                                styleColor = "blue";
                                            }
                                        }
                                        <select onchange='selectChange(this)' id="Details_@{@i}__AlkalineResultAcrylic" name="Details[@i].AlkalineResultAcrylic" class="@styleColor">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ResultChangeList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AlkalineResultAcrylic) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>

                                    </td>
                                    @*Wool*@
                                    <td class="Alkaline">
                                        <select id="Details_@{@i}__AlkalineWoolScale" name="Details[@{@i}].AlkalineWoolScale">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ChangeScaleList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AlkalineWoolScale) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td class="Alkaline">
                                        @{
                                            styleColor = "red";
                                            if (Model.Details[i].AlkalineResultWool == "Pass")
                                            {
                                                styleColor = "blue";
                                            }
                                        }
                                        <select onchange='selectChange(this)' id="Details_@{@i}__AlkalineResultWool" name="Details[@i].AlkalineResultWool" class="@styleColor">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ResultChangeList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AlkalineResultWool) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>

                                    </td>

                                    @*ChangeScale*@
                                    <td class="Acid">
                                        <select id="Details_@{@i}__AcidChangeScale" name="Details[@{@i}].AcidChangeScale">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ChangeScaleList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AcidChangeScale) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td class="Acid">
                                        @{
                                            styleColor = "red";
                                            if (Model.Details[i].AcidResultChange == "Pass")
                                            {
                                                styleColor = "blue";
                                            }
                                        }
                                        <select onchange='selectChange(this)' id="Details_@{@i}__AcidResultChange" name="Details[@i].AcidResultChange" class="@styleColor">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ResultChangeList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AcidResultChange) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>

                                    </td>

                                    @*Acetate*@
                                    <td class="Acid">
                                        <select id="Details_@{@i}__AcidAcetateScale" name="Details[@{@i}].AcidAcetateScale">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ChangeScaleList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AcidAcetateScale) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td class="Acid">
                                        @{
                                            styleColor = "red";
                                            if (Model.Details[i].AcidResultAcetate == "Pass")
                                            {
                                                styleColor = "blue";
                                            }
                                        }
                                        <select onchange='selectChange(this)' id="Details_@{@i}__AcidResultAcetate" name="Details[@i].AcidResultAcetate" class="@styleColor">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ResultChangeList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AcidResultAcetate) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>

                                    </td>
                                    @*Cotton*@
                                    <td class="Acid">
                                        <select id="Details_@{@i}__AcidCottonScale" name="Details[@{@i}].AcidCottonScale">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ChangeScaleList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AcidCottonScale) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td class="Acid">
                                        @{
                                            styleColor = "red";
                                            if (Model.Details[i].AcidResultCotton == "Pass")
                                            {
                                                styleColor = "blue";
                                            }
                                        }
                                        <select onchange='selectChange(this)' id="Details_@{@i}__AcidResultCotton" name="Details[@i].AcidResultCotton" class="@styleColor">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ResultChangeList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AcidResultCotton) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>

                                    </td>
                                    @*Nylon*@
                                    <td class="Acid">
                                        <select id="Details_@{@i}__AcidNylonScale" name="Details[@{@i}].AcidNylonScale">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ChangeScaleList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AcidNylonScale) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td class="Acid">
                                        @{
                                            styleColor = "red";
                                            if (Model.Details[i].AcidResultNylon == "Pass")
                                            {
                                                styleColor = "blue";
                                            }
                                        }
                                        <select onchange='selectChange(this)' id="Details_@{@i}__AcidResultNylon" name="Details[@i].AcidResultNylon" class="@styleColor">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ResultChangeList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AcidResultNylon) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>

                                    </td>
                                    @*Polyester*@
                                    <td class="Acid">
                                        <select id="Details_@{@i}__AcidPolyesterScale" name="Details[@{@i}].AcidPolyesterScale">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ChangeScaleList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AcidPolyesterScale) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td class="Acid">
                                        @{
                                            styleColor = "red";
                                            if (Model.Details[i].AcidResultPolyester == "Pass")
                                            {
                                                styleColor = "blue";
                                            }
                                        }
                                        <select onchange='selectChange(this)' id="Details_@{@i}__AcidResultPolyester" name="Details[@i].AcidResultPolyester" class="@styleColor">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ResultChangeList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AcidResultPolyester) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>

                                    </td>
                                    @*Acrylic*@
                                    <td class="Acid">
                                        <select id="Details_@{@i}__AcidAcrylicScale" name="Details[@{@i}].AcidAcrylicScale">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ChangeScaleList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AcidAcrylicScale) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td class="Acid">
                                        @{
                                            styleColor = "red";
                                            if (Model.Details[i].AcidResultAcrylic == "Pass")
                                            {
                                                styleColor = "blue";
                                            }
                                        }
                                        <select onchange='selectChange(this)' id="Details_@{@i}__AcidResultAcrylic" name="Details[@i].AcidResultAcrylic" class="@styleColor">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ResultChangeList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AcidResultAcrylic) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>

                                    </td>
                                    @*Wool*@
                                    <td class="Acid">
                                        <select id="Details_@{@i}__AcidWoolScale" name="Details[@{@i}].AcidWoolScale">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ChangeScaleList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AcidWoolScale) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td class="Acid">
                                        @{
                                            styleColor = "red";
                                            if (Model.Details[i].AcidResultWool == "Pass")
                                            {
                                                styleColor = "blue";
                                            }
                                        }
                                        <select onchange='selectChange(this)' id="Details_@{@i}__AcidResultWool" name="Details[@i].AcidResultWool" class="@styleColor">
                                            @foreach (var item in (List<SelectListItem>)ViewBag.ResultChangeList)
                                            {
                                                string selected = item.Text.Equals(Model.Details[i].AcidResultWool) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>

                                    </td>


                                    <td>
                                        @Html.TextBoxFor(o => Model.Details[i].Remark, "", "")
                                    </td>
                                    <td>
                                        @Html.DisplayFor(o => Model.Details[i].LastUpdate, "", "")
                                    </td>
                                    @*<td>
            <select id="Details_@{@i}__Temperature" name="Details[@{@i}].Temperature">
                @foreach (var item in (List<SelectListItem>)ViewBag.TemperatureList)
                {
                    string selected = item.Text.Equals(Model.Details[i].Temperature) ? "selected" : "";
                    <option value="@item.Value" @selected>@item.Text</option>
                }
            </select>
        </td>
                                    *@
                                    @*<td>
            <select id="Details_@{@i}__Time" name="Details[@{@i}].Time">
                @foreach (var item in (List<SelectListItem>)ViewBag.TimeList)
                {
                    string selected = item.Text.Equals(Model.Details[i].Time) ? "selected" : "";
                    <option value="@item.Value" @selected>@item.Text</option>
                }
            </select>
        </td>
                                    *@
                                    <td>
                                        <div style="width:5vw;">
                                            <img class="detailDelete" src="~/Image/Icon/Delete.png" width="30" />
                                        </div>

                                    </td>

                                </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var msg;

    var EditMode;
    $(function () {
        msg = new MessagerAlert();
        EditMode = ('@ViewBag.EditMode' == 'True');
        @Html.Raw(Model.ErrorMessage)
        IsEditModeChange();
    });

    function IsEditModeChange() {
        EditModeButtionBind();

        if (EditMode) {
            $("#Edit, #Encode, #Amend, #Excel, #PDF ,#SendMail").removeClass("IsEditMode");
            $('#Save, #New').addClass("IsEditMode");
            $(".DataTable input[type='text'], .DataTable input[type='number'], .DetailTable select, .HeaderSelect").removeAttr("disabled");
            $('#Encode, #Amend, #Excel, #PDF ,#SendMail').unbind('click');
            $(".DetailTable img").removeClass('display-None');
            DetailButtonBind();
            DetailDetailButtonBind();

        }
        else {
            $(".DetailTable img").addClass('display-None');
            $('#Save').unbind('click').removeClass("IsEditMode");
            $(".DataTable input[type='text'], .DataTable input[type='number'], .DetailTable select, .HeaderSelect").attr("disabled", "disabled");
            $('#Excel, #PDF ,#SendMail').addClass("IsEditMode");
            if ($('#Main_Status').val() == "New") {
                $('#Edit, #Encode').addClass("IsEditMode");
                $('#Amend').unbind('click');
            }
            else
            {
                $('#Edit, #Encode').unbind('click');
            }

            if ($('#Main_Status').val() == "Confirmed") {
                $('#Amend').addClass("IsEditMode");
            }
        }

        $('#Picture').addClass("IsEditMode");
    }

    function DetailButtonBind() {
        $('#btnDetailArticleSelectItem').on('click', function () {
                var para = "?OrderID=" + $('#Main_POID').val() + "&StyleUkey=0";
                 window.open('@Url.Action("PoidArticleList", "PublicWondow",new{Area=""})' + para,'Article',config='toolbar=no,status=no,location=no,width=400,height=650');
            });

        $('#btnDetailInspectorSelectItem').on('click', function () {
          window.open('@Url.Action("Pass1List","PublicWondow",new{Area=""})','Inspector',config='toolbar=no,status=no,location=no,width=1000,height=650');
        });

        $('#Main_Article').blur(function () {
            var OrderID = $('#Main_POID').val();
            $.ajax({
                url: "@Url.Action("PoidArticleList", "PublicWondow",new { Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ OrderID: OrderID, StyleUkey: 0, Article: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#Main_Article").val('');
                        msg.WithError('Article Not Found');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $('#Main_Inspector').blur(function () {
            $.ajax({
                url: "@Url.Action("Pass1List", "PublicWondow",new { Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#Main_Inspector").val('');
                        $("#Main_InspectorName").val('');
                        msg.WithError('Inspector Not Found');
                    }
                    else
                    {
                        $("#Main_InspectorName").val(data[0].Name);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });
    }

    function DetailDetailButtonBind() {

        $('.btnDetailSEQSelectItem').unbind('click').on('click', function () {
            var TargetID = $(this).attr("idv");
            var para = "?POID=" + $('#Main_POID').val() + "&FabricType=F&TargetID=" + TargetID;
            window.open('@Url.Action("Po_Supp_DetailList", "PublicWondow",new{Area=""})' + para, '', config = 'toolbar=no,status=no,location=no,width=1000,height=650');
        });

        $('.btnDetailRollSelectItem').unbind('click').on('click', function () {
            var TargetID = $(this).attr("idv");
            if ($("#Details_" + TargetID + "__SEQ").val() == '' || $("#Details_" + TargetID + "__SEQ").val() == undefined) {
                msg.WithError('Please input SEQ# before choose Roll#.');
                return;
            }

            var seq = $("#Details_" + TargetID + "__SEQ").val().split("-");
            var para = "?Title=Roll&POID=" + $('#Main_POID').val() + "&Seq1=" + seq[0] + "&Seq2=" + seq[1] + "&TargetID=" + TargetID;
            window.open('@Url.Action("FtyInventoryList", "PublicWondow",new{Area=""})' + para, '', config = 'toolbar=no,status=no,location=no,width=1000,height=650');
        });

        $('.InputDetailSEQSelectItem').unbind('blur').blur(function () {
            var TargetID = $(this).attr("idv");
            var POID = $('#Main_POID').val();
            $.ajax({
                url: "@Url.Action("Po_Supp_DetailList", "PublicWondow",new { Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ POID: POID, FabricType: 'F', Seq: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {

                    var val = $("#Details_" + TargetID + "__SEQ").val();

                    if (data.length == 0) {

                        $("#Details_" + TargetID + "__SEQ").val('');
                        $("#Details_" + TargetID + "__Refno").val('');
                        $("#Details_" + TargetID + "__SCIRefno").val('');
                        $("#Details_" + TargetID + "__ColorID").val('');
                        msg.WithError('SEQ# Not Found');
                    }
                    else {
                        if (val == "")
                        {
                            $("#Details_" + TargetID + "__Refno").val('');
                            $("#Details_" + TargetID + "__SCIRefno").val('');
                            $("#Details_" + TargetID + "__ColorID").val('');
                        }
                        else
                        {
                            $("#Details_" + TargetID + "__Refno").val(data[0].Refno);
                            $("#Details_" + TargetID + "__SCIRefno").val(data[0].SCIRefno);
                            $("#Details_" + TargetID + "__ColorID").val(data[0].ColorID);
                        }
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $('.InputDetailRollSelectItem').unbind('blur').blur(function () {

            var TargetID = $(this).attr("idv");

            if ($(this).val() == "") {
                $("#Details_" + TargetID + "__Dyelot").val('');
                return;
            }

            if ($("#Details_" + TargetID + "__SEQ").val() == '' || $("#Details_" + TargetID + "__SEQ").val() == undefined) {
                msg.WithError('Please input SEQ# before choose Roll#.');
                return;
            }

            var seq = $("#Details_" + TargetID + "__SEQ").val().split("-");
            var POID = $('#Main_POID').val();
            var SEQ1 = seq[0];
            var SEQ2 = seq[1];

            $.ajax({
                url: "@Url.Action("FtyInventoryList", "PublicWondow",new { Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ POID: POID, Seq1: SEQ1, Seq2: SEQ2, Roll: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#Details_" + TargetID + "__Roll").val('');
                        $("#Details_" + TargetID + "__Dyelot").val('');
                        msg.WithError('Roll# Not Found');
                    }
                    else {
                        if (data[0].Roll == "") {
                            $("#Details_" + TargetID + "__Roll").val('');
                            $("#Details_" + TargetID + "__Dyelot").val('');
                        }
                        else {
                            $("#Details_" + TargetID + "__Roll").val(data[0].Roll);
                            $("#Details_" + TargetID + "__Dyelot").val(data[0].Dyelot);
                        }
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $('.detailDelete').unbind('click').on('click', function () {
            var t = $(this);

            msg.WithConfirm('Do you want to delete the data ?',
                function () {
                    t.parents().parents('tr').remove();
                    msg.WithSuccess("Delete Success");
                }, null);
        });
    }

    function EditModeButtionBind() {
        $('#Edit').on('click', function () {
            if ($('#Main_POID').val() == "") {
                return;
            }

            if ($('#Main_POID').val() != "") {
                EditMode = true;
                IsEditModeChange();
            }
        });

        $('#Save').on('click', function () {

            if ($('#Main_Article').val() == "") {
                msg.WithWarning("Article cannot be empty.");
                return false;
            }


            if ($('#Main_Inspector').val() == "") {
                msg.WithWarning("Inspector cannot be empty.");
                return false;
            }


            if ($('#Main_InspDate').val() == "") {
                msg.WithWarning("Test Date cannot be empty.");
                return false;
            }

            var detailMsg = "";
            $('.DetailTable > tbody > tr').each(function (index, data) {
                var idx = $(this).closest('tr').attr('idx');
                if ($("#Details_" + idx + "__SEQ").val() == "") {
                    detailMsg += "SEQ cannot be empty.";
                    return false;
                }

                if ($("#Details_" + idx + "__Roll").val() == "") {
                    detailMsg += "Roll cannot be empty.";
                    return false;
                }

                if ($("#Details_" + idx + "__Dyelot").val() == "") {
                    detailMsg += "Dyelot cannot be empty.";
                    return false;
                }
            });

            if (detailMsg != '') {
                msg.WithWarning(detailMsg);
                return false;
            }

            $('.DetailTable > tbody > tr').each(function (index, data) {
                var idx = $(this).closest('tr').attr('idx');
                if (idx != index) {
                    $.each($(this).find("input[id^='Details']"), function () {
                        var tableName = $(this).attr('name').substr(0, $(this).attr('name').indexOf("["));
                        var rollName = $(this).attr('name').substr($(this).attr('name').indexOf("]") + 2, $(this).attr('name').length - $(this).attr('name').indexOf("]"));
                        $(this).attr("id", tableName + "_" + index.toString() + "__" + rollName);
                        $(this).attr("name", tableName + "[" + index.toString() + "]." + rollName);
                    });

                    $.each($(this).find("select[id^='Details']"), function () {
                        var tableName = $(this).attr('name').substr(0, $(this).attr('name').indexOf("["));
                        var rollName = $(this).attr('name').substr($(this).attr('name').indexOf("]") + 2, $(this).attr('name').length - $(this).attr('name').indexOf("]"));
                        $(this).attr("id", tableName + "_" + index.toString() + "__" + rollName);
                        $(this).attr("name", tableName + "[" + index.toString() + "]." + rollName);
                    });
                }
            });

            document.getElementById("DetailForm").submit();
        });

        $('#Picture').on('click', function () {
            var para = "?Title=" + $('.page-header span').html() + "&EditMode=" + EditMode;
            para += "&" + "Table=PerspirationFastness";
            para += "&" + "TargetBeforeColumn=Main_TestBeforePicture";
            para += "&" + "TargetAfterColumn=Main_TestAfterPicture";
            para += "&" + "BeforeColumn=TestBeforePicture";
            para += "&" + "AfterColumn=TestAfterPicture";
            para += "&" + "PKey_1=ID";
            para += "&" + "PKey_1_Val=" + $('#Main_ID').val();
            window.open('@Url.Action("PictureList", "PublicWondow",new { Area=""})' + para, 'Picture List', config = 'toolbar=no,status=no,location=no,width=1024,height=750');
        });

        $('#New').unbind('click').on('click', function () {
            if ($('#Main_POID').val() == "") {
                return;
            }

            if (!EditMode) {
                return;
            }

            if ($('#Main_Status').val() != "New") {
                return;
            }

            AddDetailRow();
        });

        $('#Encode').unbind('click').on('click', function () {

            var detail = [];
            var ErrMsg = "";
            $('.DetailTable > tbody > tr').each(function (index, value) {

                var PerspirationFastnessGroup, SEQ, Result;
                var AlkalineChangeScale, AlkalineResultChange
                    , AlkalineAcetateScale, AlkalineResultAcetate
                    , AlkalineCottonScale, AlkalineResultCotton
                    , AlkalineNylonScale, AlkalineResultNylon
                    , AlkalinePolyesterScale, AlkalineResultPolyester
                    , AlkalineAcrylicScale, AlkalineResultAcrylic
                    , AlkalineWoolScale, AlkalineResultWool;

                var AcidChangeScale, AcidResultChange
                    , AcidAcetateScale, AcidResultAcetate
                    , AcidCottonScale, AcidResultCotton
                    , AcidNylonScale, AcidResultNylon
                    , AcidPolyesterScale, AcidResultPolyester
                    , AcidAcrylicScale, AcidResultAcrylic
                    , AcidWoolScale, AcidResultWool;
                $(this).children().find("input[type='number']").each(function (index, value) {
                    switch (index) {
                        case 0:
                            PerspirationFastnessGroup = $(this).val();
                            break;
                    }
                })

                $(this).children().find("input[type='text']").each(function (index, value) {
                    switch (index) {
                        case 1:
                            SEQ = $(this).val();
                            break;
                        case 7:
                            Result = $(this).val();
                            break;
                    }
                })

                $(this).children().find("select").each(function (index, value) {
                    switch (index) {
                        case 0:
                            AlkalineChangeScale = $(this).children("option:selected").val();
                            break;
                        case 1:
                            AlkalineResultChange = $(this).children("option:selected").val();
                            break;
                        case 2:
                            AlkalineAcetateScale = $(this).children("option:selected").val();
                            break;
                        case 3:
                            AlkalineResultAcetate= $(this).children("option:selected").val();
                            break;
                        case 4:
                            AlkalineCottonScale = $(this).children("option:selected").val();
                            break;
                        case 5:
                            AlkalineResultCotton = $(this).children("option:selected").val();
                            break;
                        case 6:
                            AlkalineNylonScale = $(this).children("option:selected").val();
                            break;
                        case 7:
                            AlkalineResultNylon = $(this).children("option:selected").val();
                            break;
                        case 8:
                            AlkalinePolyesterScale = $(this).children("option:selected").val();
                            break;
                        case 9:
                            AlkalineResultPolyester = $(this).children("option:selected").val();
                            break;
                        case 10:
                            AlkalineAcrylicScale = $(this).children("option:selected").val();
                            break;
                        case 11:
                            AlkalineResultAcrylic = $(this).children("option:selected").val();
                            break;
                        case 12:
                            AlkalineWoolScale = $(this).children("option:selected").val();
                            break;
                        case 13:
                            AlkalineResultWool = $(this).children("option:selected").val();
                            break;
                        case 14:
                            AcidChangeScale = $(this).children("option:selected").val();
                            break;
                        case 15:
                            AcidResultChange = $(this).children("option:selected").val();
                            break;
                        case 16:
                            AcidAcetateScale = $(this).children("option:selected").val();
                            break;
                        case 17:
                            AcidResultAcetate = $(this).children("option:selected").val();
                            break;
                        case 18:
                            AcidCottonScale = $(this).children("option:selected").val();
                            break;
                        case 19:
                            AcidResultCotton = $(this).children("option:selected").val();
                            break;
                        case 20:
                            AcidNylonScale = $(this).children("option:selected").val();
                            break;
                        case 21:
                            AcidResultNylon = $(this).children("option:selected").val();
                            break;
                        case 22:
                            AcidPolyesterScale = $(this).children("option:selected").val();
                            break;
                        case 23:
                            AcidResultPolyester = $(this).children("option:selected").val();
                            break;
                        case 24:
                            AcidAcrylicScale = $(this).children("option:selected").val();
                            break;
                        case 25:
                            AcidResultAcrylic = $(this).children("option:selected").val();
                            break;
                        case 26:
                            AcidWoolScale = $(this).children("option:selected").val();
                            break;
                        case 27:
                            AcidResultWool = $(this).children("option:selected").val();
                            break;
                    }
                })


                if (PerspirationFastnessGroup == "" || PerspirationFastnessGroup == undefined) {
                    ErrMsg += "Group cannot be empty.";
                    return false;
                }

                if (SEQ == "" || SEQ == undefined) {
                    ErrMsg += "Seq cannot be empty.";
                    return false;
                }

                if (Result == "" || Result == undefined ||
                    AlkalineResultChange == "" || AlkalineResultChange == undefined ||
                    AlkalineChangeScale == "" || AlkalineChangeScale == undefined ||
                    AlkalineResultAcetate == "" || AlkalineResultAcetate == undefined ||
                    AlkalineAcetateScale == "" || AlkalineAcetateScale == undefined ||
                    AlkalineResultCotton == "" || AlkalineResultCotton == undefined ||
                    AlkalineCottonScale == "" || AlkalineCottonScale == undefined ||
                    AlkalineResultNylon == "" || AlkalineResultNylon == undefined ||
                    AlkalineNylonScale == "" || AlkalineNylonScale == undefined ||
                    AlkalineResultPolyester == "" || AlkalineResultPolyester == undefined ||
                    AlkalinePolyesterScale == "" || AlkalinePolyesterScale == undefined ||
                    AlkalineResultAcrylic == "" || AlkalineResultAcrylic == undefined ||
                    AlkalineAcrylicScale == "" || AlkalineAcrylicScale == undefined ||
                    AlkalineResultWool == "" || AlkalineResultWool == undefined ||
                    AlkalineWoolScale == "" || AlkalineWoolScale == undefined ||

                    AcidResultChange == "" || AcidResultChange == undefined ||
                    AcidChangeScale == "" || AcidChangeScale == undefined ||
                    AcidResultAcetate == "" || AcidResultAcetate == undefined ||
                    AcidAcetateScale == "" || AcidAcetateScale == undefined ||
                    AcidResultCotton == "" || AcidResultCotton == undefined ||
                    AcidCottonScale == "" || AcidCottonScale == undefined ||
                    AcidResultNylon == "" || AcidResultNylon == undefined ||
                    AcidNylonScale == "" || AcidNylonScale == undefined ||
                    AcidResultPolyester == "" || AcidResultPolyester == undefined ||
                    AcidPolyesterScale == "" || AcidPolyesterScale == undefined ||
                    AcidResultAcrylic == "" || AcidResultAcrylic == undefined ||
                    AcidAcrylicScale == "" || AcidAcrylicScale == undefined ||
                    AcidResultWool == "" || AcidResultWool == undefined ||
                    AcidWoolScale == "" || AcidWoolScale == undefined
                ) {
                    ErrMsg += "Color Change ,Acetate,Cotton,Nylon,Polyester,Acrylic,Wool Scale and Result cannot be empty.";
                    return false;
                }

                detail.push({
                    PerspirationFastnessGroup: PerspirationFastnessGroup,
                    SEQ: SEQ,
                    Result: Result,
                    AlkalineChangeScale: AlkalineChangeScale,
                    AlkalineResultChange: AlkalineResultChange,
                    AlkalineAcetateScale: AlkalineAcetateScale,
                    AlkalineResultAcetate: AlkalineResultAcetate,
                    AlkalineCottonScale: AlkalineCottonScale,
                    AlkalineResultCotton: AlkalineResultCotton,
                    AlkalineNylonScale: AlkalineNylonScale,
                    AlkalineResultNylon: AlkalineResultNylon,
                    AlkalinePolyesterScale: AlkalinePolyesterScale,
                    AlkalineResultPolyester: AlkalineResultPolyester,
                    AlkalineAcrylicScale: AlkalineAcrylicScale,
                    AlkalineResultAcrylic: AlkalineResultAcrylic,
                    AlkalineWoolScale: AlkalineWoolScale,
                    AlkalineResultWool: AlkalineResultWool,

                    AcidChangeScale: AcidChangeScale,
                    AcidResultChange: AcidResultChange,
                    AcidAcetateScale: AcidAcetateScale,
                    AcidResultAcetate: AcidResultAcetate,
                    AcidCottonScale: AcidCottonScale,
                    AcidResultCotton: AcidResultCotton,
                    AcidNylonScale: AcidNylonScale,
                    AcidResultNylon: AcidResultNylon,
                    AcidPolyesterScale: AcidPolyesterScale,
                    AcidResultPolyester: AcidResultPolyester,
                    AcidAcrylicScale: AcidAcrylicScale,
                    AcidResultAcrylic: AcidResultAcrylic,
                    AcidWoolScale: AcidWoolScale,
                    AcidResultWool: AcidResultWool,

                });


            });

            if (detail.length == 0) {
                ErrMsg += "Data is empty please fill-in data first.";
            }

            if (ErrMsg != "") {
                msg.WithError(ErrMsg);
                return;
            }


            $.ajax({
                url: "@Url.Action("Encode_Detail", "PerspirationFastness", new { Area = "BulkFGT" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ POID: $('#Main_POID').val(), TestNo: $('#Main_TestNo').val() }),
                async: false,
                success: function (data) {
                    if (data.Result) {
                        if (data.PerspirationFastnessResult == "Fail") {
                            FailMail();
                        }
                        else {
                            msg.WithSuccesCheck("Success", function () {
                                location.reload();
                            });
                        }
                    }
                    else {
                        msg.WithError(data.ErrorMessage );
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });

        });

        $('#Amend').unbind('click').on('click', function () {
            $.ajax({
                url: "@Url.Action("Amend_Detail", "PerspirationFastness", new { Area = "BulkFGT" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ POID: $('#Main_POID').val(), TestNo: $('#Main_TestNo').val() }),
                async: false,
                success: function (data) {
                    if (data.Result) {
                        msg.WithSuccesCheck("Success", function () {
                            location.reload();
                        });
                    }
                    else {
                        msg.WithError(data.ErrorMessage);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $('#Excel').unbind('click').on('click', function () {
            ToReport(0);
        });

        $('#PDF').unbind('click').on('click', function () {
            ToReport(1);
        });

        $('#SendMail').unbind('click').on('click', function () {

            $.ajax({
                url: "@Url.Action("SendMail", "PerspirationFastness", new { Area = "BulkFGT" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    ID: $('#Main_ID').val(),
                    No: $('#Main_TestNo').val()
                }),
                async: false,
                success: function (data) {
                    if (data.Result) {
                        var para = "?To=";
                        para += "&CC=" + '@ViewBag.UserMail';
                        para += "&Subject=" + "Perspiration Fastness Test – ReportNo:" + '@Model.Main.ReportNo';
                        para += "&Body=" + "Attachment is Perspiration Fastness Test– ReportNo:" + '@Model.Main.ReportNo' + " detail data";
                        para += "&file=" + data.FileName;
                        window.open('@Url.Action("SendMailer", "SendMailAttachfiles", new { Area=""})' + para, 'SendMail', config = 'toolbar=no,status=no,location=no,width=800,height=600');
                    }
                    else {
                        msg.WithError(data.ErrorMessage);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
    });
    }

    function ToReport(IsToPDF) {
        $.ajax({
            url: "@Url.Action("Report", "PerspirationFastness", new { Area = "BulkFGT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ ID: $('#Main_ID').val(), No: $('#Main_TestNo').val(), IsToPDF: IsToPDF }),
            async: false,
            success: function (data) {
                if (data.Result) {
                    window.location.href = data.reportPath;
                }
                else {
                    msg.WithError(data.ErrorMessage);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function FailMail() {
        var para = "?Title=" + $('.page-header span').html() + "&FactoryID=@ViewBag.FactoryID&Type=BulkFGT";
        window.open('@Url.Action("TestFailMailList", "PublicWondow",new { Area=""})' + para, 'Mail List', config = 'toolbar=no,status=no,location=no,width=650,height=750');
    }

    function GetTestFailMailList(data) {
        var to = "";
        var cc = "";
        $.each(data, function (index, value) {
            to += value.To + ';';
            cc += value.CC + ';';
        });

        $.ajax({
            url: "@Url.Action("FailMail", "PerspirationFastness", new { Area = "BulkFGT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ ID: $('#Main_POID').val(), No: $('#Main_TestNo').val(), TO: to, CC: cc }),
            async: false,
            success: function (data) {
                if (data.result) {
                    msg.WithSuccesCheck("Success", function () {
                        location.reload();
                    });
                }
                else {
                    msg.WithWarningCheck(data.resultMsg, function () {
                        location.reload();
                    });
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                // console.log(xhr.responseText);
                msg.WithWarningCheck(xhr.responseText, function () {
                    location.reload();
                });
            }
        });
    }

    function AddDetailRow() {
        var ID;
        var lastNO;
        var GroupNO;
        if ($('.DetailTable > tbody > tr').length > 0) {
            lastNO = parseInt($('.DetailTable > tbody > tr:last-child > td > input[type="hidden"] ').attr('idx')) + 1;
            GroupNO = PerspirationFastnessGroupCheck($('.DetailTable>tbody>tr').length + 1);
        }
        else {
            lastNO = 0;
            GroupNO = "01";
        }

        var POID = $('#Main_POID').val();
        $.ajax({
            url: "@Url.Action("AddDetailRow", "PerspirationFastness", new { Area = "BulkFGT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ POID: POID, lastNO: lastNO, GroupNO: GroupNO }),
            async: false,
            success: function (data) {
                $('.DetailTable > tbody').append(data);
                DetailDetailButtonBind();
                $('.date-picker').datepicker({ changeYear: true, changeMonth: true, currentText: "Now" });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function selectChange(obj) {
        var result = $(obj).val();
        if (result == "Pass") {
            $(obj).removeClass('red').addClass('blue');
        }
        else {
            $(obj).removeClass('blue').addClass('red');
        }

        var key = $(obj).parents('td').parents('tr').children('td').find("input[type='hidden']").attr('idx');

        var AlkalineresultChange = document.getElementById("Details_" + key + "__AlkalineResultChange").value;
        var AlkalineresultAcetate = document.getElementById("Details_" + key + "__AlkalineResultAcetate").value;
        var AlkalineresultCotton = document.getElementById("Details_" + key + "__AlkalineResultCotton").value;
        var AlkalineresultNylon = document.getElementById("Details_" + key + "__AlkalineResultNylon").value;
        var AlkalineresultPolyester = document.getElementById("Details_" + key + "__AlkalineResultPolyester").value;
        var AlkalineresultAcrylic = document.getElementById("Details_" + key + "__AlkalineResultAcrylic").value;
        var AlkalineresultWool = document.getElementById("Details_" + key + "__AlkalineResultWool").value;

        var AcidresultChange = document.getElementById("Details_" + key + "__AcidResultChange").value;
        var AcidresultAcetate = document.getElementById("Details_" + key + "__AcidResultAcetate").value;
        var AcidresultCotton = document.getElementById("Details_" + key + "__AcidResultCotton").value;
        var AcidresultNylon = document.getElementById("Details_" + key + "__AcidResultNylon").value;
        var AcidresultPolyester = document.getElementById("Details_" + key + "__AcidResultPolyester").value;
        var AcidresultAcrylic = document.getElementById("Details_" + key + "__AcidResultAcrylic").value;
        var AcidresultWool = document.getElementById("Details_" + key + "__AcidResultWool").value;


        if (AlkalineresultChange == "Fail" || AlkalineresultAcetate == "Fail" || AlkalineresultCotton == "Fail" || AlkalineresultNylon == "Fail" || AlkalineresultPolyester == "Fail" || AlkalineresultAcrylic == "Fail" || AlkalineresultWool == "Fail" || AcidresultChange == "Fail" || AcidresultAcetate == "Fail" || AcidresultCotton == "Fail" || AcidresultNylon == "Fail" || AcidresultPolyester == "Fail" || AcidresultAcrylic == "Fail" || AcidresultWool == "Fail") {
            document.getElementById("Details_" + key + "__Result").value = 'Fail';
        }
        else {
            document.getElementById("Details_" + key + "__Result").value = 'Pass';
        }

        $("#Details_" + key + "__Result").removeClass("blue").removeClass("red");;
        var detailResultColor = document.getElementById("Details_" + key + "__Result").value == "Pass" ? "blue" : "red";
        $("#Details_" + key + "__Result").addClass(detailResultColor);

    }

    function GetArticleList(data) {
        $('#Main_Article').val(data);
    }

    function GetPass1(data) {
        $('#Main_Inspector').val(data.ID);
        $('#Main_InspectorName').val(data.Name);
    }

    function GetPo_Supp_Detail(data, TargetID) {
        $("#Details_" + TargetID + "__SEQ").val(data.Seq1 + "-" + data.Seq2);
        $("#Details_" + TargetID + "__Refno").val(data.Refno);
        $("#Details_" + TargetID + "__SCIRefno").val(data.SCIRefno);
        $("#Details_" + TargetID + "__ColorID").val(data.ColorID);
    }

    function GetFtyInventory(data, TargetID) {
        $("#Details_" + TargetID + "__Roll").val(data.Roll);
        $("#Details_" + TargetID + "__Dyelot").val(data.Dyelot);
    }

    function GetPicture(data) {
        $('#Main_TestBeforePicture').val(data.BeforePicture.replace("data:image/png;base64,", ""));
        $('#Main_TestAfterPicture').val(data.AfterPicture.replace("data:image/png;base64,", ""));
    }

    function PerspirationFastnessGroupCheck(value) {
        if (parseInt(value) >= 99) {
            return 99;
        }

        return padLeft(parseInt(value).toString(), 2);
    }
</script>