@using DatabaseObject.ViewModel.BulkFGT

@model PhenolicYellowTest_ViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/ThirdParty/SciCustom/css/TableStyle.css" rel="stylesheet" />
<link href="~/ThirdParty/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" />

<style>
    .SearchDiv {
        width: 100%;
        /*height: 8vh;*/
        /*background-color: pink;*/
        flex-direction: row;
        flex-wrap: wrap;
        align-items: center;
        display: flex;
    }

    .colDiv {
        width: 4.3%;
        padding: 2px;
    }

    .colDiv2 {
        width: 13%;
        padding: 2px;
    }


    .searchTitle {
        color: white;
    }

    .row-name {
        color: gray;
        font-size: 1.2em;
        background-color: wheat;
    }

    .buttonArea, .MainArea, .DetailDataArea {
        width: 100%;
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
    }

    .buttonAreaItem {
        width: 9%;
        padding: 2px;
    }

    .MainAreaItem100 {
        width: 99.6%;
        padding: 2px;
        height: 3rem;
        border: 1px solid;
        display: flex;
        align-items: center;
        justify-content: center;
    }


    .MainAreaItem {
        width: 16.6%;
        padding: 2px;
        height: 3rem;
        border: 1px solid;
        display: flex;
        align-items: center;
    }

    .DetailDataAreaItem1 {
        width: 13.5%;
        padding: 2px;
        height: 3rem;
        border: 1px solid;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
    }

    .DetailDataAreaItem2 {
        width: 5%;
        padding: 2px;
        height: 3rem;
        border: 1px solid;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
    }

    .DetailDataAreaItem1 input, .DetailDataAreaItem1 select {
        width: 100%;
    }

    .DetailDataAreaItem2 input, .DetailDataAreaItem2 select {
        width: 100%;
    }

    .colHead {
        background-color: wheat;
        color: darkslategray;
        font-size: 1rem;
        font-weight: bold;
        font-size: 1rem;
    }
    /*   .colHead label{
        font-weight:bold;
        font-size:1rem;
    }*/
    .MainAreaItemSpan3 {
        width: 37.5%;
        padding: 2px;
        height: 3rem;
        border: 1px solid;
        display: flex;
        align-items: center;
    }

    .MainAreaItemSpan7 {
        width: 87.5%;
        padding: 2px;
        height: 3rem;
        border: 1px solid;
        display: flex;
        align-items: center;
    }


    .odd {
        background-color: white;
    }

    .even {
        background-color: lightgray;
    }

    .actionBtn {
        width: 100%;
    }

    .colTitle {
        /*color: white;*/
    }

    .canUse {
        color: white !important;
        cursor: pointer;
    }


    .textArenDiv {
        height: 5rem;
    }

    textarea {
        padding: 2px;
        width: 100%;
        height: 4.5rem;
    }

    input:-webkit-autofill {
        -webkit-text-fill-color: black;
    }

    h4 {
        font-size: 1rem;
    }

    #dialogProcessMsg {
        display: none;
        position: absolute;
        top: 20%;
        left: 25%;
        height: 100%;
        background-color: lavender;
        border-radius: 5px;
        z-index: 1002;
        width: 50%;
        height: 35vh;
        /*overflow: scroll;*/
    }

    .black_overlay {
        display: none;
        position: absolute;
        top: 0%;
        left: 0%;
        width: 100%;
        height: 100%;
        background-color: black;
        z-index: 1001;
        opacity: .80;
    }

    input, select, a, div {
        font-size: 1rem;
    }
</style>

<div class="main-content">
    <header class="page-header">
        <h3>
            <i class=""></i><span>Phenolic Yellowing Test</span>
        </h3>
        <div class="breadcrumb">
            <div>Home</div>
            <div class="current">Phenolic Yellowing Test</div>
        </div>
    </header>



    @using (Html.BeginForm("Index", ViewContext.RouteData.GetRequiredString("Controller"), FormMethod.Post, new { }))
    {
        <div class="main-area">


            <div class="SearchDiv">
                <!-- #region Row 1-->
                <div class="colDiv">
                    <h4 class="searchTitle">Brand</h4>
                </div>
                <div class="colDiv2">
                    @Html.TextBoxFor(o => o.Request.BrandID, new { @value = Model.Request.BrandID, @style = "width:80%" })
                    <input id="btnBrandID" onclick="OpenWindow('BrandID')" type="button" class="site-btn btn-blue" style="margin:0;border: 2px solid transparent;" name="" value="..." />
                </div>
                <div class="colDiv">
                    <h4 class="searchTitle">Season</h4>
                </div>
                <div class="colDiv2">
                    @Html.TextBoxFor(o => o.Request.SeasonID, new { @value = Model.Request.SeasonID, @style = "width:80%" })
                    <input id="btnSeasonID" onclick="OpenWindow('SeasonID')" type="button" class="site-btn btn-blue" style="margin:0;border: 2px solid transparent;" name="" value="..." />
                </div>
                <div class="colDiv">
                    <h4 class="searchTitle">Style</h4>
                </div>
                <div class="colDiv2">
                    @Html.TextBoxFor(o => o.Request.StyleID, new { @value = Model.Request.StyleID, @style = "width:80%" })
                    <input id="btnStyleID" onclick="OpenWindow('StyleID')" type="button" class="site-btn btn-blue" style="margin:0;border: 2px solid transparent;" name="" value="..." />
                </div>
                <div class="colDiv">
                    <h4 class="searchTitle">Article</h4>
                </div>
                <div class="colDiv2">
                    @Html.TextBoxFor(o => o.Request.Article, new { @value = Model.Request.Article, @style = "width:80%" })
                    <input id="btnArticle" onclick="OpenWindow('Article')" type="button" class="site-btn btn-blue" style="margin:0;border: 2px solid transparent;" name="" value="..." />
                </div>
                <div class="colDiv">
                    <input type="submit" class="site-btn btn-blue actionBtn" name="action:Query" id="btnQuery" value="Query" />
                </div>
                <div class="colDiv">
                    <input type="button" class="site-btn btn-green actionBtn" name="action:New" id="btnNew" value="New" />
                </div>
                <div class="colDiv">
                </div>
                <div class="colDiv">
                    <h4 class="searchTitle">Report No.</h4>
                </div>
                <div class="colDiv2">
                    @Html.DropDownListFor(o => o.Request.ReportNo, Model.ReportNo_Source, new { @style = "width:100%", onchange = "ReportNoChange(this.value)" })
                </div>
                <!-- #endregion -->

            </div>

            <div class="content-scroll">

                <div class="inner-scroll" style="float:left">

                    <div class="buttonArea">
                        <div class="buttonAreaItem">

                            <h4 id="Edit" class="toolBarItem" style=" margin-right: 1em;">
                                <img src="~/Image/Icon/Edit.png" width="30" />
                                Edit
                            </h4>

                        </div>
                        <div class="buttonAreaItem">
                            <input id="SaveSubmit" type="submit" name="Action:EditSave" style="display:none" />
                            <h4 id="Save" class="toolBarItem" style=" margin-right: 1em;">
                                <img src="~/Image/Icon/Save.png" width="30" />
                                Save
                            </h4>

                        </div>
                        <div class="buttonAreaItem">
                            <h4 id="Undo" class="toolBarItem" style="margin-right: 1em;">
                                <img src="~/Image/Icon/Undo.png" width="30" />
                                Undo
                            </h4>

                        </div>
                        <div class="buttonAreaItem">
                            <input id="DeleteSubmit" type="submit" name="Action:Delete" style="display:none" />
                            <h4 id="Delete" class="toolBarItem" style=" margin-right: 1em;">
                                <img src="~/Image/Icon/Delete.png" width="30" />
                                Delete
                            </h4>

                        </div>
                        <div class="buttonAreaItem">
                            <h4 id="Encode" class="toolBarItem" style="margin-right: 1em;">
                                <img src="~/Image/Icon/Lock.png" width="30" />
                                Encode
                            </h4>
                        </div>
                        <div class="buttonAreaItem">
                            <h4 id="Amend" class="toolBarItem" style="margin-right: 1em;">
                                <img src="~/Image/Icon/Unlock.png" width="30" />
                                Amend
                            </h4>
                        </div>
                        <div class="buttonAreaItem">
                            <h4 id="Excel" class="toolBarItem" style=" margin-right: 1em;">
                                <img src="~/Image/Icon/XLS.png" width="30" />
                                Excel
                            </h4>
                        </div>
                        <div class="buttonAreaItem">
                            <h4 id="PDF" class="toolBarItem" style=" margin-right: 1em;">
                                <img src="~/Image/Icon/PDF.png" width="30" />
                                PDF
                            </h4>
                        </div>
                        <div class="buttonAreaItem">
                            <h4 id="Picture" class="toolBarItem" style=" margin-right: 1em;">
                                <img src="~/Image/Icon/Picture.png" width="30" />
                                Picture
                            </h4>
                        </div>
                        <div class="buttonAreaItem">
                            <h4 id="SendtoMR" class="toolBarItem" style=" margin-right: 1em;">
                                <img src="~/Image/Icon/SendMail.png" width="30" />
                                Send to MR
                            </h4>
                        </div>
                        <div class="buttonAreaItem">
                            <h4 id="NewItem" class="toolBarItem">
                                <img src="~/Image/Icon/New.png" width="30" />
                                New Item
                            </h4>
                        </div>
                    </div>

                    @*表頭*@
                    <div class="MainArea">
                        <!-- #region Row 1-->
                        <div class="MainAreaItem odd">
                            <h4 class="colTitle">Report No</h4>

                        </div>

                        <div class="MainAreaItem odd">
                            @Html.TextBoxFor(o => o.Main.ReportNo, new { @class = "" })

                            @Html.HiddenFor(o => o.Main.Status)
                            @Html.HiddenFor(o => o.Main.TestBeforePicture)
                            @Html.HiddenFor(o => o.Main.TestAfterPicture)
                        </div>

                        <div class="MainAreaItem odd">
                            <h4 class="colTitle">Submit Date</h4>

                        </div>

                        <div class="MainAreaItem odd">
                            @Html.HiddenFor(o => o.Main.SubmitDate)
                            @Html.TextBoxFor(o => o.Main.SubmitDateText, new { @class = "CanEdit date-picker" })

                        </div>

                        <div class="MainAreaItem odd">
                            <h4 class="colTitle">Report Date</h4>

                        </div>

                        <div class="MainAreaItem odd">
                            @Html.TextBoxFor(o => o.Main.ReportDateText, new { @class = "" })

                        </div>

                        <!-- #endregion -->
                        <!-- #region Row 2-->

                        <div class="MainAreaItem even">
                            <h4 class="colTitle">SP#</h4>

                        </div>

                        <div class="MainAreaItem even">
                            @Html.TextBoxFor(o => o.Main.OrderID, new { @class = "CanEdit even" })

                        </div>

                        <div class="MainAreaItem even">
                            <h4 class="colTitle">Brand</h4>

                        </div>

                        <div class="MainAreaItem even">
                            @Html.TextBoxFor(o => o.Main.BrandID, new { @class = "even" })
                        </div>

                        <div class="MainAreaItem even">
                            <h4 class="colTitle">Season</h4>

                        </div>

                        <div class="MainAreaItem even">
                            @Html.TextBoxFor(o => o.Main.SeasonID, new { @class = "even" })

                        </div>

                        <!-- #endregion -->
                        <!-- #region Row 3-->

                        <div class="MainAreaItem odd">
                            <h4 class="colTitle">Style</h4>
                        </div>

                        <div class="MainAreaItem odd">
                            @Html.TextBoxFor(o => o.Main.StyleID, new { @class = "" })

                        </div>
                        <div class="MainAreaItem odd">
                            <h4 class="colTitle">Article</h4>

                        </div>

                        <div class="MainAreaItem odd">
                            <select id="Main_Article" name="Main.Article" class="CanEdit">
                                @foreach (var item in Model.Article_Source)
                                {
                                    string selected = item.Value.Equals(Model.Main.Article) ? "selected" : "";
                                    <option value="@item.Value" @selected>@item.Text</option>
                                }
                            </select>
                        </div>
                        <div class="MainAreaItem odd">
                            <h4 class="colTitle">Seq</h4>

                        </div>
                        <div class="MainAreaItem odd">
                            @Html.TextBoxFor(o => o.Main.Seq, new { @class = "" })
                            @Html.HiddenFor(o => o.Main.Seq1, new { @class = "" })
                            @Html.HiddenFor(o => o.Main.Seq2, new { @class = "" })

                        </div>

                        <!-- #endregion -->
                        <!-- #region Row 4-->

                        <div class="MainAreaItem even">
                            <h4 class="colTitle">RefNo</h4>
                        </div>

                        <div class="MainAreaItem even">
                            @Html.TextBoxFor(o => o.Main.FabricRefNo, new { @class = "even", @onclick = "OpenWindow('FabricRefNo')" ,@placeholder = "Click" })

                        </div>
                        <div class="MainAreaItem even">
                            <h4 class="colTitle">Fabric Color</h4>

                        </div>

                        <div class="MainAreaItem even">
                            @Html.TextBoxFor(o => o.Main.FabricColor, new { @class = "even" })
                        </div>
                        <div class="MainAreaItem even">
                            <h4 class="colTitle">Result</h4>

                        </div>
                        <div class="MainAreaItem even">
                            @{ string mainResultColor = Model.Main.Result == "Pass" ? "blue" : "red";}
                            @Html.TextBoxFor(o => o.Main.Result, new { @class = "even", @style=$@"color:{mainResultColor}" })

                        </div>

                        <!-- #endregion -->
                        <!-- #region Row 5-->

                        <div class="MainAreaItem100 odd">
                            <h4 class="colTitle">Test Condition</h4>
                        </div>

                        <!-- #endregion -->
                        <!-- #region Row 6-->

                        <div class="MainAreaItem even">
                            <h4 class="colTitle">Temperature</h4>
                        </div>

                        <div class="MainAreaItem even">
                            @*@Html.TextBoxFor(o => o.Main.Temperature, new { @class = "CanEdit even" })*@


                            <select id="Main_Temperature" name="Main.Temperature" class="CanEdit even">
                                @foreach (var item in Model.Temperature_Source)
                                {
                                    string selected = item.Value.Equals(Model.Main.Temperature.ToString()) ? "selected" : "";
                                    <option value="@item.Value" @selected>@item.Text</option>
                                }
                            </select>
                        </div>
                        <div class="MainAreaItem even">
                            <h4 class="colTitle">Time(Hours)</h4>

                        </div>

                        <div class="MainAreaItem even">
                            @Html.TextBoxFor(o => o.Main.Time, new { @class = "CanEdit even", @Type = "Number", @onchange = "value=TimeCheck(value)" })
                        </div>
                        <div class="MainAreaItem even">
                            <h4 class="colTitle">Last Update</h4>
                        </div>
                        <div class="MainAreaItem even">
                            @Html.TextBoxFor(o => o.Main.LastUpadate, new { @class = "even", @style = "width:100%" })
                        </div>

                        <!-- #endregion -->
                    </div>

                    @*表身*@
                    <div class="detailDataDiv">
                        <br />
                        <div class="DetailDataArea">
                            <!--#region Head-->
                            <div class="DetailDataAreaItem1 colHead">
                                Evaluation Item
                            </div>
                            <div class="DetailDataAreaItem1 colHead">
                                Dyelot#
                            </div>
                            <div class="DetailDataAreaItem1 colHead">
                                Roll#
                            </div>
                            <div class="DetailDataAreaItem1 colHead">
                                Scale
                            </div>
                            <div class="DetailDataAreaItem1 colHead">
                                Result
                            </div>
                            <div class="DetailDataAreaItem1 colHead">
                                Remark
                            </div>
                            <div class="DetailDataAreaItem1 colHead">
                                Las Update
                            </div>
                            <div class="DetailDataAreaItem2 colHead">
                                Action
                            </div>

                            <!--#endregion-->

                            @if (Model.DetailList != null)
                            {
                                for (int i = 0; i < Model.DetailList.Count; i++)
                                {
                                    string rowName = $@"Row{i}";
                                    <div class="DetailDataAreaItem1 colBody @rowName">
                                        <input type="hidden" class="detailRowIdx" name="name" value="@i" />
                                        @*@Html.TextBoxFor(o => Model.DetailList[i].ReportNo, new { @class = "" })*@
                                        @Html.HiddenFor(o => Model.DetailList[i].ReportNo, new { @class = "" })
                                        @Html.HiddenFor(o => Model.DetailList[i].Ukey, new { @class = "" })
                                        @Html.TextBoxFor(o => Model.DetailList[i].EvaluationItem, new { @class = "" })
                                    </div>
                                    <div class="DetailDataAreaItem1 colBody @rowName">
                                        @Html.TextBoxFor(o => Model.DetailList[i].Dyelot, new { @class = "", @placeholder = "Click" , @onclick = "RollDyelotWindow(this)" })
                                    </div>
                                    <div class="DetailDataAreaItem1 colBody @rowName">
                                        @Html.TextBoxFor(o => Model.DetailList[i].Roll, new { @class = "" })
                                    </div>
                                    <div class="DetailDataAreaItem1 colBody @rowName">
                                        <select id="DetailList[@i]_Scale" name="DetailList[@i].Scale" class="CanEdit" onchange="ScaleChange(@i, this, 'Result', '4-5')">
                                            @foreach (var item in Model.Scale_Source)
                                            {
                                                string selected = item.Value.Equals(Model.DetailList[i].Scale) ? "selected" : "";
                                                <option value="@item.Value" @selected>@item.Text</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="DetailDataAreaItem1 colBody @rowName">
                                        @{ string resultColor = Model.DetailList[i].Scale == "4-5" || Model.DetailList[i].Scale.StartsWith("5") ? "blue" : "red";}
                                        @Html.TextBoxFor(o => Model.DetailList[i].Result, new { @class = "", @style = $@"color: {resultColor}" })
                                    </div>
                                    <div class="DetailDataAreaItem1 colBody @rowName">
                                        @Html.TextBoxFor(o => Model.DetailList[i].Remark, new { @class = "CanEdit" })
                                    </div>
                                    <div class="DetailDataAreaItem1 colBody @rowName">
                                        @Model.DetailList[i].LastUpadate
                                    </div>
                                    <div class="DetailDataAreaItem2 colBody @rowName">
                                        @if (string.IsNullOrEmpty(Model.Main.ReportDateText))
                                        {
                                            <img class="detailDelete" src="~/Image/Icon/Delete.png" width="30" />
                                        }
                                    </div>
                                }
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>




<script type="text/javascript">

    var msg = new MessagerAlert();
    var EditType = "@Model.Main.EditType";
    var EditMode;

    $(function () {
        EditMode = false;

        IsEditModeChange();
        if (EditType == 'New') {
            EditMode = true;
            $("#SaveSubmit").attr("name", "Action:NewSave");
            IsEditModeChange();
        }
        QueryBind();

        @Html.Raw(Model.ErrorMessage)
    });

    function IsEditModeChange() {

        // 控制項重置
        ClickEventBind();
        BlurEventBind();
        $('.toolBarItem').removeClass("canUse");

        if ($('#Main_ReportNo').val() == '' && EditType != 'New') {

            // 可編輯欄位關閉
            $('.MainArea select ,.DetailDataAreaItem1 select ,.DetailDataAreaItem2 select').attr("disabled", true);
            $('.MainArea input ,.MainArea textarea ,.DetailDataAreaItem1 input ,.DetailDataAreaItem2 input').attr("readonly", "readonly");
        }
        else {
            //根據模式區分
            if (EditMode) {
                // 可編輯欄位開啟
                $('.CanEdit').removeAttr("disabled");
                $('.CanEdit').removeAttr("readonly");

                // 編輯模式可用功能開啟
                $('#Save, #Undo ,#Picture ,#NewItem').addClass("canUse");
                $(".detailDelete").show();

            }
            else {
                // 可編輯欄位關閉
                $('.MainArea select ,.DetailDataAreaItem1 select ,.DetailDataAreaItem2 select').attr("disabled", true);
                $('.MainArea input ,.MainArea textarea ,.DetailDataAreaItem1 input ,.DetailDataAreaItem2 input').attr("readonly", "readonly");
                $(".detailDelete").hide();


                // 未Confirmed可用功能開啟
                if ($("#Main_Status").val() == 'New') {
                    $('#Encode').addClass("canUse");
                    $('#Edit , #Delete ,#Excel ,#PDF ,#SendtoMR ,#Picture ,#Exit').addClass("canUse");
                }
                else {
                    // Confirmed後的可用功能開啟
                    $('#Amend').addClass("canUse");
                    $('#Excel ,#PDF ,#SendtoMR ,#Picture ,#Exit').addClass("canUse");
                }
            }

        }

        // 移除不可用功能的事件
        $('.toolBarItem:not(.canUse)').unbind('click');
    }

    function QueryBind() {

        $('#btnQuery').on('click', function () {
            if ($('#Request_BrandID').val() == '' || $('#Request_SeasonID').val() == '' || $('#Request_StyleID').val() == '' || $('#Request_Article').val() == '') {
                msg.WithError("Brand, Season ,Style and Article cannot be empty");
                return false;
            }
        });

        $("#Request_BrandID").blur(function () {
            $.ajax({
                url: "@Url.Action("BrandList", "PublicWindow", new { Area = "" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#Request_BrandID").val('');
                        msg.WithError('Brand Not Found');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $("#Request_SeasonID").blur(function () {
            var BrandID = $('#Request_BrandID').val();
            $.ajax({
                url: "@Url.Action("SeasonList", "PublicWindow", new { Area = "" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: BrandID, SeasonID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#Request_SeasonID").val('');
                        msg.WithError('Season Not Found');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $("#Request_StyleID").blur(function () {
            var BrandID = $('#Request_BrandID').val();
            var SeasonID = $('#Request_SeasonID').val();
            $.ajax({
                url: "@Url.Action("StyleList", "PublicWindow", new { Area = "" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: BrandID, SeasonID: SeasonID, StyleID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#Request_StyleID").val('');
                        msg.WithError('Style Not Found');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $("#Request_Article").blur(function () {
            var BrandID = $('#Request_BrandID').val();
            var SeasonID = $('#Request_SeasonID').val();
            var StyleID = $('#Request_StyleID').val();
            $.ajax({
                url: "@Url.Action("ArticleList", "PublicWindow", new { Area = "" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: BrandID, SeasonID: SeasonID, StyleID: StyleID, Article: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#Request_Article").val('');
                        msg.WithError('Article Not Found');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });
    }

    function OpenWindow(WindowType) {
        if (WindowType == "BrandID") {
            window.open('@Url.Action("BrandList", "PublicWindow", new { Area = "" })', WindowType, config = 'toolbar=no,status=no,location=no,width=400,height=650');
        }
        if (WindowType == "SeasonID") {

            if ($('#Request_BrandID').val() == '' ) {
                msg.WithError('Please input brand  first.');
                return;
            }
            var para = "?BrandID=" + $('#Request_BrandID').val();
            window.open('@Url.Action("SeasonList", "PublicWindow", new { Area = "" })' + para, WindowType, config = 'toolbar=no,status=no,location=no,width=400,height=650');
        }
        if (WindowType == "StyleID") {

            if ($('#Request_BrandID').val() == '' || $('#Request_SeasonID').val() == '') {
                msg.WithError('Please input brand and season first.');
                return;
            }
            var para = "?BrandID=" + $('#Request_BrandID').val() + "&SeasonID=" + $('#Request_SeasonID').val();
            window.open('@Url.Action("StyleList", "PublicWindow", new { Area = "" })' + para, WindowType, config = 'toolbar=no,status=no,location=no,width=400,height=650');
        }
        if (WindowType == "Article") {

            if ($('#Request_BrandID').val() == '' || $('#Request_SeasonID').val() == '' || $('#Request_StyleID').val() == '') {
                msg.WithError('Please input brand season ,and Style first.');
                return;
            }
            var para = "?TargetID=Request_Article&OrderID=&StyleUkey=0&BrandID=" + $('#Request_BrandID').val() + "&SeasonID=" + $('#Request_SeasonID').val() + "&StyleID=" + $('#Request_StyleID').val();
            window.open('@Url.Action("ArticleList", "PublicWindow", new { Area = "" })' + para, WindowType, config = 'toolbar=no,status=no,location=no,width=400,height=650');
        }
        if (WindowType == "FabricRefNo" && EditMode) {

            if ($('#Main_OrderID').val() == '') {
                msg.WithError('Please input SP# first.');
                return;
            }
            var para = "?TargetID=Main_FabricRefNo&OrderID=" + $('#Main_OrderID').val();
            window.open('@Url.Action("FabricRefNoList", "PublicWindow", new { Area = "" })' + para, WindowType, config = 'toolbar=no,status=no,location=no,width=800,height=750');
        }
    }

    function RollDyelotWindow(clickObj) {

        if (!EditMode) {
            return;
        }
        let targetID = $(clickObj).attr("ID");

        if ($('#Main_OrderID').val() == '' || $('#Main_Seq1').val() == '' || $('#Main_Seq2').val() == '') {
            msg.WithError('Please input SP# and Ref No. first.');
            return;
        }
        var para = `?TargetID=${targetID}&OrderID=${$('#Main_OrderID').val()}&Seq1=${$('#Main_Seq1').val()}&Seq2=${$('#Main_Seq2').val()}`;
        window.open('@Url.Action("RollDyelotList", "PublicWindow", new { Area = "" })' + para, 'Roll Dyelot', config = 'toolbar=no,status=no,location=no,width=800,height=750');
    }

    function GetBrandList(BrandID) {
        $("#Request_BrandID").val(BrandID);
        // 在這邊取得開窗選擇的Brand，進行後續動作
    }
    function GetSeasonList(SeasonID) {
        $("#Request_SeasonID").val(SeasonID);
        // 在這邊取得開窗選擇的Brand，進行後續動作
    }
    function GetStyleList(StyleID) {
        $("#Request_StyleID").val(StyleID);
        // 在這邊取得開窗選擇的Brand，進行後續動作
    }
    function GetArticleList(Article) {
        $("#Request_Article").val(Article);
        // 在這邊取得開窗選擇的Brand，進行後續動作
    }
    function GetFabricRefNoList(FabricRefNoData) {
        $("#Main_Seq").val(FabricRefNoData.Seq);
        $("#Main_Seq1").val(FabricRefNoData.Seq1);
        $("#Main_Seq2").val(FabricRefNoData.Seq2);
        $("#Main_FabricRefNo").val(FabricRefNoData.Refno);
        $("#Main_FabricColor").val(FabricRefNoData.Color);
        // 在這邊取得開窗選擇的FabricRefNoData，進行後續動作

        // Roll Dyelot可能改變，因此清空表身
        $(".colBody").remove();
    }
    function GetRollDyelotList(RollDyelotData, targetID) {
        $(`#${targetID}`).val(RollDyelotData.Dyelot);
        $(`#${targetID.replace('Dyelot', 'Roll')}`).val(RollDyelotData.Roll);

        // 在這邊取得開窗選擇的RollDyelotData，進行後續動作
    }

    function GetPicture(data) {
        $('#Main_TestBeforePicture').val(data.BeforePicture.replace("data:image/png;base64,", ""));
        $('#Main_TestAfterPicture').val(data.AfterPicture.replace("data:image/png;base64,", ""));
    }
    function ClickEventBind() {

        $('.toolBarItem ,detailDelete').unbind('click');

        $('#btnNew').on('click', function () {
            window.location = '@Url.Action("New")';
        });

        $('#Edit').on('click', function () {
            EditMode = true;
            IsEditModeChange();
        });
        $('#Save').on('click', function () {
            if (EditMode == false) {
                return;
            }
            if ($('#Main_OrderID').val() == '' || $('#Main_BrandID').val() == '' || $('#Main_SeasonID').val() == '' || $('#Main_StyleID').val() == '' || $('#Main_Article').val() == '') {
                msg.WithError("SP#, Brand, Season ,Style and Article cannot be empty");
                return false;
            }


            $('.detailRowIdx').each(function (index, data) {
                var idx = $(this).val();
                if (idx != index) {

                    let className = `Row${idx}`;

                    //$.each($(this).find("input[id^='Details']"), function () {
                    //    var tableName = $(this).attr('name').substr(0, $(this).attr('name').indexOf("["));
                    //    var rollName = $(this).attr('name').substr($(this).attr('name').indexOf("]") + 2, $(this).attr('name').length - $(this).attr('name').indexOf("]"));
                    //    $(this).attr("id", tableName + "_" + index.toString() + "__" + rollName);
                    //    $(this).attr("name", tableName + "[" + index.toString() + "]." + rollName);
                    //});

                    $.each($(`.Row${idx} .DetailInput`), function () {
                        let colName = $(this).attr("Name").split('.')[1];
                        let newName = `DetailList[${index}].${colName}`;
                        let newID = `DetailList_${index}__${colName}`;
                        $(this).removeClass(`Row${idx}`);
                        $(this).addClass(`Row${index}`);
                        $(this).attr("ID", newID);
                        $(this).attr("Name", newName);
                    });
                }
            });


            $("#SaveSubmit").click();

        });
        $('#Undo').on('click', function () {
            if (EditType == 'New') {
                window.location.href="@Url.Action("Index")";
            }
            if ($("#Main_ReportNo").val() != '') {
                // 重新Query 一次Detail
                $("#btnQuery").click();
            }
            else {
                EditMode = false;
                EditType = '';
                IsEditModeChange();
            }
        });
        $('#Delete').on('click', function (e) {
            if (EditMode == true) {
                return;
            }

            if (EditMode == false && $('#Main_ReportNo').val() != null && $('#Main_ReportNo').val() != "" && $('#Main_ReportNo').val() != "0") {
                e.preventDefault();
                msg.WithConfirm('Do you want to delete the data ?',
                    function () {
                        $("#DeleteSubmit").click();
                    }, null);
            }
        });
        $('#Picture').on('click', function () {
            var para = "?Title=" + $('.page-header span').html() + "&EditMode=" + EditMode;
            para += "&" + "Table=PhenolicYellowTest";
            para += "&" + "TargetBeforeColumn=Main_TestBeforePicture";
            para += "&" + "TargetAfterColumn=Main_TestAfterPicture";
            para += "&" + "BeforeColumn=TestBeforePicture";
            para += "&" + "AfterColumn=TestAfterPicture";
            para += "&" + "PKey_1=ReportNo";
            para += "&" + "PKey_1_Val=" + $('#Main_ReportNo').val();
            window.open('@Url.Action("PictureList", "PublicWindow",new { Area=""})' + para, 'Picture List', config = 'toolbar=no,status=no,location=no,width=1024,height=750');
        });

        $('#SendtoMR').on('click', function () {

            if ($("#Main_ReportNo").val() == '') {
                return false;
            }

            $.ajax({
                url: "@Url.Action("SendMail")",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    ReportNo: $('#Main_ReportNo').val()
                }),
                async: false,
                success: function (data) {
                    if (data.Result) {
                        var para = "?To=";
                        para += "&CC=";
                        para += "&Subject=" + "Bulk Phenolic Yellowing Test – ReportNo:" + $("#Main_ReportNo").val();
                        para += `&Body=Attachment Is Bulk Phenolic Yellowing Test - ReportNo:${$("#Main_ReportNo").val() } detail data`;
                        para += "&file=" + data.FileName;
                        window.open('@Url.Action("SendMailer", "SendMailAttachfiles", new { Area=""})' + para, 'SendMail', config = 'toolbar=no,status=no,location=no,width=800,height=600');
                    }
                    else {
                        msg.WithError(data.ErrorMessage);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $("#Excel").on("click", function () {

            $.ajax({
                url: "@Url.Action("ToExcel")",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ ReportNo: $('#Main_ReportNo').val()}),
                async: false,
                success: function (data) {
                    if (data.Result) {
                        window.location.href = data.reportPath;
                    }
                    else {
                        msg.WithError(data.ErrorMessage);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $("#PDF").on("click", function () {

            $.ajax({
                url: "@Url.Action("ToPDF")",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ ReportNo: $('#Main_ReportNo').val()}),
                async: false,
                success: function (data) {
                    if (data.Result) {
                        window.location.href = data.reportPath;
                    }
                    else {
                        msg.WithError(data.ErrorMessage);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        if ($("#Main_Status").val() == "New") {

            $('#Encode').on('click', function () {

                $.ajax({
                    url: "@Url.Action("Encode")",
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ ReportNo: $('#Main_ReportNo').val(), Result: $("#Main_Result").val() }),
                    async: false,
                    success: function (data) {
                        if (data.Result) {
                            msg.WithSuccesCheck("Success", function () {
                                location.reload();
                                $("#btnQuery").click();
                            });
                        }
                        else {
                            msg.WithError(data.ErrMsg);
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.responseText);
                    }
                });
            });
        }
        if ($("#Main_Status").val() != "New") {

            $('#Amend').on('click', function () {

                $.ajax({
                    url: "@Url.Action("Amend")",
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ ReportNo: $('#Main_ReportNo').val(), Result: $("#Main_Result").val() }),
                    async: false,
                    success: function (data) {
                        if (data.Result) {
                            msg.WithSuccesCheck("Success", function () {
                                $("#btnQuery").click();
                            });
                        }
                        else {
                            msg.WithError(data.ErrMsg);
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.responseText);
                    }
                });
            });
        }

        $('.detailDelete').on('click', function () {
            if (EditMode == false) {
                return;
            }
            var t = $(this);

            msg.WithConfirm('Do you want to delete the data ?',
                function () {
                    let targetRow = t.parent('div').attr('class').split(' ').filter(o => o.includes('Row'))[0];

                    $(`.${targetRow}`).remove();

                    reBuildIndex();

                    msg.WithSuccess("Delete Success");
                }, null);
        });

        $('#NewItem').on('click', function () {
            AddDetailRow();
        });
    }

    function BlurEventBind() {

        $('input ,select').unbind('blur').unbind('change');


        $("#Main_OrderID").on("change", function () {
            if (EditMode == false) {
                return;
            }
            // 重設Article下拉選單
            $("#Main_Article").empty();

            if ($(this).val() == '') {
                $("#Main_OrderID").val('');
                $("#Main_BrandID").val('');
                $("#Main_SeasonID").val('');
                $("#Main_StyleID").val('');
                $("#Main_Article").val('');
                return;
            }

            let orderID = $(this).val();


            $.ajax({
                url: "@Url.Action("OrderIDCheck")",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ orderID: orderID }),
                async: true,
                success: function (data) {
                    if (data.Result == false || data.ErrMsg != "") {

                        $("#Main_OrderID").val('');
                        $("#Main_BrandID").val('');
                        $("#Main_SeasonID").val('');
                        $("#Main_StyleID").val('');
                        $("#Main_Articl").val('');

                        msg.WithError(data.ErrMsg);
                    }
                    else {
                        // 塞入Article下拉選單
                        $("#Main_Article").append(data.ArticleSource);

                        $("#Main_BrandID").val(data.Main.BrandID);
                        $("#Main_SeasonID").val(data.Main.SeasonID);
                        $("#Main_StyleID").val(data.Main.StyleID);

                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });

        });

        $("#Main_SubmitDateText").on("change", function () {
            $("#Main_SubmitDate").val($("#Main_SubmitDateText").val());
        });
    }

    function AddDetailRow() {

        if (EditMode == false) {
            return;
        }
        var lastNO;

        if ($('.detailRowIdx').length > 0) {
            lastNO = parseInt($('.detailRowIdx:last').val()) + 1;// 因為length會比index多1，所以不用+1了 parseInt($('#DetailTable > tbody > tr:last-child').attr('idx')) + 1;
        }
        else {
            lastNO = 0;
            $(".colBody").remove();
        }

        $.ajax({
            url: "@Url.Action("AddDetailRow", new { Area = "BulkFGT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ lastNO: lastNO}),
            async: false,
            success: function (html) {
                //$('#DetailTable > thead > tr').show();
                //$('#DetailTable > tbody').append(html);

                $(".DetailDataArea").append(html);
                ClickEventBind();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function TimeCheck(value) {
        if (parseFloat(value) >= 99) {
            return 99;
        }
        else if (parseFloat(value) < 0) {
            return 0;
        }

        return Number.parseInt(value);
    }


    // 若表身有資料被刪除，則重新編號索引
    function reBuildIndex() {

        // 取剩下的Row
        var rows = $('.detailRowIdx');

        // 新的索引，一律從0開始
        var newIndex = 0;

        // 剩下的Row逐一處理，可能會有連號造成Index不連貫，例如原本有三筆資料，索引0、1、2，但1刪掉了，剩下的兩筆索引要重新編成0、1
        rows.each(function () {

            // 取得舊索引
            var oldIndex = $(this).val();

            // 取得Name或ID用到舊索引的控制項，一律換成新索引
            $(`input[name^="DetailList[${oldIndex}]"]`).each(function () {
                var oldName = $(this).attr('name');
                var newName = oldName.replace(oldIndex, newIndex);
                $(this).attr('name', newName);
            })

            $(`input[id^="DetailList_${oldIndex}_"]`).each(function () {
                var oldID = $(this).attr('id');
                var newID = oldID.replace(oldIndex, newIndex);
                $(this).attr('id', newID);
            })

            $(`select[name^="DetailList[${oldIndex}]"]`).each(function () {
                var oldName = $(this).attr('name');
                var newName = oldName.replace(oldIndex, newIndex);
                $(this).attr('name', newName);

                // 跟RowIndex有關的事件也要更新
                if (newName.endsWith('Scale')) {
                    $(this).attr('onchange', `ScaleChange(${newIndex}, this, 'Result', '4-5')`);
                }
            })

            $(this).attr('value', newIndex);
            newIndex++;
        });

    }


    function ReportNoChange(value) {
        $('#btnQuery').unbind('click').click();
    }

    function ScaleChange(rowIdx, thisObj, resultType, standard) {
        var target = $(`#DetailList_${rowIdx}__${resultType}`);

        if ($(thisObj).val() >= standard) {
            $(target).val('Pass');
            $(target).css('color','blue');
        }
        else {
            $(target).val('Fail');
            $(target).css('color', 'Red');
        }
        $(target).change();
    }
</script>