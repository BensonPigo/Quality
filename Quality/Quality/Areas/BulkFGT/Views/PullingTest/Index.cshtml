@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/ThirdParty/plugins/DataTables/datatables.min.css" rel="stylesheet" />
<link href="~/ThirdParty/SciCustom/css/TableStyle.css" rel="stylesheet" />
<script src="~/ThirdParty/plugins/DataTables/datatables.min.js"></script>
<link href="~/ThirdParty/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" />

@model DatabaseObject.ViewModel.BulkFGT.PullingTest_ViewModel
<style type="text/css">
    .inner-scroll, .content-scroll {
        height: calc( 100vh - 150px );
    }

    .row {
        --bs-gutter-x: 1.5rem;
        --bs-gutter-y: 0;
        display: flex;
        flex-wrap: wrap;
        width: 95vw;
        margin-top: calc(var(--bs-gutter-y) * -1);
        margin-right: calc(var(--bs-gutter-x)/ -2);
        margin-left: calc(var(--bs-gutter-x)/ -2);
    }

        .row > * {
            flex-shrink: 0;
            width: 100%;
            max-width: 100%;
            padding-left: calc(var(--bs-gutter-x)/ 2);
        }

    .rowHeader {
        font-size: 1.1vw;
        font-weight: bold;
    }

        .rowHeader input[type="text"] {
            width: 10vw;
        }

    .col-auto {
        width: auto;
    }

        .col-auto > p {
            padding: 0
        }

    .White {
        color: white !important;
    }

    .Black {
        color: black !important;
    }

    .IsEditMode {
        color: white !important;
        cursor: pointer;
    }

    .IsEditModeQuery {
        color: gray !important;
        cursor: no-drop;
    }

    #ButtonMode {
        width: 92vw;
    }

    .DataTable {
        width: 92vw;
        font-size: 1rem;
        font-weight: bold;
        border: solid 1px black;
        background-color: white;
    }

        .DataTable > tbody img {
            cursor: pointer;
        }

        .DataTable > tbody > tr:nth-of-type(odd) {
            background-color: #ffffff;
        }

        .DataTable > tbody > tr:nth-of-type(even) {
            background-color: #F0F2F2;
        }

        .DataTable > tbody > tr > td {
            border: solid 1px gray;
            padding: 1em;
            text-align: left;
            vertical-align: middle;
        }
</style>
@using (Html.BeginForm("Index", "PullingTest", new { }, FormMethod.Post))
{
<div class="main-content">
    <header class="page-header">
        <h3>
            <span>Pulling test for Snap/Button/Rivet</span>
        </h3>
        <div class="breadcrumb queryHeader" style="justify-content: flex-end;">
            @Html.DropDownListFor(o => o.Detail.Result, (List<SelectListItem>)ViewBag.ReportNo_Source, null, new { @class = "form-control", @style = "width:157px", @onchange = "onInspectionStageChange(this.value)" })
            <input id="btnNew" type="button" class="site-btn btn-blue" style="margin-left:1em;border:0;" name="New" value="New">
        </div>
    </header>
    <div class="main-area">
        <div class="content-scroll">
            <div class="inner-scroll">
                <div class="row rowHeader">
                    <div class="col-auto">
                        <p class="InfoTitle White">Brand</p>
                    </div>
                    <div class="col-auto">
                        <input id="BrandID" name="BrandID" type="text" value="@Model.BrandID" />
                        <input id="btnBrandSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" name="BrandSelectItem" value="..." />
                    </div>
                    <div class="col-auto"><p class="InfoTitle White">Season</p></div>
                    <div class="col-auto">
                        <input id="SeasonID" name="SeasonID" type="text" value="@Model.SeasonID" />
                        <input id="btnSeasonSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" name="SeasonSelectItem" value="..." />
                    </div>
                    <div class="col-auto"><p class="InfoTitle White">Style</p></div>
                    <div class="col-auto">
                        <input id="StyleID" name="StyleID" type="text" style="width: 15vw" value="@Model.StyleID" />
                        <input id="btnStyleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" name="StyleSelectItem" value="..." />
                    </div>
                    <div class="col-auto"><p class="InfoTitle White">Article</p></div>
                    <div class="col-auto">
                        <input id="Article" name="Article" type="text" value="@Model.Article" />
                        <input id="btnArticleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" name="ArticleSelectItem" value="..." />
                    </div>

                    <div class="col-auto">
                        <button id="btnQuery" type="submit" name="Action:Query" class="site-btn btn-gy font1rem Black" style="padding: 0.4em;">Query</button>
                    </div>
                </div>

                <div style="margin-top: 1em;">
                    <table id="ButtonMode">
                        <tbody>
                            <tr>
                                <td>
                                    <h4 id="Edit" style=" margin-right: 1em;">
                                        <img src="~/Image/Icon/Edit.png" width="30" />
                                        Edit
                                    </h4>
                                </td>
                                <td>
                                    <h4 id="Save" style=" margin-right: 1em;">
                                        <img src="~/Image/Icon/Save.png" width="30" />
                                        Save
                                    </h4>
                                </td>
                                <td>
                                    <h4 id="Undo" style=" margin-right: 1em;">
                                        <img src="~/Image/Icon/Undo.png" width="30" />
                                        Undo
                                    </h4>
                                </td>
                                <td>
                                    <h4 id="Delete" style=" margin-right: 1em;">
                                        <img src="~/Image/Icon/Delete.png" width="30" />
                                        Delete
                                    </h4>
                                </td>
                                <td>
                                    <h4 id="Picture" style=" margin-right: 1em;">
                                        <img src="~/Image/Icon/Camera.png" width="30" />
                                        Picture
                                    </h4>
                                </td>
                                <td style="width: 50%;">
                                </td>
                        </tbody>
                    </table>
                </div>

                <div style="margin-top: 1em;">
                    <table class="DataTable DetailTable">
                        <tbody>
                            <tr>
                                <td style="width: 10vw;"><h5>Report No.</h5></td>
                                <td style="width: 20vw;">
                                    @Html.TextBoxFor(o => o.Detail.ReportNo, "", new { @readonly = "readonly" })
                                </td>
                                <td style="width: 10vw;"><h5>SP#</h5></td>
                                <td style="width: 20vw;">
                                    @Html.TextBoxFor(o => o.Detail.POID, "")
                                </td>
                                <td style="width: 10vw;"><h5>Brand#</h5></td>
                                <td style="width: 20vw;">
                                    @Html.TextBoxFor(o => o.Detail.BrandID, "")
                                    <input id="btnDetailBrandSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" name="BrandSelectItem" value="..." />
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 10vw;"><h5>Season</h5></td>
                                <td style="width: 20vw;">
                                    @Html.TextBoxFor(o => o.Detail.SeasonID, "", new { @readonly = "readonly" })
                                    <input id="btnDetailSeasonSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" name="SeasonSelectItem" value="..." />
                                </td>
                                <td style="width: 10vw;"><h5>Brand</h5></td>
                                <td style="width: 20vw;">
                                    @Html.TextBoxFor(o => o.Detail.StyleID, "", new { @readonly = "readonly" })
                                    <input id="btnDetailStyleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" name="StyleSelectItem" value="..." />
                                </td>
                                <td><h5>Article</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.Detail.Article, "", new { @readonly = "readonly" })
                                    <input id="btnDetailArticleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" name="ArticleSelectItem" value="..." />
                                </td>
                            </tr>
                            <tr>
                                <td><h5>Size</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.Detail.SizeCode, "", new { @readonly = "readonly" })
                                    <input id="btnDetailSizeCodeSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" value="..." />
                                </td>
                                <td><h5>Remark</h5></td>
                                <td colspan="3">
                                    @Html.TextBoxFor(o => o.Detail.Remark, "", new { @readonly = "readonly" })
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 10vw;"><h5>Test Date</h5></td>
                                <td style="width: 20vw;">
                                    @Html.TextBoxFor(o => o.Detail.TestDate, "{0:yyyy/MM/dd}", new { @readonly = "readonly", @class = "date-picker" })
                                    <input id="btnDetailSeasonSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" name="SeasonSelectItem" value="..." />
                                </td>
                                <td style="width: 10vw;"><h5>Result</h5></td>
                                <td style="width: 20vw;">
                                    @Html.DropDownListFor(o => o.Detail.Result, Model.TestItem_Source, null, new { @class = "form-control", @style = "width:157px", @onchange = "onInspectionStageChange(this.value)" })
                                </td>
                                <td><h5>Inspector</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.Detail.Article, "", new { @readonly = "readonly" })
                                    <input id="btnDetailArticleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" name="ArticleSelectItem" value="..." />
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 10vw;"><h5>Test Item</h5></td>
                                <td style="width: 20vw;">
                                    @Html.DropDownListFor(o => o.Detail.TestItem, Model.TestItem_Source, null, new { @class = "form-control", @style = "width:157px", @onchange = "onInspectionStageChange(this.value)" })
                                    <input id="btnDetailSeasonSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" name="SeasonSelectItem" value="..." />
                                </td>
                                <td style="width: 10vw;"><h5>Newton</h5></td>
                                <td style="width: 20vw;">
                                    @Html.TextBoxFor(o => o.Detail.PullForceUnit, "", new { @readonly = "readonly", @type = "number", @step = "0.01" })
                                </td>
                                <td><h5>Sec</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.Detail.Time, "", new { @readonly = "readonly", @type = "number" })
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 10vw;"><h5>Fabric Ref#</h5></td>
                                <td style="width: 20vw;">
                                    @Html.TextBoxFor(o => o.Detail.FabricRefno, "", new { @readonly = "readonly", @type = "number" })
                                </td>
                                <td style="width: 10vw;"><h5>Accessory</h5></td>
                                <td style="width: 20vw;">
                                    @Html.TextBoxFor(o => o.Detail.AccRefno, "", new { @readonly = "readonly" })
                                </td>
                                <td><h5>Snap Operator</h5></td>
                                <td>
                                    @Html.TextBoxFor(o => o.Detail.SnapOperator, "", new { @readonly = "readonly" })
                                </td>
                            </tr>
                            <tr>
                                <td><h5>Last Edit Name</h5></td>
                                <td colspan="5">
                                    @Html.TextBoxFor(o => o.Detail.LastEditName, "", new { @readonly = "readonly" })
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    </div>
    }
    <script type="text/javascript">
    var msg;
        var EditMode;
        var EditType;
        $(function () {
            msg = new MessagerAlert();

            EditMode = false;
            IsEditModeChange();
            DetailDynamicBind();
        });
    
        function IsEditModeChange() {
            EditModeButtionBind();
            Clear();


        if (EditMode) {
            $(".queryHeader select").attr("disabled", "disabled");

            $(".rowHeader input[type='text']").attr("disabled", "disabled");
            $(".rowHeader input[type='button']").unbind('click').addClass("IsEditModeQuery");
            $('#btnNew').unbind('click').addClass("IsEditModeQuery");
            $('#btnQuery').addClass("IsEditModeQuery");
            $("#Edit, #Delete, #Picture").removeClass("IsEditMode");
            $('#Save, #Undo, #New').addClass("IsEditMode");
            $(".DetailTable input[type='text'], .DetailTable select, .DetailTable input[type='checkbox']").removeAttr("disabled");
            $(".DetailTable img").addClass('display-None');
            $('#btnQuery').on('click', function () {
                return false;
            });
        }
        else {
            $(".queryHeader select").removeAttr("disabled");
            $(".rowHeader input[type='text']").removeAttr("disabled");
            $(".rowHeader input[type='button']").removeClass("IsEditModeQuery");
            $('#btnNew').removeClass("IsEditModeQuery");
            $('#btnQuery').unbind('click').removeClass("IsEditModeQuery");
            $("#Edit, #Delete, #Picture").addClass("IsEditMode");
            $('#Save, #Undo, #New').unbind('click').removeClass("IsEditMode");
            $(".DetailTable input[type='text'], .DetailTable select").attr("disabled", "disabled");
            $(".DetailTable img").removeClass('display-None');
            QueryButtonBind();


            $('#btnQuery').on('click', function () {
                if ($('#BrandID').val() == '' || $('#SeasonID').val() == '' || $('#StyleID').val() == '' || $('#Article').val() == '') {
                    msg.WithError("Style, Brand, Season and Article cannot be empty");
                    return false;
                }
            });
        }
        }

        function Clear() {
            if (EditType == "New") {
                $('.queryHeader select').empty();
                $(".queryHeader select").val('');
                $(".rowHeader input[type='text']").val('');

                $(".DetailTable select").empty();
                $(".DetailTable input[type='text'], .DetailTable select").val('');
            }
        }

    function EditModeButtionBind() {
        $('#Edit').on('click', function () {
            if ($('#Detail.StyleID').val() != "" && $('#Detail.SeasonID').val() != "" && $('#Detail.BrandID').val() != "") {
                EditMode = true;
                EditType = "";
                IsEditModeChange();
            }
        });

        $('#btnNew').on('click', function () {
            EditMode = true;
            EditType = "New";
            IsEditModeChange("New");
        });

        $('#Save').on('click', function () {
            var detail = [];
            var ErrMsg = "";

            $(this).children().find("select").each(function (index, value) {
                switch (index) {
                    case 0:
                        SizeCode = $(this).children("option:selected").val();
                        break;
                    case 1:
                        MtlTypeID = $(this).children("option:selected").val();
                        break;
                }
            })

            if ($('#Detail.BrandID').val() == '' || $('#Detail.SeasonID').val() == '' || $('#Detail.StyleID').val() == '' || $('#Detail.Article').val() == '') {
                ErrMsg += "Style, Brand, Season and Article cannot be empty";
                return false;
            }

            //檢查TestDate, {PullForceUnit}, Sec, Fabric Ref#, Accessory Ref# 不可為空
            if ($('#Detail.TestDate').val() == '' || $('#Detail.PullForceUnit').val() == '' || $('#Detail.Time').val() == ''
                || $('#Detail.Article').val() == '') {
                ErrMsg += "TestDate, Newton, Sec, Fabric Ref# and Accessory Ref# cannot be empty";
                return;
            }

            if (MtlTypeID == "") {
                ErrMsg += "Material Type cannot be empty";
                return;
            }

            detail.push({
                ID: parseInt(id),
                No: parseInt(no),
                OrderID: OrderID,
                inspdate: inspdate,
                inspector: inspector,
                Remark: Remark,
                NonSeamBreakageTest: NonSeamBreakageTest,
                SizeCode: SizeCode,
                MtlTypeID: MtlTypeID,
            });

            if (ErrMsg != "") {
                msg.WithError(ErrMsg);
                return;
            }

            if (detail.length > 0) {
                SaveData(detail);
            }
            else {
                msg.WithError("Save Fail");
                return;
            }
        });

        $('#Undo').on('click', function () {
            EditMode = false;
            IsEditModeChange();            
            if (EditType != "New") {
                $('#btnQuery').click();
            }
            
            EditType = "";
        });

        $('#New').on('click', function () {
            AddDetailRow($('#garmentTest_FirstOrderID').val(), $('#garmentTest_Article').val());
        });
        }

    function DetailDynamicBind() {
        $('.detailEdit').unbind('click').on('click', function () {
            if ($(this).prop('src').indexOf("Save.png") > -1) {
                var tr = $(this).parent().parent();
                tr.find("input[type='text']").removeAttr("disabled");
                tr.find("input[type='checkbox']").removeAttr("disabled");
                tr.find("select").removeAttr("disabled");

                var detail = [];
                var fcol = tr.children().find('a');
                var id = fcol.attr("idx");
                var no = fcol.attr("idv");

                var NonSeamBreakageTest = tr.children().find("input[type='checkbox']").prop("checked");
                var OrderID, inspdate, inspector, Remark;
                var SizeCode, MtlTypeID;

                tr.children().find("input[type='text']").each(function (index, value) {
                    switch (index) {
                        case 0:
                            OrderID = $(this).val();
                            break;
                        case 1:
                            inspdate = $(this).val();
                            break;
                        case 2:
                            inspector = $(this).val();
                            break;
                        case 3:
                            Remark = $(this).val();
                            break;
                    }
                })

                if (OrderID == "") {
                    msg.WithError("SP# cannot be empty");
                    return;
                }

                if (MtlTypeID == "") {
                    msg.WithError("Material Type cannot be empty");
                    return;
                }

                tr.children().find("select").each(function (index, value) {
                    switch (index) {
                        case 0:
                            SizeCode = $(this).children("option:selected").val();
                            break;
                        case 1:
                            MtlTypeID = $(this).children("option:selected").val();
                            break;
                    }
                })

                detail.push({
                    ID: parseInt(id),
                    No: parseInt(no),
                    OrderID: OrderID,
                    inspdate: inspdate,
                    inspector: inspector,
                    Remark: Remark,
                    NonSeamBreakageTest: NonSeamBreakageTest,
                    SizeCode: SizeCode,
                    MtlTypeID: MtlTypeID,
                });

                if (detail.length > 0) {
                    SaveData(detail);
                }
                else {
                    msg.WithError("Save Fail");
                    return;
                }
            }
            else {
                $(".rowHeader input[type='text']").attr("disabled", "disabled");
                $(".rowHeader input[type='button'], #btnQuery").addClass("IsEditModeQuery");
                $("#Edit, #Save, #Undo").removeClass("IsEditMode");
                $(".DetailTable img").addClass('display-None');
                $(this).removeClass('display-None');
                $('#btnQuery').on('click', function () {
                    return false;
                });

                $(this).prop("src", "/Image/Icon/Save.png");

                var tr = $(this).parent().parent();
                tr.find("input[type='text']").removeAttr("disabled");
                tr.find("input[type='checkbox']").removeAttr("disabled");
                tr.find("select").removeAttr("disabled");
            }
        });

        $('.detailDelete').unbind('click').on('click', function () {
            msg.WithConfirm('Do you want to delete the data ?',
                function ()
                {
                    $.ajax({
                        url: "@Url.Action("DeleteDetail", "GarmentTest", new { Area = "BulkFGT" })",
                        type: 'POST',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({ details: detail }),
                        async: false,
                        success: function (data) {
                            if (data.SaveResult) {
                                $(this).parents().parents().remove();
                                msg.WithSuccess("Delete Success");
                            }
                            else {
                                msg.WithError(data.ErrMsg);
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            console.log(xhr.responseText);
                        }
                    });
                }, null);
        });

        $('.SendMail').unbind('click').on('click'), function () {
            var tr = $(this).parents().parents();
            var fcol = tr.children().find('a');
            var id = fcol.attr("idx");
            var no = fcol.attr("idv");
            $.ajax({
                url: "@Url.Action("SendMail", "GarmentTest", new { Area = "BulkFGT" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ ID: id, No: no }),
                async: true,
                success: function (data) {
                    if (data.SaveResult) {
                        tr.find("td[class='Sender']").html(data.Sender);
                        tr.find("td[class='SendDate']").html(data.SendDate);
                    }
                    else {
                        msg.WithError(data.ErrMsg);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        };

        $('.ReceiveMail').unbind('click').on('click'), function () {
            var tr = $(this).parents().parents();
            var fcol = tr.children().find('a');
            var id = fcol.attr("idx");
            var no = fcol.attr("idv");
            $.ajax({
                url: "@Url.Action("ReceiveMail", "GarmentTest", new { Area = "BulkFGT" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ ID: id, No: no }),
                async: true,
                success: function (data) {
                    if (data.SaveResult) {
                        tr.find("td[class='Receiver']").html(data.Sender);
                        tr.find("td[class='ReceiveDate']").html(data.SendDate);
                    }
                    else {
                        msg.WithError(data.ErrMsg);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        };

        $('.Detail_OrderID').unbind('blur').on('blur', function () {
            var SizeCode = $(this).parent().siblings().find("select[class='Detail_SizeCode']");
            var OrderID = $(this).val();
            var Brand = $('#Brand').val();
            var Season = $('#Season').val();
            var Style = $('#Style').val();
            var Article = $('#Article').val();
            $.ajax({
                url: "@Url.Action("ChangeSizeCode", "GarmentTest", new { Area = "BulkFGT" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ OrderID: OrderID, Brand: Brand, Season: Season, Style: Style, Article: Article }),
                async: false,
                success: function (data) {
                    if (data.length == 0) {
                        $(this).val('');
                        msg.WithError("SP not Found");
                    }
                    else {
                        SizeCode.html(data);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });

        });
    }

    function SaveData(detail) {       
    }

    function AddDetailRow(OrderID, Article) {
        var ID = parseInt($('.DetailTable > tbody > tr:last-child > td > a').attr('idx'));
        var lastNO = parseInt($('.DetailTable > tbody > tr:last-child > td > a').attr('idv')) + 1;
        $.ajax({
            url: "@Url.Action("AddDetailRow", "GarmentTest", new { Area = "BulkFGT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ ID: ID, lastNO: lastNO, OrderID: OrderID, Article: Article}),
            async: false,
            success: function (data) {
                $('.DetailTable > tbody').append(data);
                DetailDynamicBind();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function QueryButtonBind() {
        $('#btnBrandSelectItem').on('click', function () {
             window.open('@Url.Action("BrandList", "PublicWondow",new { Area=""})', 'Brand', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnSeasonSelectItem').on('click', function () {
            var para = "?BrandID=" + $('#BrandID').val();
            window.open('@Url.Action("SeasonList", "PublicWondow",new { Area=""})' + para, 'Season', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnStyleSelectItem').on('click', function () {
            var para = "?BrandID=" + $('#BrandID').val() + "&SeasonID=" + $('#SeasonID').val();
            window.open('@Url.Action("StyleList", "PublicWondow",new { Area=""})' + para, 'Style', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnArticleSelectItem').on('click', function () {
            if ($('#BrandID').val() == '' || $('#SeasonID').val() == '' || $('#StyleID').val() == '') {
                msg.WithError('Please input style, brand and season before choose article.');
                return;
            }

            var para = "?OrderID=&StyleUkey=0&BrandID=" + $('#BrandID').val() + "&SeasonID=" + $('#SeasonID').val() + "&StyleID=" + $('#StyleID').val();
            window.open('@Url.Action("ArticleList", "PublicWondow",new { Area=""})' + para, 'Article', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });
    }

    function DetailButtonBind() {
        $('#btnDetailBrandSelectItem').on('click', function () {
            window.open('@Url.Action("BrandList", "PublicWondow",new { Area=""})', 'BrandID', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnDetailSeasonSelectItem').on('click', function () {
            var para = "?BrandID=" + $('#Detail.BrandID').val();
            window.open('@Url.Action("SeasonList", "PublicWondow",new { Area=""})' + para, 'SeasonID', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnDetailStyleSelectItem').on('click', function () {
            var para = "?BrandID=" + $('#Detail.BrandID').val() + "&SeasonID=" + $('#Detail.SeasonID').val();
            window.open('@Url.Action("StyleList", "PublicWondow",new { Area=""})' + para, 'StyleID', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnDetailArticleSelectItem').on('click', function () {
            if ($('#Detail.BrandID').val() == '' || $('#Detail.SeasonID').val() == '' || $('#Detail.StyleID').val() == '') {
                msg.WithError('Please input style, brand and season before choose article.');
                return;
            }

            var para = "?OrderID=&StyleUkey=0&BrandID=" + $('#Detail.BrandID').val() + "&Detail.SeasonID=" + $('#SeasonID').val() + "&StyleID=" + $('#Detail.StyleID').val();
            window.open('@Url.Action("ArticleList", "PublicWondow",new { Area=""})' + para, 'Article', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });

        $('#btnDetailSizeCodeSelectItem').on('click', function () {
            if ($('#Detail.BrandID').val() == '' || $('#Detail.SeasonID').val() == '' || $('#Detail.StyleID').val() == '' || $('#Detail.ArticleID').val() == '') {
                msg.WithError('Please input style, brand and season, article before choose size.');
                return;
            }

            var para = "?OrderID=&StyleUkey=0&BrandID=" + $('#Detail.BrandID').val() + "&Detail.SeasonID=" + $('#SeasonID').val() + "&StyleID=" + $('#Detail.StyleID').val() + "&Article=" + $('#Detail.ArticleID').val();
            window.open('@Url.Action("SizeList", "PublicWondow",new { Area=""})' + para, 'SizeCode', config = 'toolbar=no,status=no,location=no,width=400,height=650');
        });
    }

    function GetBrandList(data) {
        $('#BrandID').val(data);
    }

    function GetSeasonList(data) {
        $('#SeasonID').val(data);
    }

    function GetStyleList(data) {
        $('#StyleID').val(data);
    }

    function GetArticleList(data) {
        $('#Article').val(data);
    }
    </script>
