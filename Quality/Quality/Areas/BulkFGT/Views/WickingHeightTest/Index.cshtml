@using DatabaseObject.ViewModel.BulkFGT

@model WickingHeightTest_ViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/ThirdParty/SciCustom/css/TableStyle.css" rel="stylesheet" />
<link href="~/ThirdParty/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" />

<style>
    .SearchDiv {
        width: 100%;
        /*height: 8vh;*/
        /*background-color: pink;*/
        flex-direction: row;
        flex-wrap: wrap;
        align-items: center;
        display: flex;
    }

    .colDiv {
        width: 4.3%;
        padding: 2px;
    }

    .colDiv2 {
        width: 13%;
        padding: 2px;
    }


    .searchTitle {
        color: white;
    }

    .row-name {
        color: gray;
        font-size: 1.2em;
        background-color: wheat;
    }

    .bodyDiv {
        width: 100%;
        overflow-x: scroll;
    }

    .buttonArea, .MainArea, .DetailDataArea {
        width: 100%;
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
    }

    .DetailDataArea {
        width: 180%;
    }

    .buttonAreaItem {
        width: 9%;
        padding: 2px;
    }

    .MainAreaItem100 {
        width: 99.6%;
        padding: 2px;
        height: 3rem;
        border: 1px solid;
        display: flex;
        align-items: center;
        justify-content: center;
    }


    .MainAreaItem {
        width: 16.6%;
        padding: 2px;
        height: 3rem;
        border: 1px solid;
        display: flex;
        align-items: center;
    }

    .DetailDataAreaItem1Rowspan {
        height: 9rem;
        width: 10%;
        padding: 2px;
        border: 1px solid;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
    }

    .DetailDataAreaItem1 {
        width: 10%;
        padding: 2px;
        height: 3rem;
        border: 1px solid;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
    }

    .DetailDataAreaItem2Rowspan {
        width: 20%;
        padding: 2px;
        height: 9rem;
        border: 1px solid;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
    }

    .DetailDataAreaItem3Rowspan {
        width: 30%;
        padding: 2px;
        height: 9rem;
        border: 1px solid;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
    }

    .DetailDataAreaItem33 {
        width: 33%;
        padding: 2px;
        height: 3rem;
        border: 1px solid;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
    }

    .DetailDataAreaItem5 {
        width: 50%;
        padding: 2px;
        height: 3rem;
        border: 1px solid;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
    }

    .DetailDataAreaItem1 input, .DetailDataAreaItem1 select, .DetailDataAreaItem1Rowspan input, .DetailDataAreaItem1Rowspan select {
        width: 100%;
    }

    .DetailDataAreaItem2 input, .DetailDataAreaItem2 select {
        width: 100%;
    }

    .colHead {
        background-color: wheat;
        color: darkslategray;
        font-size: 1rem;
        font-weight: bold;
        font-size: 1rem;
    }
    /*   .colHead label{
        font-weight:bold;
        font-size:1rem;
    }*/
    .MainAreaItemSpan3 {
        width: 37.5%;
        padding: 2px;
        height: 3rem;
        border: 1px solid;
        display: flex;
        align-items: center;
    }

    .MainAreaItemSpan7 {
        width: 87.5%;
        padding: 2px;
        height: 3rem;
        border: 1px solid;
        display: flex;
        align-items: center;
    }


    .odd {
        background-color: white;
    }

    .even {
        background-color: lightgray;
    }

    .actionBtn {
        width: 100%;
    }

    .colTitle {
        /*color: white;*/
    }

    .canUse {
        color: white !important;
        cursor: pointer;
    }


    .textArenDiv {
        height: 5rem;
    }

    textarea {
        padding: 2px;
        width: 100%;
        height: 4.5rem;
    }

    input:-webkit-autofill {
        -webkit-text-fill-color: black;
    }

    h4 {
        font-size: 1rem;
    }

    #dialogProcessMsg {
        display: none;
        position: absolute;
        top: 20%;
        left: 25%;
        height: 100%;
        background-color: lavender;
        border-radius: 5px;
        z-index: 1002;
        width: 50%;
        height: 35vh;
        /*overflow: scroll;*/
    }

    .black_overlay {
        display: none;
        position: absolute;
        top: 0%;
        left: 0%;
        width: 100%;
        height: 100%;
        background-color: black;
        z-index: 1001;
        opacity: .80;
    }

    input, select, a, div {
        font-size: 1rem;
    }

    .myTable thead tr th {
        height: 3rem;
        background-color: wheat;
        color: darkslategray;
        font-weight: bold;
        font-size: 1rem;
        padding: 2px;
        border: 2px solid;
        text-align: center;
        vertical-align: middle;
    }

    .myTable tbody tr td {
        height: 3rem;
        padding: 2px;
        border: 2px solid;
        background-color: white;
        text-align: center;
        vertical-align: middle;
    }

    .myTable .rowspan {
        height: 9rem;
    }
</style>

<div class="main-content">
    <header class="page-header">
        <h3>
            <i class=""></i><span>Wicking Height Test</span>
        </h3>
        <div class="breadcrumb">
            <div>Home</div>
            <div class="current">Wicking Height Test</div>
        </div>
    </header>



    @using (Html.BeginForm("Index", ViewContext.RouteData.GetRequiredString("Controller"), FormMethod.Post, new { }))
    {
        <div class="main-area">
            <div class="SearchDiv">
                <!-- #region Row 1-->
                <div class="colDiv">
                    <h4 class="searchTitle">Brand</h4>
                </div>
                <div class="colDiv2">
                    @Html.TextBoxFor(o => o.Request.BrandID, new { @value = Model.Request.BrandID, @style = "width:80%" })
                    <input id="btnBrandID" onclick="OpenWindow('BrandID')" type="button" class="site-btn btn-blue" style="margin:0;border: 2px solid transparent;" name="" value="..." />
                </div>
                <div class="colDiv">
                    <h4 class="searchTitle">Season</h4>
                </div>
                <div class="colDiv2">
                    @Html.TextBoxFor(o => o.Request.SeasonID, new { @value = Model.Request.SeasonID, @style = "width:80%" })
                    <input id="btnSeasonID" onclick="OpenWindow('SeasonID')" type="button" class="site-btn btn-blue" style="margin:0;border: 2px solid transparent;" name="" value="..." />
                </div>
                <div class="colDiv">
                    <h4 class="searchTitle">Style</h4>
                </div>
                <div class="colDiv2">
                    @Html.TextBoxFor(o => o.Request.StyleID, new { @value = Model.Request.StyleID, @style = "width:80%" })
                    <input id="btnStyleID" onclick="OpenWindow('StyleID')" type="button" class="site-btn btn-blue" style="margin:0;border: 2px solid transparent;" name="" value="..." />
                </div>
                <div class="colDiv">
                    <h4 class="searchTitle">Article</h4>
                </div>
                <div class="colDiv2">
                    @Html.TextBoxFor(o => o.Request.Article, new { @value = Model.Request.Article, @style = "width:80%" })
                    <input id="btnArticle" onclick="OpenWindow('Article')" type="button" class="site-btn btn-blue" style="margin:0;border: 2px solid transparent;" name="" value="..." />
                </div>
                <div class="colDiv">
                    <input type="submit" class="site-btn btn-blue actionBtn" name="action:Query" id="btnQuery" value="Query" />
                </div>
                <div class="colDiv">
                    <input type="button" class="site-btn btn-green actionBtn" name="action:New" id="btnNew" value="New" />
                </div>
                <div class="colDiv">
                </div>
                <div class="colDiv">
                    <h4 class="searchTitle">Report No.</h4>
                </div>
                <div class="colDiv2">
                    @Html.DropDownListFor(o => o.Request.ReportNo, Model.ReportNo_Source, new { @style = "width:100%", onchange = "ReportNoChange(this.value)" })
                </div>
                <!-- #endregion -->
            </div>

            <div class="content-scroll">
                <div class="inner-scroll" style="float:left">
                    <div class="buttonArea">
                        <div class="buttonAreaItem">

                            <h4 id="Edit" class="toolBarItem" style=" margin-right: 1em;">
                                <img src="~/Image/Icon/Edit.png" width="30" />
                                Edit
                            </h4>

                        </div>
                        <div class="buttonAreaItem">
                            <input id="SaveSubmit" type="submit" name="Action:EditSave" style="display:none" />
                            <h4 id="Save" class="toolBarItem" style=" margin-right: 1em;">
                                <img src="~/Image/Icon/Save.png" width="30" />
                                Save
                            </h4>

                        </div>
                        <div class="buttonAreaItem">
                            <h4 id="Undo" class="toolBarItem" style="margin-right: 1em;">
                                <img src="~/Image/Icon/Undo.png" width="30" />
                                Undo
                            </h4>

                        </div>
                        <div class="buttonAreaItem">
                            <input id="DeleteSubmit" type="submit" name="Action:Delete" style="display:none" />
                            <h4 id="Delete" class="toolBarItem" style=" margin-right: 1em;">
                                <img src="~/Image/Icon/Delete.png" width="30" />
                                Delete
                            </h4>

                        </div>
                        <div class="buttonAreaItem">
                            <h4 id="Encode" class="toolBarItem" style="margin-right: 1em;">
                                <img src="~/Image/Icon/Lock.png" width="30" />
                                Encode
                            </h4>
                        </div>
                        <div class="buttonAreaItem">
                            <h4 id="Amend" class="toolBarItem" style="margin-right: 1em;">
                                <img src="~/Image/Icon/Unlock.png" width="30" />
                                Amend
                            </h4>
                        </div>
                        <div class="buttonAreaItem">
                            <h4 id="Excel" class="toolBarItem" style=" margin-right: 1em;">
                                <img src="~/Image/Icon/XLS.png" width="30" />
                                Excel
                            </h4>
                        </div>
                        <div class="buttonAreaItem">
                            <h4 id="PDF" class="toolBarItem" style=" margin-right: 1em;">
                                <img src="~/Image/Icon/PDF.png" width="30" />
                                PDF(Excel)
                            </h4>
                        </div>
                        <div class="buttonAreaItem">
                            <h4 id="Picture" class="toolBarItem" style=" margin-right: 1em;">
                                <img src="~/Image/Icon/Picture.png" width="30" />
                                Picture
                            </h4>
                        </div>
                        <div class="buttonAreaItem">
                            <h4 id="SendtoMR" class="toolBarItem" style=" margin-right: 1em;">
                                <img src="~/Image/Icon/SendMail.png" width="30" />
                                Send to MR
                            </h4>
                        </div>
                        <div class="buttonAreaItem"></div>
                    </div>

                    @*表頭*@
                <div class="MainArea">
                    <!-- #region Row 1-->
                    <div class="MainAreaItem odd">
                        <h4 class="colTitle">Report No</h4>

                    </div>

                    <div class="MainAreaItem odd">
                        @Html.TextBoxFor(o => o.Main.ReportNo, new { @class = "" })

                        @Html.HiddenFor(o => o.Main.Status)
                        @Html.HiddenFor(o => o.Main.TestWarpPicture)
                        @Html.HiddenFor(o => o.Main.TestWeftPicture)
                    </div>
                    <div class="MainAreaItem odd">
                        <h4 class="colTitle">Receive Date</h4>
                    </div>
                    <div class="MainAreaItem odd">
                        @Html.HiddenFor(o => o.Main.SubmitDate)
                        @Html.TextBoxFor(o => o.Main.SubmitDateText, new { @class = "CanEdit" })
                    </div>
                    <div class="MainAreaItem odd">
                        <h4 class="colTitle">Report Date</h4>
                    </div>
                    <div class="MainAreaItem odd">
                        @Html.TextBoxFor(o => o.Main.ReportDate, "{0:yyyy/MM/dd}", new { @class = "date-picker CanEdit" })
                    </div>

                    <!-- #endregion -->
                    <!-- #region Row 2-->

                    <div class="MainAreaItem even">
                        <h4 class="colTitle">SP#</h4>
                    </div>
                    <div class="MainAreaItem even">
                        @Html.TextBoxFor(o => o.Main.OrderID, new { @class = "CanEdit even" })
                    </div>
                    <div class="MainAreaItem even">
                        <h4 class="colTitle">Brand</h4>
                    </div>
                    <div class="MainAreaItem even">
                        @Html.TextBoxFor(o => o.Main.BrandID, new { @class = "even" })
                    </div>
                    <div class="MainAreaItem even">
                        <h4 class="colTitle">Season</h4>
                    </div>
                    <div class="MainAreaItem even">
                        @Html.TextBoxFor(o => o.Main.SeasonID, new { @class = "even" })
                    </div>
                    <!-- #endregion -->
                    <!-- #region Row 3-->

                    <div class="MainAreaItem odd">
                        <h4 class="colTitle">Style</h4>
                    </div>
                    <div class="MainAreaItem odd">
                        @Html.TextBoxFor(o => o.Main.StyleID, new { @class = "" })
                    </div>

                    <div class="MainAreaItem odd">
                        <h4 class="colTitle">Article</h4>
                    </div>
                    <div class="MainAreaItem odd">
                        @Html.TextBoxFor(o => o.Main.Article, new { @class = "" })
                    </div>
                    <div class="MainAreaItem odd">
                        <h4 class="colTitle">Fabric Type</h4>
                    </div>
                    <div class="MainAreaItem odd">
                        @Html.TextBoxFor(o => o.Main.FabricType, new { @class = "" })
                    </div>

                    <!-- #endregion -->
                    <!-- #region Row 4-->
                    <div class="MainAreaItem even">
                        <h4 class="colTitle">SEQ</h4>
                    </div>
                    <div class="MainAreaItem even">
                        @Html.TextBoxFor(o => o.Main.Seq, new { @class = "even" })
                        @Html.HiddenFor(o => o.Main.Seq1, new { @class = "" })
                        @Html.HiddenFor(o => o.Main.Seq2, new { @class = "" })
                    </div>
                    <div class="MainAreaItem even">
                        <h4 class="colTitle">Fabric Ref#</h4>
                    </div>
                    <div class="MainAreaItem even">
                        @Html.TextBoxFor(o => o.Main.FabricRefNo, new { @class = "even", @onclick = "OpenWindow('FabricRefNo')", @placeholder = "Click" })
                    </div>
                    <div class="MainAreaItem even">
                        <h4 class="colTitle">Fabric Color</h4>
                    </div>
                    <div class="MainAreaItem even">
                        @Html.TextBoxFor(o => o.Main.FabricColor, new { @class = "even" })
                    </div>

                    <!-- #endregion -->
                    <!-- #region Row 5-->
                    <div class="MainAreaItem odd">
                        <h4 class="colTitle">Fabric Description</h4>
                    </div>
                    <div class="MainAreaItem odd">
                        @Html.TextBoxFor(o => o.Main.FabricDescription, new { @class = "odd CanEdit" })
                    </div>
                    <div class="MainAreaItem odd">
                        <h4 class="colTitle">Result</h4>
                    </div>
                    <div class="MainAreaItem odd">
                        @{ string mainResultColor = Model.Main.Result == "Pass" ? "blue" : "red";}
                        @Html.TextBoxFor(o => o.Main.Result, new { @class = "odd", @style = $@"color:{mainResultColor}" })
                    </div>
                    <div class="MainAreaItem odd">
                        <h4 class="colTitle">Last Upadate</h4>
                    </div>
                    <div class="MainAreaItem odd">
                        @Html.TextBoxFor(o => o.Main.LastUpadate, new { @class = "odd", @style = "width:100%" })
                    </div>
                    <!-- #endregion -->
                    <!-- #region Row 6-->
                    <div class="MainAreaItem even">
                        <h4 class="colTitle">Approver</h4>
                    </div>
                    <div class="MainAreaItem even">
                        @Html.TextBoxFor(modelItem => Model.Main.Approver, new { @style = "width:30%", @class = "inputApprover", @disabled = "disabled" })
                        @Html.TextBoxFor(modelItem => Model.Main.ApproverName, new { @style = "width:55%", @disabled = "disabled" })
                        <input id="btnApproverSelectItem" type="button" class="CanEdit site-btn btn-blue btnApproverSelectItem" style="margin:0;border:0;" value="..." />
                    </div>
                    <div class="MainAreaItem even">
                        <h4 class="colTitle">Preparer</h4>
                    </div>
                    <div class="MainAreaItem even">
                        @Html.TextBoxFor(modelItem => Model.Main.Preparer, new { @style = "width:30%", @class = "inputPreparer odd", @disabled = "disabled" })
                        @Html.TextBoxFor(modelItem => Model.Main.PreparerName, new { @style = "width:55%", @disabled = "disabled", @class = "odd" })
                        <input id="btnPreparerSelectItem" type="button" class="CanEdit site-btn btn-blue btnPreparerSelectItem" style="margin:0;border:0;" value="..." />

                    </div>
                    <div class="MainAreaItem even">
                        
                    </div>
                    <div class="MainAreaItem even">
                        
                    </div>

                    <!-- #endregion -->
                </div>

                    <br />
                    <div class="bodyDiv">
                        @if (Model.DetailList != null)
                        {
                            <table class="myTable">
                                <thead>
                                    <tr>
                                        <th>Evaluation Type</th>
                                        <th>Evaluation Item</th>
                                        <th>Warp</th>
                                        <th>Warp Time(Min)</th>
                                        <th>Warp Result</th>
                                        <th>Weft</th>
                                        <th>Weft Time(Min)</th>
                                        <th>Weft Result</th>
                                        <th>Remark</th>
                                        <th>Last Update</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.DetailList.Count; i++)
                                    {
                                        string rowName = $@"Row{i}";
                                        string resultColor = "blue";
                                        int rowspan = Model.DetaiItemlList.Where(x => x.EvaluationType == Model.DetailList[i].EvaluationType).Count();

                                        for (int j = 0; j < Model.DetaiItemlList.Where(x => x.EvaluationType == Model.DetailList[i].EvaluationType).Count(); j++)
                                        {
                                            <tr>
                                                @if (j == 0)
                                                {
                                                    <td class="rowspan" rowspan="@rowspan">
                                                        <input type="hidden" class="detailRowIdx" name="name" value="@i" />
                                                        @Html.HiddenFor(o => Model.DetailList[i].ReportNo, new { @class = "" })
                                                        @Html.HiddenFor(o => Model.DetailList[i].Ukey, new { @class = "" })
                                                        @Html.TextBoxFor(o => Model.DetailList[i].EvaluationType, new { @class = "" })
                                                    </td>
                                                }
                                                <td>
                                                    @Html.HiddenFor(o => Model.DetaiItemlList[i * 3 + j].ReportNo)
                                                    @Html.HiddenFor(o => Model.DetaiItemlList[i * 3 + j].WickingHeightTestDetailUkey)
                                                    @Html.HiddenFor(o => Model.DetaiItemlList[i * 3 + j].Ukey)
                                                    @Html.HiddenFor(o => Model.DetaiItemlList[i * 3 + j].EvaluationType)
                                                    @Html.TextBoxFor(o => Model.DetaiItemlList[i * 3 + j].EvaluationItem, new { @class = "" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(o => Model.DetaiItemlList[i * 3 + j].WarpValues, new { @idx = i, @class = "CanEdit", @type = "number", @step = "0.01", @min = "0", @onchange = "ValuesCheck(this)" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(o => Model.DetaiItemlList[i * 3 + j].WarpTime, new { @idx = i, @class = "CanEdit", @type = "number", @step = "1", @min = "0", @onchange = "ValuesCheck(this)" })
                                                </td>
                                                @if (j == 0)
                                                {
                                                    <td class="rowspan" rowspan="@rowspan">
                                                        @{ resultColor = Model.DetailList[i].WarpResult == "Fail" ? "red" : "blue";}
                                                        @Html.HiddenFor(o => Model.DetailList[i].WarpAverage)
                                                        @Html.TextBoxFor(o => Model.DetailList[i].WarpResult, new { @class = "", @style = $@"color:{resultColor}" })
                                                    </td>
                                                }
                                                <td>
                                                    @Html.TextBoxFor(o => Model.DetaiItemlList[i * 3 + j].WeftValues, new { @idx = i, @class = "CanEdit", @type = "number", @step = "0.01", @min = "0", @onchange = "ValuesCheck(this)" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(o => Model.DetaiItemlList[i * 3 + j].WeftTime, new { @idx = i, @class = "CanEdit", @type = "number", @step = "1", @min = "0", @onchange = "ValuesCheck(this)" })
                                                </td>

                                                @if (j == 0)
                                                {
                                                    <td class="rowspan" rowspan="@rowspan">
                                                        @{ resultColor = Model.DetailList[i].WeftResult == "Fail" ? "red" : "blue";}
                                                        @Html.HiddenFor(o => Model.DetailList[i].WeftAverage)
                                                        @Html.TextBoxFor(o => Model.DetailList[i].WeftResult, new { @class = "", @style = $@"color:{resultColor}" })
                                                    </td>
                                                    <td class="rowspan" rowspan="@rowspan">
                                                        @Html.TextBoxFor(o => Model.DetailList[i].Remark, new { @class = "CanEdit" })
                                                    </td>
                                                }
                                                <td>
                                                    @Html.TextBoxFor(o => Model.DetaiItemlList[i * 3 + j].LastUpadate, new { @class = "" })
                                                </td>
                                            </tr>
                                        }

                                    }
                                </tbody>
                            </table>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>


<script type="text/javascript">

    var msg = new MessagerAlert();
    var EditType = "@Model.Main.EditType";
    var EditMode;

    $(function () {
        EditMode = false;

        IsEditModeChange();
        if (EditType == 'New') {
            EditMode = true;
            $("#SaveSubmit").attr("name", "Action:NewSave");
            IsEditModeChange();
        }
        QueryBind();

        @Html.Raw(Model.ErrorMessage)
    });

    function IsEditModeChange() {

        // 控制項重置
        ClickEventBind();
        BlurEventBind();
        $('.toolBarItem').removeClass("canUse");
        //$("#Main_SubmitDateText").removeClass('date-picker');

        if ($('#Main_ReportNo').val() == '' && EditType != 'New') {

            // 可編輯欄位關閉
            $('.MainArea select ,.myTable select').attr("disabled", true);
            $('.MainArea input ,.MainArea textarea ,.myTable input').attr("readonly", "readonly");
        }
        else {
            //根據模式區分
            if (EditMode) {
                // 可編輯欄位開啟
                $('.CanEdit').removeAttr("disabled");
                $('.CanEdit').removeAttr("readonly");

                // 編輯模式可用功能開啟
                $('#Save, #Undo ,#Picture ,#NewItem').addClass("canUse");
                $(".detailDelete").show();
                $("#Main_SubmitDateText").addClass('date-picker');
                $('.date-picker').datepicker({ changeYear: true, changeMonth: true, currentText: "Now" });
                $('.inputApprover,.inputPreparer').removeAttr("disabled");
                DetailButtonBind();
            }
            else {
                // 可編輯欄位關閉
                $('.MainArea select ,.myTable select').attr("disabled", true);
                $('.MainArea input ,.MainArea textarea ,.myTable input').attr("readonly", "readonly");
                $(".detailDelete").hide();
                $(".inputApprover,.inputPreparer").attr("disabled", "disabled");

                // 未Confirmed可用功能開啟
                if ($("#Main_Status").val() == 'New') {
                    $('#Encode').addClass("canUse");
                    $('#Edit , #Delete ,#Excel ,#PDF ,#SendtoMR ,#Picture ,#Exit').addClass("canUse");
                }
                else {
                    // Confirmed後的可用功能開啟
                    $('#Amend').addClass("canUse");
                    $('#Excel ,#PDF ,#SendtoMR ,#Picture ,#Exit').addClass("canUse");
                }
            }

        }

        // 移除不可用功能的事件
        $('.toolBarItem:not(.canUse)').unbind('click');
    }
        function DetailButtonBind()
    {
        $('.inputPreparer').unbind('blur').on('blur', function () {
            var targetID = $(this).closest('tr').attr('idx');

            if ($(this).val() == "") {
                $("#Main_Preparer").val('');
                $("#Main_PreparerName").val('');
                return;
            }

            $.ajax({
                url: "@Url.Action("Pass1List", "PublicWindow",new { Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ ID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#Main_Preparer").val('');
                        $("#Main_PreparerName").val('');
                        msg.WithError('Approver Not Found');
                    }
                    else {
                        $("#Main_Preparer").val(data[0].ID);
                        $("#Main_PreparerName").val(data[0].Name);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $('.btnPreparerSelectItem').unbind('click').on('click', function () {
            var targetID ='Main_Preparer';
            var para = "?TargetID=" + targetID;
            window.open('@Url.Action("Pass1List", "PublicWindow",new{Area=""})' + para, 'Roll', config = 'toolbar=no,status=no,location=no,width=950,height=650');
        });
        $('.inputApprover').unbind('blur').on('blur', function () {
            var targetID = $(this).closest('tr').attr('idx');

            if ($(this).val() == "") {
                $("#Main_Approver").val('');
                $("#Main_ApproverName").val('');
                return;
            }

            $.ajax({
                url: "@Url.Action("Pass1List", "PublicWindow",new { Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ ID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#Main_Approver").val('');
                        $("#Main_ApproverName").val('');
                        msg.WithError('Approver Not Found');
                    }
                    else {
                        $("#Main_Approver").val(data[0].ID);
                        $("#Main_ApproverName").val(data[0].Name);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $('.btnApproverSelectItem').unbind('click').on('click', function () {
            var targetID ='Main_Approver';
            var para = "?TargetID=" + targetID;
            window.open('@Url.Action("Pass1List", "PublicWindow",new{Area=""})' + para, 'Roll', config = 'toolbar=no,status=no,location=no,width=950,height=650');
        });

    }
    function GetPass1(data, targetID)
    {
        $(`#${targetID}`).val(data.ID);
        $(`#${targetID}Name`).val(data.Name);
    }
    function QueryBind() {

        $('#btnQuery').on('click', function () {
            if ($('#Request_BrandID').val() == '' || $('#Request_SeasonID').val() == '' || $('#Request_StyleID').val() == '' || $('#Request_Article').val() == '') {
                msg.WithError("Brand, Season ,Style and Article cannot be empty");
                return false;
            }
        });

        $("#Request_BrandID").blur(function () {
            $.ajax({
                url: "@Url.Action("BrandList", "PublicWindow", new { Area = "" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#Request_BrandID").val('');
                        msg.WithError('Brand Not Found');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $("#Request_SeasonID").blur(function () {
            var BrandID = $('#Request_BrandID').val();
            $.ajax({
                url: "@Url.Action("SeasonList", "PublicWindow", new { Area = "" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: BrandID, SeasonID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#Request_SeasonID").val('');
                        msg.WithError('Season Not Found');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $("#Request_StyleID").blur(function () {
            var BrandID = $('#Request_BrandID').val();
            var SeasonID = $('#Request_SeasonID').val();
            $.ajax({
                url: "@Url.Action("StyleList", "PublicWindow", new { Area = "" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: BrandID, SeasonID: SeasonID, StyleID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#Request_StyleID").val('');
                        msg.WithError('Style Not Found');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $("#Request_Article").blur(function () {
            var BrandID = $('#Request_BrandID').val();
            var SeasonID = $('#Request_SeasonID').val();
            var StyleID = $('#Request_StyleID').val();
            $.ajax({
                url: "@Url.Action("ArticleList", "PublicWindow", new { Area = "" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: BrandID, SeasonID: SeasonID, StyleID: StyleID, Article: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#Request_Article").val('');
                        msg.WithError('Article Not Found');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });
    }

    function OpenWindow(WindowType) {
        if (WindowType == "BrandID") {
            window.open('@Url.Action("BrandList", "PublicWindow", new { Area = "" })', WindowType, config = 'toolbar=no,status=no,location=no,width=400,height=650');
        }
        if (WindowType == "SeasonID") {

            if ($('#Request_BrandID').val() == '' ) {
                msg.WithError('Please input brand  first.');
                return;
            }
            var para = "?BrandID=" + $('#Request_BrandID').val();
            window.open('@Url.Action("SeasonList", "PublicWindow", new { Area = "" })' + para, WindowType, config = 'toolbar=no,status=no,location=no,width=400,height=650');
        }
        if (WindowType == "StyleID") {

            if ($('#Request_BrandID').val() == '' || $('#Request_SeasonID').val() == '') {
                msg.WithError('Please input brand and season first.');
                return;
            }
            var para = "?BrandID=" + $('#Request_BrandID').val() + "&SeasonID=" + $('#Request_SeasonID').val();
            window.open('@Url.Action("StyleList", "PublicWindow", new { Area = "" })' + para, WindowType, config = 'toolbar=no,status=no,location=no,width=400,height=650');
        }
        if (WindowType == "Article") {

            if ($('#Request_BrandID').val() == '' || $('#Request_SeasonID').val() == '' || $('#Request_StyleID').val() == '') {
                msg.WithError('Please input brand season ,and Style first.');
                return;
            }
            var para = "?TargetID=Request_Article&OrderID=&StyleUkey=0&BrandID=" + $('#Request_BrandID').val() + "&SeasonID=" + $('#Request_SeasonID').val() + "&StyleID=" + $('#Request_StyleID').val();
            window.open('@Url.Action("ArticleList", "PublicWindow", new { Area = "" })' + para, WindowType, config = 'toolbar=no,status=no,location=no,width=400,height=650');
        }
        if (WindowType == "FabricRefNo" && EditMode) {

            if ($('#Main_OrderID').val() == '') {
                msg.WithError('Please input SP# first.');
                return;
            }
            var para = "?TargetID=Main_FabricRefNo&OrderID=" + $('#Main_OrderID').val();
            window.open('@Url.Action("FabricRefNoList", "PublicWindow", new { Area = "" })' + para, WindowType, config = 'toolbar=no,status=no,location=no,width=800,height=750');
        }
    }

    function GetBrandList(BrandID) {
        $("#Request_BrandID").val(BrandID);
        // 在這邊取得開窗選擇的Brand，進行後續動作
    }
    function GetSeasonList(SeasonID) {
        $("#Request_SeasonID").val(SeasonID);
        // 在這邊取得開窗選擇的Brand，進行後續動作
    }
    function GetStyleList(StyleID) {
        $("#Request_StyleID").val(StyleID);
        // 在這邊取得開窗選擇的Brand，進行後續動作
    }
    function GetArticleList(Article) {
        $("#Request_Article").val(Article);
        // 在這邊取得開窗選擇的Brand，進行後續動作
    }
    function GetFabricRefNoList(FabricRefNoData) {
        $("#Main_Seq").val(FabricRefNoData.Seq);
        $("#Main_Seq1").val(FabricRefNoData.Seq1);
        $("#Main_Seq2").val(FabricRefNoData.Seq2);
        $("#Main_FabricRefNo").val(FabricRefNoData.Refno);
        $("#Main_FabricColor").val(FabricRefNoData.Color);
    }

    function GetPicture(data) {
        $('#Main_TestWarpPicture').val(data.BeforePicture.replace("data:image/png;base64,", ""));
        $('#Main_TestWeftPicture').val(data.AfterPicture.replace("data:image/png;base64,", ""));
    }

    function ClickEventBind() {

        $('.toolBarItem ,detailDelete').unbind('click');

        $('#btnNew').on('click', function () {
            window.location = '@Url.Action("New")';
        });

        $('#Edit').on('click', function () {
            EditMode = true;
            IsEditModeChange();
        });
        $('#Save').on('click', function () {
            if (EditMode == false) {
                return;
            }

            if ($('#Main_OrderID').val() == '' || $('#Main_BrandID').val() == '' || $('#Main_SeasonID').val() == '' || $('#Main_StyleID').val() == '' || $('#Main_Article').val() == '') {
                msg.WithError("SP#, Brand, Season ,Style and Article cannot be empty");
                return false;
            }

            $("#SaveSubmit").click();

        });
        $('#Undo').on('click', function () {
            if (EditType == 'New') {
                window.location.href="@Url.Action("Index")";
            }
            if ($("#Main_ReportNo").val() != '') {
                // 重新Query 一次Detail
                window.location.reload();
            }
            else {
                EditMode = false;
                EditType = '';
                IsEditModeChange();
            }
        });
        $('#Delete').on('click', function (e) {
            if (EditMode == true) {
                return;
            }

            if (EditMode == false && $('#Main_ReportNo').val() != null && $('#Main_ReportNo').val() != "" && $('#Main_ReportNo').val() != "0") {
                e.preventDefault();
                msg.WithConfirm('Do you want to delete the data ?',
                    function () {
                        $("#DeleteSubmit").click();
                    }, null);
            }
        });
        $('#Picture').on('click', function () {
            var para = "?Title=" + $('.page-header span').html() + "&EditMode=" + EditMode;
            para += "&" + "Table=WickingHeightTest";
            para += "&" + "TargetBeforeColumn=Main_TestWarpPicture";
            para += "&" + "TargetAfterColumn=Main_TestWeftPicture";
            para += "&" + "BeforeColumn=TestWarpPicture";
            para += "&" + "AfterColumn=TestWeftPicture";
            para += "&" + "TargetBeforeHeader=WARP";
            para += "&" + "TargetAfterHeader=WEFT";
            para += "&" + "PKey_1=ReportNo";
            para += "&" + "PKey_1_Val=" + $('#Main_ReportNo').val();
            window.open('@Url.Action("PictureList", "PublicWindow",new { Area=""})' + para, 'Picture List', config = 'toolbar=no,status=no,location=no,width=1024,height=750');
        });

        $('#SendtoMR').on('click', function () {

            if ($("#Main_ReportNo").val() == '') {
                return false;
            }
            var para = '?Subject=@Model.Main.MailSubject';
            window.open('@Url.Action("SendMailer", "SendMailAttachfiles", new { Area=""})' + para, 'SendMail', config = 'toolbar=no,status=no,location=no,width=800,height=400');
        });

        $("#Excel").on("click", function () {

            msg.WithInfoTimer("Report Generating...");

            $.ajax({
                url: "@Url.Action("ToExcel")",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ ReportNo: $('#Main_ReportNo').val()}),
                async: true,
                success: function (data) {
                    if (data.Result) {
                        window.location.href = data.reportPath;
                    }
                    else {
                        msg.WithError(data.ErrorMessage);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                    msg.WithError("Error generating report.");
                }
            });
        });

        $("#PDF").on("click", function () {

            msg.WithInfoTimer("Report Generating...");

            $.ajax({
                url: "@Url.Action("ToPDF")",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ ReportNo: $('#Main_ReportNo').val()}),
                async: true,
                success: function (data) {
                    if (data.Result) {
                        window.location.href = data.reportPath;
                    }
                    else {
                        msg.WithError(data.ErrorMessage);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                    msg.WithError("Error generating report.");
                }
            });
        });

        if ($("#Main_Status").val() == "New") {

            $('#Encode').on('click', function () {

                $.ajax({
                    url: "@Url.Action("Encode")",
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ ReportNo: $('#Main_ReportNo').val(), Result: $("#Main_Result").val() }),
                    async: false,
                    success: function (data) {
                        if (data.Result) {
                            if (data.Action == "FailMail()") {
                                FailMail();
                            }
                            else {
                                msg.WithSuccesCheck("Success", function () {
                                    $("#btnQuery").click();
                                });
                            }
                        }
                        else {
                            msg.WithError(data.ErrMsg);
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.responseText);
                    }
                });
            });
        }
        if ($("#Main_Status").val() != "New") {

            $('#Amend').on('click', function () {

                $.ajax({
                    url: "@Url.Action("Amend")",
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ ReportNo: $('#Main_ReportNo').val(), Result: $("#Main_Result").val() }),
                    async: false,
                    success: function (data) {
                        if (data.Result) {
                            msg.WithSuccesCheck("Success", function () {
                                $("#btnQuery").click();
                            });
                        }
                        else {
                            msg.WithError(data.ErrMsg);
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.responseText);
                    }
                });
            });
        }

        $('.detailDelete').on('click', function () {
            if (EditMode == false) {
                return;
            }
            var t = $(this);

            msg.WithConfirm('Do you want to delete the data ?',
                function () {
                    let targetRow = t.parent('div').attr('class').split(' ').filter(o => o.includes('Row'))[0];

                    $(`.${targetRow}`).remove();

                    reBuildIndex();
                    msg.WithSuccess("Delete Success");
                }, null);
        });
    }

    function BlurEventBind() {

        $('input ,select').unbind('blur').unbind('change');

        $("#Main_OrderID").on("change", function () {
            if (EditMode == false) {
                return;
            }

            if ($(this).val() == '') {
                $("#Main_OrderID").val('');
                $("#Main_BrandID").val('');
                $("#Main_SeasonID").val('');
                $("#Main_StyleID").val('');
                $("#Main_Article").val('');
                $("#Main_FabricType").val('');
                return;
            }

            let orderID = $(this).val();
            $.ajax({
                url: "@Url.Action("OrderIDCheck")",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ orderID: orderID }),
                async: true,
                success: function (data) {
                    if (data.Result == false || data.ErrMsg != "") {

                        $("#Main_OrderID").val('');
                        $("#Main_BrandID").val('');
                        $("#Main_SeasonID").val('');
                        $("#Main_StyleID").val('');
                        $("#Main_Article").val('');
                        $("#Main_FabricType").val('');

                        msg.WithError(data.ErrMsg);
                    }
                    else {
                        // 塞入Article下拉選單
                        $("#Main_BrandID").val(data.Main.BrandID);
                        $("#Main_SeasonID").val(data.Main.SeasonID);
                        $("#Main_StyleID").val(data.Main.StyleID);
                        $("#Main_Article").val(data.Main.Article);
                        $("#Main_FabricType").val(data.Main.FabricType);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });

        });

        $("#Main_SubmitDateText").on("change", function () {
            $("#Main_SubmitDate").val($("#Main_SubmitDateText").val());
        });
    }

    function ReportNoChange(value) {
        $('#btnQuery').unbind('click').click();
    }

    function ValuesCheck(sel) {
        if ($('#Main_OrderID').val() == '') {
            msg.WithError('Please input SP# first.');
            sel.value = null;
            return;
        }

        const type = $('#Main_FabricType').val();
        const elem = document.getElementById(sel.id);
        const row = elem.getAttribute('idx');
        let testType;

        let values0, values1, values2;
        if (sel.id.match("Warp")) {
            testType = "Warp";
        }
        else if (sel.id.match("Weft")) {
            testType = "Weft";
        }

        if (row == 0) {
            values0 = $('#DetaiItemlList_0__' + testType + 'Values').val();
            values1 = $('#DetaiItemlList_1__' + testType + 'Values').val();
            values2 = $('#DetaiItemlList_2__' + testType + 'Values').val();
        }
        else if (row == 1) {
            values0 = $('#DetaiItemlList_3__' + testType + 'Values').val();
            values1 = $('#DetaiItemlList_4__' + testType + 'Values').val();
            values2 = $('#DetaiItemlList_5__' + testType + 'Values').val();
        }

        let avgVal = 0;
        let resultVal = "Fail";
        let color = "red";
        if (values0 != undefined && values1 != undefined && values2 != undefined &&
            parseInt(values0) > 0 && parseInt(values1) > 0 && parseInt(values2) > 0) {
            avgVal = (parseInt(values0) + parseInt(values1) + parseInt(values2)) * 1.0 / 3;
            if (type == "WOVEN" && avgVal >= 90) {
                resultVal = "Pass";
                color = "blue";
            }
            else if (type == "KNIT" && avgVal >= 100) {
                resultVal = "Pass";
                color = "blue";
            }

            $('#DetailList_' + row + '__' + testType + 'Average').val(avgVal);
            $('#DetailList_' + row + '__' + testType + 'Result').val(resultVal).css({ color: color });
        }
    }

    function FailMail() {
        var para = "?Title=" + $('.page-header span').html() + "&FactoryID=@ViewBag.FactoryID&Type=BulkFGT";
        window.open('@Url.Action("TestFailMailList", "PublicWindow",new { Area=""})' + para, 'Mail List', config = 'toolbar=no,status=no,location=no,width=650,height=750');
    }

    function GetTestFailMailList(data) {
        var to = "";
        var cc = "";
        $.each(data, function (index, value) {
            to += value.To + ';';
            cc += value.CC + ';';
        });

        $.ajax({
            url: "@Url.Action("SendMail")",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ ReportNo: '@Model.Main.ReportNo', TO: to, CC: cc }),
            async: false,
            success: function (data) {
                if (data.result) {
                    msg.WithSuccesCheck("Success", function () {
                        $("#btnQuery").click();
                    });
                }
                else {
                    msg.WithWarningCheck(data.resultMsg, function () {
                        location.reload();
                    });
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                // console.log(xhr.responseText);
                msg.WithWarningCheck(xhr.responseText, function () {
                    location.reload();
                });
            }
        });
    }

    function GetSendMailer(data) {
        var to = data.To;
        var cc = data.CC;
        var subject = data.Subject;
        var body = data.Body;
        var rawFiles = data.RawFiles;

        if (to != "") {
            let formData = new FormData();
            formData.append('ReportNo', '@Model.Main.ReportNo');
            formData.append('To', to);
            formData.append('CC', cc);
            formData.append('Subject', subject);
            formData.append('Body', body);

            $.each(rawFiles, function () {
                formData.append('Files', this);
            })

            $.ajax({
                url: "@Url.Action("SendMail")",
                type: 'POST',
                contentType: false,
                data: formData,
                async: false,
                processData: false,
                success: function (data) {
                    if (data.result) {
                        msg.WithSuccesCheck("Success", function () {
                            $("#btnQuery").click();
                        });
                    }
                    else {
                        msg.WithWarningCheck(data.resultMsg, function () {
                            location.reload();
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    // console.log(xhr.responseText);
                    msg.WithWarningCheck(xhr.responseText, function () {
                        location.reload();
                    });
                }
            });
        }
    }

</script>