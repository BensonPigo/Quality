
@{
    ViewBag.Title = "Others";
}
@Html.Partial("~/Areas/FinalInspection/Views/Shared/_Inspection_Layout.cshtml")
<style type="text/css">


    .Font {
        font-size: 1.5em;
        font-weight: 900;
    }

    .textFont {
        font-size: 1.5em;
    }


    td {
        height: 4em;
        padding: 1em
    }

    .ColumnStype {
        text-align: right;
    }

    .ColunTD {
        width: 28%;
    }

    .ValueTD {
        width: 29%;
    }


    .al-m {
        position: absolute;
        top: 50%;
        transform: translate(-50%, -50%);
        left: 50%;
    }

    .remarkQuick {
        float: left;
        padding: 3px 12px 3px 12px;
        border: solid 1px black;
        margin-left: 3px;
        border-radius: 6px;
        cursor: pointer;
    }

    #RemarkQuickOption {
        width: 20vw;
        position: absolute;
        left: 50vw;
        top: 40vh;
        background-color: white;
        vertical-align: middle;        
        border:solid 1px black;
        display:none;
    }
        #RemarkQuickOption tbody tr td input {
            height: unset;
            margin-right: 7px;
        }

        #RemarkQuickOption tbody tr td label {
            font-size : 20px;
        }
</style>

@model DatabaseObject.ViewModel.FinalInspection.Others
<div class="DownWhiteBackgrond" style="display: flex; flex-wrap: nowrap; height: 76vh;">
    @using (Html.BeginForm("Others", "Inspection", FormMethod.Post, new { @id = "OthersForm", onsubmit = "return checkValue(this.submitted)" }))
    {
        <table class="al-m" style="width: 80% ; align-items: center; ">

            <tr>
                <td class="ColumnStype ColunTD"><label class="Font">CFA</label></td>
                <td class="ValueTD">
                    @Html.TextBoxFor(o => o.CFA, new {  @class = "form-control",  @readonly = "readonly" })
                </td>

                <td class="ColumnStype ColunTD"><label class="Font">Inspection Result</label></td>
                <td class="ValueTD">
                    @if (Model != null)
                    {
                        string color = "#00CC00";
                        if (Model.InspectionResult == "Fail")
                        {
                            color = "#E62513";
                        }


                        <div class="textFont" style="color:@color">
                            @Html.DisplayFor(o => o.InspectionResult)
                        </div>

                    }
                    @Html.HiddenFor(o => o.InspectionResult)
                </td>
            </tr>
            <tr>
                <td class="ColumnStype ColunTD"><label class="Font">Clerk</label></td>
                <td class="ValueTD">
                    <div class="textFont">
                        @Html.DisplayFor(o => o.Clerk)   
                    </div>
                    @Html.HiddenFor(o => o.Clerk)
                </td>

                <td class="ColumnStype"><label class="Font">Shipment Status</label></td>
                <td>
                    @if (Model != null)
                    {
                        string color = "#00CC00";
                        if (Model.ShipmentStatus == "On Hold")
                        {
                            color = "#E62513";
                        }

                        <div class="textFont" style="color:@color">
                            @Html.DisplayFor(o => o.ShipmentStatus)
                        </div>
                    }

                    @Html.HiddenFor(o => o.ShipmentStatus)

                </td>
            </tr>

            <tr>
                <td class="ColumnStype"><label class="Font">Production Status</label></td>
                <td>
                    @Html.TextBoxFor(o => o.ProductionStatus, new { @class = "form-control center-block", @type = "number", @step = "0.01", @placeholder = "0.00", @max = "100", @oninput = "if(parseInt(value) > 100)value=100" })
                    <label class="Font">%</label>
                </td>
                <td></td>
                <td></td>
            </tr>

            <tr>
                <td class="ColumnStype"><label class="Font">Other Photo</label></td>
                <td>
                    <img src="~/Image/Icon/Camera.png" width="30" height="30" style="cursor: pointer;" onclick="ScreenShot()" />
                    <img src="~/Image/Icon/Picture.png" width="30" height="30" style="cursor: pointer;" onclick="OpenPicture()" />
                </td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td class="ColumnStype" style="vertical-align:top;"><label class="Font"></label></td>
                <td colspan="3">(Please upload measurement picture if you need)</td>
            </tr>
            <tr>
                <td class="ColumnStype" style="vertical-align:top;"><label class="Font">Remark</label></td>
                <td colspan="2">

                    @Html.TextAreaFor(o => o.OthersRemark, new { @style = "width:calc(100% - 80px); float:left;" })
                    <div class="remarkQuick">...</div>
                </td>
                <td>
                </td>
            </tr>

        </table>
        <input type="hidden" id="goPage" name="goPage">
        <button id="btnBack" onclick="this.form.submitted=this.value;" type="submit" value="Back" style="right: 7em;" class="button">Back</button>
        <button d="btnSubmit" onclick="this.form.submitted=this.value;" type="submit" value="Submit" style="right: 0; padding: 12px 25px" class="button">Submit</button>

        @Html.HiddenFor(o => o.FinalInspectionID)
    }
</div>

<table id="RemarkQuickOption">
    <thead>
        <tr style="background-color:gray; height:3vh;">
            <th><h3>Comments</h3></th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td><input type="checkbox" id="checkbox1" value="Odor Test : Pass" /><label for="checkbox1">Odor Test : Pass</label></td>
        </tr>
        <tr>
            <td><input type="checkbox" id="checkbox2" value="Odor Test : Fail" /><label for="checkbox2">Odor Test : Fail</label></td>
        </tr>
        <tr>
            <td><input type="checkbox" id="checkbox3" value="Water absorbency test passed 2 sec" /><label for="checkbox3">Water absorbency test passed 2 sec</label></td>
        </tr>
        <tr>
            <td><input type="checkbox" id="checkbox4" value="Water absorbency test passed 5 sec" /><label for="checkbox4">Water absorbency test passed 5 sec</label></td>
        </tr>
        <tr>
            <td><input type="checkbox" id="checkbox5" value="Water absorbency test Failed 2 sec" /><label for="checkbox5">Water absorbency test Failed 2 sec</label></td>
        </tr>
        <tr>
            <td><input type="checkbox" id="checkbox6" value="Water absorbency test Failed 5 sec" /><label for="checkbox6">Water absorbency test Failed 5 sec</label></td>
        </tr>
        <tr>
            <td><input type="checkbox" id="checkbox7" value="Other" /><label for="checkbox7">Other</label></td>
        </tr>
        <tr>
            <td align="right">
                <input id="RemarkQuickClose" type="button" value="OK" style="cursor:pointer;"/>
            </td>
        </tr>
    </tbody>
</table>

<script>

    var msg = new MessagerAlert();

    $(function () {
        @Html.Raw(Model.ErrorMessage)

        $('.remarkQuick').on('click', function () {
            RemarkQuickOpen();
        });

        $('#RemarkQuickClose').on('click', function () {
            RemarkQuickClose();
        });

        $('#CFA').on('click', function () {
            OpenCFAList('CFA');
        });
    });

    function checkValue(self) {
        document.getElementById("goPage").value = self;

        ShowLoading();

        return true;
    }

    function OpenPicture() {
        window.open('@Url.Action("OthersPicture")?FinalInspectionID=@Model.FinalInspectionID', "Picture", config = 'toolbar=no,status=no,location=no,width=700,height=600');
    }


    function OpenCFAList(targetID) {
        var para = `?FinalInspectionID=${$('#FinalInspectionID').val()}&TargetID=${targetID}&Title=CFA`;
        window.open('@Url.Action("FinalInspectionCFAList", "PublicWindow",new{Area=""})' + para, 'CFA List', config = 'toolbar=no,status=no,location=no,width=800,height=750');
    }


    function ScreenShot() {
        window.open('@Url.Action("OthersTakePicture")?FinalInspectionID=@Model.FinalInspectionID', "Picture", config = 'toolbar=no,status=no,location=no,width=700,height=600');
    }


    function GetFinalInspectionCFA(Pass1, targetID) {

        var userID = Pass1.ID;

        $(`#${targetID}`).val(userID);
    }


    function GetImage(Data, ImgSource) {
        //透過AJAX暫存成Temp Data

        //根據圖片來源決定存檔方式
        if (ImgSource == 'Camera') {
            var FinalInspectionID = Data.FinalInspectionID;
            var Picture = Data.Img.replace("data:image/png;base64,", "");

            var data =
            {
                ID: FinalInspectionID,
                TempImage: Picture,
                TempRemark: Data.Remark,
            };

            $.ajax({
                url: "@Url.Action("AddthersTPicturesTempSave", "Inspection", new { Area = "FinalInspection" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ data: data }),
                async: true,
                success: function (data) {
                    //msg.WithSuccess("Image OK!!");
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        }
        if (ImgSource == 'File') {

            $.ajax({
                url: "@Url.Action("BatchAddthersTPicturesTempSave", "Inspection", new { Area = "FinalInspection" })",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ list: Data }),
                async: true,
                success: function (data) {
                    //msg.WithSuccess("Image OK!!");
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });

        }
    }

    function RemarkQuickOpen() {
        $('#RemarkQuickOption').show();
    }

    function RemarkQuickClose() {
        var r = $('#OthersRemark').val();
        var length = $("#RemarkQuickOption tbody tr td input[type='checkbox']:checked").length;
        if (r != '' && length > 0) {
            r = r + "\r\n";
        }
        $("#RemarkQuickOption tbody tr td input[type='checkbox']:checked").each(function () {
            r = r + $(this).val() + "\r\n";
        });
        $('#OthersRemark').val(r);

        $('#RemarkQuickOption').hide();
    }
</script>
