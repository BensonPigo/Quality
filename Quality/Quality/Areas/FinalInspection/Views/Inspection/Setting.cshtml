@{
    ViewBag.Title = "Setting";

    bool AQLPlanDisabled = Model.InspectionStage == "Inline" || Model.InspectionStage == "Stagger";
    bool SampleQtyDisabled = Model.InspectionStage == "Final" || Model.InspectionStage == "3rd Party";
}

@model DatabaseObject.ViewModel.FinalInspection.Setting
@section FinalInspection_head{
    <link href="~/ThirdParty/plugins/DataTables/datatables.min.css" rel="stylesheet" />
    <link href="~/ThirdParty/SciCustom/css/TableStyle.css" rel="stylesheet" />
    <link href="~/ThirdParty/plugins/sweetalert2/sweetalert2.min.css" rel="stylesheet" />
    <script src="~/ThirdParty/plugins/DataTables/datatables.min.js"></script>

    <style type="text/css">
        #SelectedPOTable_previous, #SelectedPOTable_next {
            color: white !important;
        }

        tr.shown td.details-control {
            background: url('/Image/Icon/ChildRowClose.png') no-repeat center center;
        }

        td.details-control {
            background: url('/Image/Icon/ChildRowOpen.png') no-repeat center center;
        }

        .whiteBackgrond form {
            height: 100%
        }

        .col-auto {
            margin: 1em
        }

        .sub_title {
            font-size: 1.5em;
            color: #999999
        }

        .table_div > tbody > tr > td > * {
            margin: 0.5em;
        }

        .table_div > tbody > tr > td:first-child {
            text-align: right;
            padding-right: 1em;
            font-weight: bold;
            vertical-align: middle;
        }

        .table_div > tbody > tr > td:nth-child(2) {
            text-align: left;
        }

        #CartonTable_info {
            color: white
        }

        #CartonTable_previous, #CartonTable_next {
            color: white !important;
        }

        #CartonTable_wrapper, #CartonTable_wrapper > .dataTables_scrollHeadInner {
            width: 100%
        }

        #ShipmodeSeqTable_info {
            color: white
        }

        #ShipmodeSeqTable_previous, #ShipmodeSeqTable_next {
            color: white !important;
        }

        #ShipmodeSeqTable_wrapper, #ShipmodeSeqTable_wrapper > .dataTables_scrollHeadInner {
            width: 100%
        }

        #SewingLineSeqTable_info {
            color: white
        }

        #SewingLineTable_previous, #SewingLineTable_next {
            color: white !important;
        }

        #SewingLineTable_wrapper, #SewingLineTable_wrapper > .dataTables_scrollHeadInner {
            width: 100%
        }

        table.dataTable.cell-border table tbody tr td:not(:first-child) {
            text-align: center;
        }

        label {
            font-size: 1.4em;
        }

        #SelectedPOTable {
            font-size: 1.4em;
        }
    </style>
}

<div class="whiteBackgrond" style="display:flex;flex-wrap:nowrap;height:85vh;align-items:center; vertical-align:middle">
    @using (Html.BeginForm("GoGeneral", "Inspection", FormMethod.Post, new { @id = "settingForm", onsubmit = "return checkSubmitValue();" }))
    {
        @Html.HiddenFor(o => o.FinalInspectionID)
        @Html.HiddenFor(o => o.AcceptableQualityLevelsUkey)
        @Html.HiddenFor(o => o.AcceptableQualityLevelsProUkey)
        @Html.HiddenFor(o => o.BrandID)
        <div style="padding:2em 3em 2em 3em;display:flex;width:100%;flex-wrap:wrap;">
            <div class="col-auto" style="width:100%"><h1 style="font-size:2em">Inspection Setting</h1></div>

            @*Basic*@
            <div style="width:50%;height:31vh;display:flex;flex-wrap:wrap;">
                <div class="col-auto" style="width:100%;"><h2 class="sub_title">Basic</h2></div>
                @*Row 1*@
                <div style="width: 35%; display: flex; align-items: center; justify-content:right;">
                    <label style="font-weight:bold">Choose Inspection Stage</label>
                </div>
                <div style="width: 20%; display: flex; align-items: center; justify-content:center;">
                    @Html.DropDownListFor(o => o.InspectionStage, (List<SelectListItem>)ViewBag.InspectionStageList, null, new { @class = "form-control", @style = "width:80%", @onchange = "onInspectionStageChange(this.value)" })
                </div>
                <div style="width: 16%; display: flex; align-items: center;">
                    <label style="font-weight: bold; text-align: right;">Re-Inspection</label>
                </div>
                <div style="width: 29%; display: flex; align-items: center;">
                    @Html.CheckBoxFor(o => o.ReInspection, new { @style = "width: 2em;" })
                </div>

                @*Row 2*@
                <div style="width: 35%; display: flex; align-items: center; justify-content:right;">
                    <label style="font-weight:bold">What's day you audit?</label>
                </div>
                <div style="width: 20%; display: flex; align-items: center; justify-content:center;">
                    @Html.TextBoxFor(o => o.AuditDate, "{0:yyyy/MM/dd}", new { @class = "date-picker", @style = "width:80%" })
                </div>
                <div style="width:45%"></div>

                @*Row 3*@
                <div style="width: 35%; display: flex; align-items: center; justify-content:right;">
                    <label style="font-weight:bold">What's sewing line you audit?</label>
                </div>
                <div style="width: 20%; display: flex; align-items: center; justify-content:center;">
                    @Html.TextBoxFor(o => o.SewingLineID, new { @readonly = "readonly", @style = "width:80%;" })
                </div>
                <div style="width: 45%; display: flex; align-items: center; ">
                    <input type="button" onclick="ClearSewing(this)" name="name" value="Clear" style="float:left;" />
                </div>

                @*Row 4*@
                <div style="width: 20%; display: flex; align-items: center; justify-content: right;">
                    <label style="font-weight:bold">Shift</label>
                </div>
                <div style="width: 17.5%; display: flex; align-items: center; justify-content: center;">
                    @{var ShiftList = (List<SelectListItem>)ViewBag.Shift; }
                    <select id="Shift" name="Shift" class="form-control" style="width:100px">
                        @foreach (var item in ShiftList)
                        {
                            string selected = Model.Shift == item.Value ? "selected" : "";
                            <option value="@item.Value" @selected>@item.Text</option>
                        }
                    </select>

                </div>
                <div style="width: 6%; display: flex; align-items: center; ">
                    <label style="font-weight:bold">Team</label>
                </div>
                <div style="width: 17.5%; display: flex; align-items: center; justify-content: center;">

                    @Html.DropDownListFor(o => o.Team, (List<SelectListItem>)ViewBag.SewingTeam, null, new { @class = "form-control", @style = "width:100px" })
                </div>
                <div style="width: 39%;"></div>
            </div>

            @*Inspection Number*@
            <div style="width: 50%; height: 31vh; display: flex; flex-wrap: wrap; align-content: start;">
                <div class="col-auto" style="width: 100%;height:10%; display: flex;">
                    <h2 class="sub_title">Inspection Number</h2>
                </div>
                <div class="col-auto" style="width: 100%; height: 10%; display: flex; ">
                    <label style="padding-left:3em;font-weight:bold">This is <font style="color:#0000ff">@Html.DisplayFor(o => o.InspectionTimes)</font> times to inspect for this PO#</label>
                </div>
                @Html.HiddenFor(o => o.InspectionTimes)
            </div>

            @*Selected PO*@
            <div style="width:50%;height:39vh;">
                <div class="col-auto"><h2 class="sub_title">Selected PO</h2></div>
                <div class="col-auto">
                    <table id="SelectedPOTable" class="cell-border " style="width:100%"></table>
                </div>
                <div class="col-auto" style="text-align:right"><p style="font-weight:bold;padding:10px 0;font-size:1.4em;">Total Available Qty <label id="totalAvailableQty" style="font-size:1.2em">@ViewData["TotalAvailableQty"]</label></p></div>
            </div>

            @*AQL Plan*@
            <div style="width:50%;height:39vh;">
                <div class="col-auto"><h2 class="sub_title">AQL Plan</h2></div>
                <table class="col-auto table_div" style="margin-left: 4em;">
                    <tr>
                        <td><label>Input Type</label></td>
                        <td>
                            @Html.DropDownListFor(o => o.AqlInputType, Model.AqlInputTypeList, null, new { @class = "form-control", @onchange = "onAqlInputTypeChange(this.value)" })

                        </td>
                    </tr>
                    @if (Model.BrandID.ToUpper() != "MOODY")
                    {
                        <tr>
                            <td><label>AQL Plan</label></td>
                            <td>
                                @Html.DropDownListFor(o => o.AQLPlan, Model.AQLPlanList, null, new { @class = "form-control" })
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2" style="text-align:center">
                                <label style="font-weight:normal;font-size:0.8em">(Inline, Stagger stage can skip AQL Plan, encode below directly)</label>
                            </td>
                        </tr>
                        <tr>
                            <td><label>Sample Plan Qty</label></td>
                            <td>
                                @if (SampleQtyDisabled)
                                {
                                    @Html.TextBoxFor(o => o.SampleSize, new { @type = "number", @min = "0", @class = "form-control center-block", @onchange = "onSampleSizeChange(this.value)", @disabled = "disabled", @style = "width:49%;" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(o => o.SampleSize, new { @type = "number", @min = "0", @class = "form-control center-block", @onchange = "onSampleSizeChange(this.value)", @style = "width:49%;" })
                                }
                            </td>
                        </tr>
                        <tr>
                            <td><label>Accepted Qty</label></td>
                            <td>

                                @if (SampleQtyDisabled)
                                {
                                    @Html.TextBoxFor(o => o.AcceptQty, new { @type = "number", @style = "width:49%;", @min = "0", @class = "form-control center-block", @disabled = "disabled" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(o => o.AcceptQty, new { @type = "number", @style = "width:49%;", @min = "0", @class = "form-control center-block" })
                                }
                            </td>
                        </tr>
                        <tr>
                            <td><label>Reject Qty</label></td>
                            <td>

                                @if (SampleQtyDisabled)
                                {
                                    <input id="RejectQty" type="number" class="form-control center-block" min="0" value="@ViewData["RejectQty"]" style="width:49%;" disabled />
                                }
                                else
                                {
                                    <input id="RejectQty" type="number" class="form-control center-block" min="0" value="@ViewData["RejectQty"]" style="width:49%;" />
                                }
                            </td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td><label>AQL Plan</label></td>
                            <td>
                                @if (AQLPlanDisabled || Model.AQLProPlan == null)
                                {
                                    @Html.DropDownListFor(o => o.AQLProPlan, Model.AQLProPlanList, null, new { @class = "form-control", @disabled = "@disabled" })
                                }
                                else
                                {
                                    @Html.DropDownListFor(o => o.AQLProPlan, Model.AQLProPlanList, null, new { @class = "form-control" })
                                }

                            </td>
                        </tr>
                        <tr>
                            <td colspan="2" style="text-align:center">
                                <label style="font-weight:normal;font-size:0.8em">(Inline, Stagger stage can skip AQL Plan, encode below directly)</label>
                            </td>
                        </tr>
                        <tr>
                            <td><label>Sample Plan Qty</label></td>
                            <td>
                                @if (SampleQtyDisabled)
                                {
                                    @Html.TextBoxFor(o => o.SampleSize, new { @type = "number", @min = "0", @class = "form-control center-block", @onchange = "onSampleSizeChange(this.value)", @disabled = "disabled", @style = "width:49%;" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(o => o.SampleSize, new { @type = "number", @min = "0", @class = "form-control center-block", @onchange = "onSampleSizeChange(this.value)", @style = "width:49%;" })
                                }
                            </td>
                        </tr>

                    }
                </table>
            </div>
        </div>
        <!--Detail-Cartons彈出視窗-->
        <!--多個Table forA001-->
        <input type="hidden" id="currnetSelectedPO" />
        <div class="detail-dialog to-Carton-detail" title="Select Carton">
            <div class="detail-dialog-content dialog-content-w-icon" style="height:40vh">
                <table cellspacing="100" id="CartonTable" class="table table-striped display">
                    <thead>
                        <tr class="row-name">
                            <th>Select</th>
                            <th>Packing List ID</th>
                            <th>CTN No</th>
                            <th>Size</th>
                            <th>Qty</th>
                            <th>SP</th>
                            <th>Seq</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.SelectCarton.Count; i++)
                        {
                            <tr class="row-content" style="vertical-align: middle; text-align: center;">
                                <td>
                                    <input type="checkbox" ID="Carton_Select_[@i]" class="messageCheckbox" Idx=@i CTNNo=@Model.SelectCarton[i].CTNNo PackingListID=@Model.SelectCarton[i].PackingListID shipQty="@Model.SelectCarton[i].ShipQty" OrderID=@Model.SelectCarton[i].OrderID Seq=@Model.SelectCarton[i].Seq onclick="SelectCartonChange(this)" style="width: 1.4em;" />
                                </td>
                                <td>
                                    @Html.DisplayFor(o => Model.SelectCarton[i].PackingListID)
                                </td>
                                <td>
                                    @Html.DisplayFor(o => Model.SelectCarton[i].CTNNo)
                                </td>
                                <td>
                                    @Html.DisplayFor(o => Model.SelectCarton[i].Size)
                                </td>
                                <td>
                                    @Html.DisplayFor(o => Model.SelectCarton[i].QtyPerSize)
                                </td>
                                <td>
                                    @Model.SelectCarton[i].OrderID-
                                </td>
                                <td>
                                    @Model.SelectCarton[i].Seq
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <br />
            </div>
        </div>


        <!--Shipmode Seq彈出視窗-->
        <input type="hidden" id="currnetSelectedShipmodeSeq" />
        <div class="detail-dialog to-ShipmodeSeq-detail" title="Select Shipmode Seq">
            <div class="detail-dialog-content dialog-content-w-icon" style="height:40vh">
                <table cellspacing="100" id="ShipmodeSeqTable" class="table table-striped display">
                    <thead>
                        <tr class="row-name">
                            <th>Select</th>
                            <th>Seq</th>
                            <th>Ship Mode</th>
                            <th>Article</th>
                            <th>Qty</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.SelectOrderShipSeq.Count; i++)
                        {
                            <tr class="row-content" style="vertical-align: middle; text-align: center;">
                                <td>
                                    <input type="checkbox" ID="ShipmodeSeq_Select_[@i]" class="messageCheckbox" Idx=@i Seq=@Model.SelectOrderShipSeq[i].Seq OrderID=@Model.SelectOrderShipSeq[i].OrderID onclick="SelectOrderShipSeqChange(this)" style="width: 1.4em;" qty=" @Model.SelectOrderShipSeq[i].Qty" />
                                </td>
                                <td>
                                    @Html.DisplayFor(o => Model.SelectOrderShipSeq[i].Seq)
                                </td>
                                <td>
                                    @Html.DisplayFor(o => Model.SelectOrderShipSeq[i].ShipmodeID)
                                </td>
                                <td>
                                    @Html.DisplayFor(o => Model.SelectOrderShipSeq[i].Article)
                                </td>
                                <td>
                                    @Html.DisplayFor(o => Model.SelectOrderShipSeq[i].Qty)
                                </td>
                                <td>
                                    @Model.SelectOrderShipSeq[i].OrderID-
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <br />

            </div>
        </div>

        <!--Sewing Line彈出視窗-->

        <div class="detail-dialog to-SewingLine-detail" title="Select Sewing Line">
            <div class="detail-dialog-content dialog-content-w-icon" style="height:40vh">
                <table cellspacing="100" id="SewingLineTable" class="table table-striped display">
                    <thead>
                        <tr class="row-name">
                            <th>Select</th>
                            <th>Line</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.SelectedSewing.Count; i++)
                        {
                            <tr class="row-content" style="vertical-align: middle; text-align: center;">
                                <td>
                                    <input type="checkbox" ID="SewingLine_Select_[@i]" SewingLine="@Model.SelectedSewing[i].SewingLine" class="messageCheckbox" Idx=@i onclick="SelectOrderShipSeqChange(this)" style="width: 1.4em;" />
                                </td>
                                <td>
                                    @Html.DisplayFor(o => Model.SelectedSewing[i].SewingLine)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <br />

            </div>
        </div>

        <button class="button" style="right:0">Next</button>

        //Model.SelectCarton的標籤藏在這邊
        for (int i = 0; i < Model.SelectCarton.Count; i++)
        {
            @Html.Hidden($"SelectCarton[{i}].Selected", Model.SelectCarton[i].Selected,new {@class= "CartonSelect" })
            @Html.Hidden($"SelectCarton[{i}].PackingListID", Model.SelectCarton[i].PackingListID)
            @Html.Hidden($"SelectCarton[{i}].CTNNo", Model.SelectCarton[i].CTNNo)
            @Html.Hidden($"SelectCarton[{i}].OrderID", Model.SelectCarton[i].OrderID)
            @Html.Hidden($"SelectCarton[{i}].Seq", Model.SelectCarton[i].Seq)
            @Html.Hidden($"SelectCarton[{i}].ShipQty", Model.SelectCarton[i].ShipQty)
        }
        //Model.SelectOrderShipSeq
        for (int i = 0; i < Model.SelectOrderShipSeq.Count; i++)
        {
            @Html.Hidden($"SelectOrderShipSeq[{i}].Selected", Model.SelectOrderShipSeq[i].Selected)
            @Html.Hidden($"SelectOrderShipSeq[{i}].OrderID", Model.SelectOrderShipSeq[i].OrderID)
            @Html.Hidden($"SelectOrderShipSeq[{i}].Seq", Model.SelectOrderShipSeq[i].Seq)
            @Html.Hidden($"SelectOrderShipSeq[{i}].ShipmodeID", Model.SelectOrderShipSeq[i].ShipmodeID)
            @Html.Hidden($"SelectOrderShipSeq[{i}].Article", Model.SelectOrderShipSeq[i].Article)
            @Html.Hidden($"SelectOrderShipSeq[{i}].Qty", Model.SelectOrderShipSeq[i].Qty)
        }
    }

</div>
@section FinalInspection_script
{
    <script>
        var msg = new MessagerAlert();

        // 摺疊資料需先轉成array
        var poData = [];
        var sewingData = [];
        var shipModeSeqData = [];
        var SelectedPOs = [];
        var SelectedSeqs = [];
        var index = 0;
        var index2 = 0;
        var index3 = 0;
        var currentStage = '';
        var Order_AvailableQty = {};
        var table;
        @foreach (var item in Model.SelectedPO)
        {
            @:poData.push([null, '@item.OrderID', index, '@item.CustPONO', '@item.StyleID', '@item.SeasonID', '@item.BrandID', @item.Qty, '@item.Cartons',@item.AvailableQty, '@item.SeasonID', '@item.Seq', '@item.Article',@item.MetalContaminateQty]);
            @:index = index + 1;
        }
        @foreach (var item in Model.SelectedSewing)
        {
            @:sewingData.push([null, '@item.SewingLine', index2]);
            @:index2 = index2 + 1;
        }

        @foreach (var item in Model.SelectOrderShipSeq)
        {
            @:shipModeSeqData.push(['@item.OrderID', '@item.Seq', @item.Qty]);
            @:index3 = index3 + 1;
        }
        $(function () {

            @Html.Raw(Model.ErrorMessage);

            for (var i = 0; i < poData.length; i++) {
                var obj = {
                    OrderID: poData[i][1],
                    Rowindex: poData[i][2],
                    CustPONO: poData[i][3],
                    StyleID: poData[i][4],
                    SeasonID: poData[i][5],
                    BrandID: poData[i][6],
                    OrderQty: poData[i][7],
                    Cartons: poData[i][8],
                    AvailableQty: poData[i][9],
                    Seq: poData[i][11],
                    Article: poData[i][12],
                    MetalContaminateQty: poData[i][13],

                };
                SelectedPOs.push(obj);
            }

            for (var i = 0; i < shipModeSeqData.length; i++) {
                var obj = {
                    OrderID: shipModeSeqData[i][0],
                    Seq: shipModeSeqData[i][1],
                    Qty: shipModeSeqData[i][2],

                };
                SelectedSeqs.push(obj);
            }


            $("#SewingLineID").on('click', function () {
                //window.open('@Url.Action("SewingLineList", "PublicWindow",new { Area=""})' + '?FactoryID=@ViewBag.FactoryID', 'SewingLineList', config = 'toolbar=no,status=no,location=no,width=400,height=650' );

                open_SewingLine($(this).val());
            });


            table = $('#SelectedPOTable').DataTable({
                    data: poData,
                    autoWidth: false,
                    destroy: true,
                    columnDefs: [
                        { targets: 0, width: "2%", orderable: false },
                        { targets: 1, width: "98%", orderable: false },
                    ],
                    columns: [
                        {
                            "className": "details-control",
                        }
                    ],
                    "filter": false,
                    "paging": false,
                    "info": false,
                    "ordering": false,
                    "pageLength": 10,
                    "scrollY": "30vh",
                    "scrollCollapse": true,
                    "createdRow": function (row, data, index) {

                        $('td', row).css('background-color', '#FAA7A7');
                        $('td', row).attr('ID','SelectPO_'+ data[1]);
                }
            });

            $("#SelectedPOTable tbody").on("click", "td.details-control", function () {

                var tr = $(this).closest('tr');
                var row = table.row(tr);

                if (row.child.isShown()) {
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    var orderID = row.data()[1];
                    row.child(format(row.data(), orderID)).show();
                    tr.addClass('shown');
                }

                var availableQtycheck = $('input[col=AvailableQty]');

                $.each(availableQtycheck, function () {
                    if (currentStage == "Final") {
                        $($(this)[0]).attr("readonly", "readonly");
                    }
                    else {
                        $($(this)[0]).removeAttr("readonly");
                    }
                });
            });


            // 把開窗點到的資料，寫入DataTable的Datasource
            $("#SelectedPOTable tbody").on("blur", "td.OpenDetail", function () {


                // 取得修改了哪個SP底下的資料
                var orderID = $(this).find("input").attr("OrderID");

                //取得修改哪個欄位
                var Column = $(this).find("input").attr("Col");

                var partentTd = $("#SelectPO_" + orderID);
                var tr = $(partentTd).closest('tr');
                var row = table.row(tr);

                if (Column=="Cartons") {
                    table.row($("#SelectPO_" + orderID).closest('tr')).data()[8] = $(this).find("input").val();
                }
                if (Column == "AvailableQty") {

                    table.row($("#SelectPO_" + orderID).closest('tr')).data()[9] = $(this).find("input").val();

                    var qty = $(this).find("input").val();
                    var allSeq = $(this).parent().parent().find("input[col='ShipmodeSeq']").val();
                    var seqList = allSeq.split(',');
                    $.each(seqList, function () {
                        var seq = this;
                        Order_AvailableQty[orderID + '-' + seq] = parseInt(qty);

                    });

                    Cacu_AvailableQty();
                }
                if (Column == "ShipmodeSeq") {

                    table.row($("#SelectPO_" + orderID).closest('tr')).data()[11] = $(this).find("input").val();
                }
            });

            // CTN No Header改成文字方塊
            $('#CartonTable thead th').each(function () {
                var idx = $(this).index();
                var title = $(this).text();

                if (idx == 0) {
                    $(this).html('<input id="CTNSelectAll" type="checkbox" style="width: 1.4em; vertical-align: middle;" /> Select All');
                }
                if (idx == 2) {
                    $(this).html('<input id="CTNSearch" type="text" placeholder="Search ' + title + '" />');
                }

            });

            $("#CartonTable").DataTable({
                "pageLength": 10,
                "autoWidth": false,
                "info": false,
                destroy: true, // 設定這個才能重新初始化Datatables
                "filter": false,
                "paging": false,
                "info": false,
                "scrollY": "40vh",
                "scrollCollapse": true,
                columnDefs: [
                    { targets: 0, width: "30%" },
                    { targets: 1, width: "30%" },
                    { targets: 2, width: "30%" },
                    { targets: 3, visible: false },
                    { targets: 4, visible: false },
                ]
            });

            $("#ShipmodeSeqTable").DataTable({
                "pageLength": 10,
                "autoWidth": false,
                "info": false,
                destroy: true, // 設定這個才能重新初始化Datatables
                "filter": false,
                "paging": false,
                "info": false,
                "scrollY": "40vh",
                "scrollCollapse": true,
                columnDefs: [
                    { targets: 0 },
                    { targets: 1 },
                    { targets: 2 },
                    { targets: 3 },
                    { targets: 4 },
                    { targets: 5, visible: false },
                ]
            });

            // Line Header改成文字方塊
            $('#SewingLineTable thead th').each(function () {
                var idx = $(this).index();
                var title = $(this).text();

                if (idx == 1) {
                    $(this).html('<input id="LineSearch" type="text" placeholder="Search ' + title + '" />');
                }

            });

            $("#SewingLineTable").DataTable({
                "pageLength": 10,
                "autoWidth": false,
                "info": false,
                destroy: true, // 設定這個才能重新初始化Datatables
                "filter": false,
                "paging": false,
                "info": false,
                "scrollY": "40vh",
                "scrollCollapse": true,
                columnDefs: [
                    { targets: 0 },
                    { targets: 1 },
                ]
            });

            // dialog 共用
            $(".detail-dialog").dialog({
                autoOpen: false,
                modal: true,
                closeText: ' ',
                width: 500,
                minHeight: 400,
                position: {
                    my: "center top",
                    at: "center top",
                    of: window
                },
                closeOnEscape: false,
                dialogClass: "site-box",
                open: function (event, ui) {
                    $('.ui-widget-overlay').bind('click', function () {
                        //location.reload();//強制Refresh頁面 Benson
                        $(".ui-dialog-content").dialog('close');
                    });
                    $(this).parent().siblings().find(".ui-dialog-content").dialog('close');

                    //XX 藏起來
                    $(".ui-dialog-titlebar-close").hide();
                    $(".ui-dialog-title").css("width", "100%");
                },
                close: function () {
                },
            });

            //Select Carton視窗
            $(".to-Carton-detail").dialog({
                width: "70%",
                dialogClass: "add-contact-box",
                buttons: {
                    "1": {
                        text: 'Next',
                        click: function () {

                            //Select Carton視窗按下Next
                            var checkedList = [];
                            var totalQty = 0;

                            // 清空箱號選取，並觸發重新搜尋的event，把所有箱號都show出來
                            $("#CTNSearch").val('').keyup();

                            // 重置
                            if ($('[id^=Carton_Select_]').length > 0 && currentStage != 'Final') {
                                var allKeys = Object.keys(Order_AvailableQty);
                                var sp = $($('[id^=Carton_Select_]')[0]).attr("orderid");
                                $.each(allKeys, function () {
                                    var key = this;
                                    var tOrderID = key.split('-')[0];
                                    var tSeq = key.split('-')[1];
                                    if (tOrderID == sp) {
                                        Order_AvailableQty[key] = 0;
                                    }
                                });
                            }



                            // 根據Checkbox有沒有勾選，來調整input hidden的值。這個input才有Binding Model
                            $('[id^=Carton_Select_]').each(function () {

                                var idx = $(this).attr("idx");
                                var selectedOrderID = $(this).attr("OrderID");
                                var selectedSeq = $(this).attr("Seq");
                                var shipQty = parseInt($(this).attr("ShipQty"));

                                if ($(this).prop('checked')) {

                                    checkedList.push($(this).attr("ctnno"));

                                    if (currentStage != 'Final') {
                                        totalQty = totalQty + shipQty;
                                        Order_AvailableQty[selectedOrderID + '-' + selectedSeq] = totalQty;
                                    }

                                    $(`#SelectCarton_${idx}__Selected`).val(true);
                                }
                                else {

                                    $(`#SelectCarton_${idx}__Selected`).val(false);
                                }
                            });

                            var index = $("#currnetSelectedPO").val();
                            document.getElementById("SelectedPO[" + index + "].Cartons").value = checkedList.join(',');

                            var orderID = document.getElementById("SelectedPO[" + index + "].AvailableQty").getAttribute("OrderId");
                            //var seqList = document.getElementById("SelectedPO[" + index + "].Seq").value;
                            //var seq = seqList.split(',');

                            //Stage != 'Final'才需要從Carton帶入數量，否則帶入OrderQty
                            if (currentStage != 'Final') {

                                document.getElementById("SelectedPO[" + index + "].AvailableQty").value = totalQty;

                                table.row($("#SelectPO_" + orderID).closest('tr')).data()[9] = totalQty;
                            }
                            else {
                                var OrderQty = document.getElementById("SelectedPO[" + index + "].AvailableQty").getAttribute("OrderQty");
                                table.row($("#SelectPO_" + orderID).closest('tr')).data()[9] = parseInt(OrderQty);
                            }

                            Cacu_AvailableQty();

                            $(this).dialog("close");
                        }
                        , "class": "button"
                        , "style": "bottom:0;background-color:#E00000;border-radius: 21px;"
                    },
                },
            });

            //Select ShipmodeSeq 視窗
            $(".to-ShipmodeSeq-detail").dialog({
                width: "70%",
                dialogClass: "add-contact-box",
                buttons: {
                    "1": {
                        text: 'Next',
                        click: function () {

                            var checkedList = [];
                            var checkedOrderIDList = [];
                            var totalQty = 0;
                            $('[id^=ShipmodeSeq_Select_]').each(function () {

                                var seq = $(this).attr("seq");
                                var orderID = $(this).attr("OrderID");
                                var qty = $(this).attr("Qty");

                                if ($(this).prop('checked')) {

                                    totalQty = totalQty + parseInt(qty);
                                    checkedList.push(seq);
                                    checkedOrderIDList.push(orderID);

                                    Order_AvailableQty[orderID + '-' + seq] = parseInt(qty);
                                }
                                else {
                                    Order_AvailableQty[orderID + '-' + seq] = 0;
                                }
                            });
                            var index = $("#currnetSelectedShipmodeSeq").val();

                            //判斷Shipmode Seq是否改變，如果改變清空Carton
                            if (document.getElementById("SelectedPO[" + index + "].Seq").value != checkedList.join(',')) {
                                document.getElementById("SelectedPO[" + index + "].Cartons").value = "";
                            }

                            document.getElementById("SelectedPO[" + index + "].Seq").value = checkedList.join(',');
                            document.getElementById("SelectedPO[" + index + "].AvailableQty").value = totalQty;
                            $("#totalAvailableQty").text(totalQty);

                            $(this).dialog("close");
                        }
                        , "class": "button"
                        , "style": "bottom:0;background-color:#E00000;border-radius: 21px;"
                    },
                },
            });

            //Select SewingLine視窗
            $(".to-SewingLine-detail").dialog({
                width: "70%",
                dialogClass: "add-contact-box",
                buttons: {
                    "1": {
                        text: 'Next',
                        click: function () {

                            var checkedList = [];
                            $("#LineSearch").val('').change();

                            $('[id^=SewingLine_Select_]').each(function () {

                                if ($(this).prop('checked')) {

                                    checkedList.push($(this).attr("SewingLine"));
                                }
                            });

                            //把勾選的代進textobx
                            $("#SewingLineID").val(checkedList.join(','));
                            //document.getElementById("SelectedPO[" + index + "].Seq").value = checkedList.join(',');
                            $(this).dialog("close");
                        }
                        , "class": "button"
                        , "style": "bottom:0;background-color:#E00000;border-radius: 21px;"
                    },
                },
            });

            // AQLPlan選單變化事件
            $("#AQLPlan").change(function () {
                var aql = $(this).val()
                var TotalAvailableQty = parseInt($("#totalAvailableQty").text());

                //if (TotalAvailableQty == 0 && $("#FinalInspectionID").val() != '') {
                if (TotalAvailableQty == 0) {
                    msg.WithError("Total Available Qty cann't be 0.");
                    $(this).val('');
                    return;
                }
                if (TotalAvailableQty == '') {
                    TotalAvailableQty = 0;
                }

                // 若不是100% Inspection，則AJAX回去取資料
                if (aql != "100% Inspection") {
                    $.ajax({
                        url: '@Url.Action("AQL_AJAX")',
                        data: { AQLPlan: aql, TotalAvailableQty: TotalAvailableQty},
                        type: 'POST',
                        dataType: "json",
                        async: false,
                        success: function (res) {

                            var SamplePlanQty = res[0];
                            var AcceptedQty = res[1];
                            //RejectQty一律是AcceptQty+1
                            $("#SampleSize").val(SamplePlanQty);
                            $("#AcceptQty").val(AcceptedQty);
                            $("#RejectQty").val(parseInt(AcceptedQty) +1 );
                        }
                    })
                    $("#AcceptQty").removeAttr("max");
                    sampleQtyEnableChange();
                }
                else {
                    // 若是100% Inspection，則AJAX回去取資料，SampleSize帶入左邊Select PO的Total Available Qty數量，RejectQty一律是AcceptQty+1
                    var TotalAvailableQty = parseInt($("#totalAvailableQty").text());
                    $("#SampleSize").val(TotalAvailableQty);
                    $("#AcceptQty").val(0);
                    $("#RejectQty").val(1);

                    $("#AcceptQty").attr("max", TotalAvailableQty);
                    sampleQtyEnableChange();
                }
            });

            //Accept Qty欄位變更事件
            $("#AcceptQty").change(function () {
                var thisVal = parseInt($(this).val());
                var SamplePlanQty = parseInt($("#SampleSize").val());

                if (thisVal > SamplePlanQty) {
                    $(this).val(SamplePlanQty);
                    thisVal = SamplePlanQty;
                }

                $(this).val(thisVal);
                $("#RejectQty").val(thisVal + 1);
            });

            // AQLProPlan選單變化事件
            $("#AQLProPlan").change(function () {
                var aql = $(this).val()
                var TotalAvailableQty = $("#totalAvailableQty").text();

                //if (TotalAvailableQty == 0 && $("#FinalInspectionID").val() != '') {
                if (TotalAvailableQty == 0) {
                    msg.WithError("Total Available Qty cann't be 0.");
                    $(this).val('');
                    return;
                }
                if (TotalAvailableQty == '') {
                    TotalAvailableQty = 0;
                }

                // 若不是100% Inspection，則AJAX回去取資料
                if (aql != "") {
                    $.ajax({
                        url: '@Url.Action("AQLPro_AJAX")',
                        type: 'POST',
                        //dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({ AQLPlan: $("#AQLProPlan").val(), TotalAvailableQty: TotalAvailableQty, BrandID: $("#AQLProPlan").val() }),
                        async: false,
                        success: function (res) {

                            var html = res;
                            //var AcceptedQty = res[1];
                            ////RejectQty一律是AcceptQty+1
                            //$("#SampleSize").val(SamplePlanQty);
                            //$("#AcceptQty").val(AcceptedQty);
                            //$("#RejectQty").val(parseInt(AcceptedQty) +1 );
                            $('#settingForm > div > div:nth-child(5) > table > tbody > tr:nth-child(n + 3)').remove()
                            $('#settingForm > div > div:nth-child(5) > table > tbody').append(html);
                            $('#AcceptableQualityLevelsProUkey').val($('#ProUkey').val());

                        }
                    })
                }
            });

            sampleQtyEnableChange();
        });

        // Selected PO異動Available Qty時。自動加總到下方的「Total Available Qty」、右方的「AQL Plan」
        function Cacu_AvailableQty() {

            var total = 0;
            var brandID = $("#BrandID").val();

            // ISP20240279 REI較特殊，<= 12件時AQL Plan幫他直接帶100%
            var auto100inspection = false;

            for (var key in Order_AvailableQty) {
                total = total + parseInt(Order_AvailableQty[key]);
            }

            $("#totalAvailableQty").text(total);

            if (brandID == 'REI' && 0 < total && total <= 12) {
                auto100inspection = true;
            }

            //同步到AQL

            if (brandID != 'MOODY') {
                if (auto100inspection) {
                    $("#AqlInputType").val('Auto');
                    $("#AQLPlan").val('100% Inspection');
                    $("#AqlInputType").change();
                    $("#AQLPlan").change();
                    $('#AQLPlan').prop('disabled', true);
                }
                else {
                    $("#AQLPlan").removeAttr("disabled");
                }

                if ($("#AQLPlan").val() == "100% Inspection") {
                    $("#SampleSize").val(total);
                    $("#AcceptQty").val(0);
                    $("#AcceptQty").removeAttr("max");
                    $("#AcceptQty").attr("max", total);
                }
                else {
                    // 如果不是100% Inspection，需要重新計算Sample Plan、Accepted Qry
                    $("#AQLPlan").val('');
                    $("#SampleSize").val(0);
                    $("#AcceptQty").val(0);
                }
            }
            else {
                $("#AQLProPlan").change();
            }
        }

        function GetSewingLineList(sewingLineID) {
            $("#SewingLineID").val(sewingLineID);
        }

        //開啟Carton 彈跳視窗
        function open_cartonsDetail(pkey) {

            var findValue = pkey.split(',');
            var rowIndex;
            var sp = findValue[0];

            //Shipmode Seq 不為空才能後續
            if ($(`input[orderID=${sp}][col=ShipmodeSeq]`).val() == '') {
                msg.WithWarning("Please select ＜Shipmode Seq＞ first.");
                return true;
            }
            var seqVal = $(`input[orderID=${sp}][col=ShipmodeSeq]`).val();
            var seqList = seqVal.split(',');

            $(".to-Carton-detail").dialog("open");
            ShowLoading();

            // Carton的DataTable建立函式
            $("#CartonTable").DataTable({
                "pageLength": 10,
                "autoWidth": false,
                "info": false,
                destroy: true, // 設定這個才能重新初始化Datatables
                //"filter": true,
                "paging": false,
                "scrollY": "40vh",
                "scrollCollapse": true,
                "search": {
                    "search": sp + '-',
                },
                columnDefs: [
                    { targets: 0, width: "20%", orderable: false },
                    { targets: 1, width: "20%", orderable: false },
                    { targets: 2, width: "20%", orderable: false, },
                    { targets: 3, width: "20%", orderable: false, },
                    { targets: 4, width: "20%", orderable: false, },
                    { targets: 5, visible: false },
                    { targets: 6, visible: false },
                ],
                initComplete: function () {
                    this.api().columns().every(function () {

                        // 針對第一個header裡面的東西設定
                        if (this.data().length > 0 && this.index() == 0) {

                            var that = this;
                            $('input', this.header()).on('change', function () {

                                // 取得全選
                                let checkAll = $(this).prop('checked');


                                if (checkAll) {
                                    $('[id^=Carton_Select_]').each(function () {
                                        $(this).prop('checked', true);
                                    });

                                }
                                else {

                                    $('[id^=Carton_Select_]').each(function () {
                                        $(this).prop('checked', false);
                                    });

                                }
                            });

                        }

                        // 針對第三個header裡面的東西設定
                        if (this.data().length > 0 && this.index() == 2) {

                            var that = this;
                            $('input', this.header()).on('keyup', function () {

                                // 取得原始字串
                                let rawVal = this.value.trim();

                                let valList = rawVal.split(',');
                                let newArr = valList.filter(item => item !== "")

                                // 使用正規表達式進行搜尋
                                let regex = '\\b(' + newArr.join('|') + ')\\b';

                                that
                                    .search(regex, true,true)
                                    .draw();


                                //$.each(valList, function (idx,val) {

                                //    if (that.search() !== val) {
                                //        that
                                //            .search(['1','2'])
                                //            .draw();
                                //    }
                                //})

                            });

                        }

                        // 針對第六個header裡面的東西設定，只秀出選中的Seq 箱子
                        if (this.data().length > 0 && this.index() == 6) {

                            var that = this;
                            let newArr = seqList.filter(item => item !== "")

                            // 使用正規表達式進行搜尋
                            let regex = '\\b(' + newArr.join('|') + ')\\b';

                            that
                                .search(regex, true, true)
                                .draw();
                        }
                    });
                }
            })/*.columns.adjust()*/;

            $("#CTNSearch").val('');

            $("#CartonTable_filter").hide();

            // 先把所有勾選清掉
            $('[id^=Carton_Select_]').each(function () {
                $(this).prop('checked', false);
            });

            $(poData).each(function (index, element) {
                var orderID = element[1];
                var CustPONO = element[3];
                if (orderID == findValue[0] && CustPONO == findValue[1]) {
                    rowIndex = element[2];

                }
            });

            var totalCattonCTN = '@Model.SelectCarton.Count';
            var cartonValues = document.getElementById("SelectedPO[" + rowIndex + "].Cartons").value;
            var isSelectAll = true;
            if (cartonValues != '') {

                var cartonList = cartonValues.split(',');


                if (cartonList.length != totalCattonCTN) {
                    isSelectAll = false;
                }

                $(cartonList).each(function () {

                    $('input[Type=checkbox][CTNNo=' + this + ']').prop('checked', true);
                });
            }
            else {
                isSelectAll = false;
            }


            $("#CTNSelectAll").prop("checked", isSelectAll);

            $("#currnetSelectedPO").val(rowIndex);

            NonLoading();
        }

        //開啟ShipmodeSeq 彈跳視窗
        function open_ShipmodeSeq(pkey) {
            var findValue = pkey.split(',');
            var rowIndex;
            var sp = findValue[0];
            $(".to-ShipmodeSeq-detail").dialog("open");
            ShowLoading();

            $("#ShipmodeSeqTable").DataTable({
                "pageLength": 10,
                "autoWidth": false,
                "info": false,
                destroy: true, // 設定這個才能重新初始化Datatables
                //"filter": false,
                "paging": false,
                "info": false,
                "scrollY": "40vh",
                "scrollCollapse": true,
                "search": {
                    "search": sp + '-'
                },
                columnDefs: [
                    { targets: 0 },
                    { targets: 1 },
                    { targets: 2 },
                    { targets: 3 },
                    { targets: 4 },
                    { targets: 5, visible: false },
                ]
            })/*.columns.adjust()*/;

            $("#ShipmodeSeqTable_filter").hide();

            // 先把所有勾選清掉
            $('[id^=ShipmodeSeq_Select_]').each(function () {
                $(this).prop('checked', false);
            });

            $(poData).each(function (index, element) {
                var orderID = element[1];
                var CustPONO = element[3];
                if (orderID == findValue[0] && CustPONO == findValue[1]) {
                    rowIndex = element[2];
                }
            });

            var SeqValues = document.getElementById("SelectedPO[" + rowIndex + "].Seq").value;
            var SeqList = SeqValues.split(',');

            if (SeqValues != '') {

                $(SeqList).each(function () {

                    $('input[Type=checkbox][Seq=' + this + ']').prop('checked', true);
                });
            }
            $("#currnetSelectedShipmodeSeq").val(rowIndex);

            NonLoading();
        }

        function open_SewingLine(pkey) {
            var findValue = pkey.split(',');
            var line = findValue[0];
            $(".to-SewingLine-detail").dialog("open");
            ShowLoading();

            // SewingLine的DataTable建立函式
            $("#SewingLineTable").DataTable({
                "pageLength": 10,
                //"autoWidth": false,
                "info": false,
                destroy: true, // 設定這個才能重新初始化Datatables
                //"filter": false,
                "paging": false,
                "info": false,
                "scrollY": "40vh",
                "scrollCollapse": true,
                columnDefs: [
                    { targets: 0 },
                    { targets: 1, orderable: false },
                ],
                initComplete: function () {
                    this.api().columns().every(function () {

                        // 只有第一個欄位要有選單
                        if (this.data().length > 0 && this.index() == 1) {

                            var that = this;
                            $('input', this.header()).on('keyup change clear', function () {
                                if (that.search() !== this.value) {
                                    that
                                        .search(this.value)
                                        .draw();
                                }
                            });

                        }
                    });
                }
            });


            $("#LineSearch").val('');


            $("#SewingLineTable_filter").hide();

            $('[id^=SewingLine_Select_]').each(function () {
                $(this).prop('checked', false);
            });

            //$(sewingData).each(function (index, element) {
            //    var sewingline = element[1];
            //    if (sewingline == findValue[0]) {
            //        rowIndex = element[2];
            //    }
            //});

            var LineValues = $("#SewingLineID").val();
            var LineList = LineValues.split(',');

            if (LineValues != '') {

                $(LineList).each(function () {

                    $('input[Type=checkbox][SewingLine=' + this + ']').prop('checked', true);
                });
            }

            NonLoading();
        }

        function format(d, orderID) {

            var metalContaminateQty = d[13];
            return '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">' +
                '<tr><td style="width:70%">PO#:</td><td style=" text-align: right;" style="width:30%">' +
                '<input type="hidden" name="SelectedPO[' + d[2] + '].ORDERID" id="SelectedPO[' + d[2] + '].ORDERID" value="' + d[1] + '" \/>' +
                '<input type="hidden" name="SelectedPO[' + d[2] + '].CustPONO" id="SelectedPO[' + d[2] + '].CustPONO" value="' + d[3] + '" \/>' +
                d[3] +
                '</td></tr>' +
                '<tr><td>Style#:</td><td style=" text-align: right;">' + d[4] + '</td></tr>' +
                '<tr><td>Season:</td><td style=" text-align: right;">' + d[5] + '</td></tr>' +
                '<tr><td>Brand:</td><td style=" text-align: right;">' + d[6] + '</td></tr>' +

                '<tr><td>Shipmode Seq:</td><td style=" text-align: right;" class="OpenDetail" >' +
                '<input type="text" style="width:100%" readonly="readonly" onclick="open_ShipmodeSeq(\'' + d[1] + ',' + d[3] + '\');" name="SelectedPO[' + d[2] + '].Seq" id="SelectedPO[' + d[2] + '].Seq" value="' + d[11] + '" OrderID="' + orderID + '" Col="ShipmodeSeq"/>' +
                '</td></tr>' +

                '<tr><td>Article:</td><td style=" text-align: right;">' + d[12] + '</td></tr>' +
                '<tr><td>SP# Qty By Seq:</td><td style=" text-align: right;">' + d[7] + '</td></tr>' +
                '<tr><td>Cartons:</td><td style=" text-align: right;" class="OpenDetail" >' +
                '<input type="text" style="width:100%" readonly="readonly" onclick="open_cartonsDetail(\'' + d[1] + ',' + d[3] + '\');" name="SelectedPO[' + d[2] + '].Cartons" id="SelectedPO[' + d[2] + '].Cartons" value="' + d[8] + '" OrderID="' + orderID +'" Col="Cartons"/>' +
                '</td></tr>'+
                '<tr><td>Available Qty:</td><td style=" text-align: right;" class="OpenDetail" >' +
                '<input type="number" style="width:100%" name="SelectedPO[' + d[2] + '].AvailableQty" id="SelectedPO[' + d[2] + '].AvailableQty" orderQty="' + d[7]+'" value="' +

                `${currentStage == 'Final' ? d[7] : d[9]}`

                + '" OrderID="' + orderID + '" oninput="value=AvailableQtyChk(' + d[7] + ',value)" max="' + d[7] + '" min="0" Col="AvailableQty"/>' +
                '</td></tr>' +
                '<tr><td>Metal Contaminate:</td><td style=" text-align: right;">' + metalContaminateQty + '</td></tr>'+
                '</table>';
        }

        function AvailableQtyChk(max, value) {
            if (value == "") {
                value = 0;
            }
            value = parseInt(value);

            if (value > max) {
                value = max;
            }
            else if (value == "") {
                value = 0;
            }
            return value;
        }

        function onAqlInputTypeChange(value) {
            currentAqlInputType = value;

            sampleQtyEnableChange();

            // Auto需要依據AQL清單設定數值
            if (currentAqlInputType == 'Auto') {
                $("#AQLPlan").change();
            }

            // Manual 先清空後隨意填隨意填
            if (currentAqlInputType == 'Manual') {
                $('#AQLPlan').val('');
                $("#SampleSize").val(0);
                $("#AcceptQty").val(0);
                $("#RejectQty").val(0);
            }
        }

        function onInspectionStageChange(value) {
            var brandID = '@Model.BrandID';

            currentStage = value;

            // Stage 改變，Selected PO要執行以下動作：
            /*
             * 1. 所有Shipmode Seq、Carton清空
             * 2. 如果Stage選擇Final，Available Qty直接帶入Order Qty；反之則歸零，然後重新計算最下方的Total Available Qty、右方的AQL Plan
             */

            var availableQtycheck = $('input[col=AvailableQty]');


            //[Shipmode Seq]、[Carton]視窗有開啟的清空方式
            $.each(SelectedPOs, function (idx) {

                if (document.getElementById(`SelectedPO[${idx}].Cartons`) != null) {
                    document.getElementById(`SelectedPO[${idx}].Cartons`).value = "";
                }
                if (document.getElementById(`SelectedPO[${idx}].Seq`) != null) {
                    document.getElementById(`SelectedPO[${idx}].Seq`).value = "";
                }
            });

            // Stage改變，會影響到[Selected PO]區塊裡面每一筆SP#的Available Qty
            if (currentStage == "Final") {

                // 如果是Final，則AvailableQty自動待入該訂單的Orders.Qty

                // 如果[Selected PO]區塊沒展開，透過以下方式Bind AvailableQty資料
                $.each(SelectedPOs, function () {
                    var obj = this;
                    var orderID = obj.OrderID;;
                    var orderQty = obj.OrderQty;;
                    var allKeys = Object.keys(Order_AvailableQty);

                    //index9是AvailableQty
                    table.row($(`#SelectPO_${orderID}`).closest('tr')).data()[9] = orderQty;

                    $.each(allKeys, function () {
                        var key = this;
                        var tOrderID = key.split('-')[0];
                        var tSeq = key.split('-')[1];
                        if (tOrderID == orderID) {
                            Order_AvailableQty[key] = parseInt(orderQty);;
                        }
                    });

                    ////index 11是Shipmode seq
                    table.row($(`#SelectPO_${orderID}`).closest('tr')).data()[11] = '';
                    ////index 8是Cartons
                    table.row($(`#SelectPO_${orderID}`).closest('tr')).data()[8] = '';
                });

                $.each(SelectedSeqs, function () {
                    var obj = this;
                    var orderID = obj.OrderID;;
                    var seq = obj.Seq;;
                    var qty = obj.Qty;;

                    Order_AvailableQty[orderID +'-' + seq] = qty;
                });

                // 如果[Selected PO]區塊有展開，透過以下方式Bind AvailableQty資料
                $.each(availableQtycheck, function () {
                    var orderQty = $($(this)[0]).attr("orderQty");
                    var orderID = $($(this)[0]).attr("orderID");
                    var allKeys = Object.keys(Order_AvailableQty);

                    $($(this)[0]).val(orderQty);
                    $($(this)[0]).attr("readonly", "readonly");
                    //index9是AvailableQty
                    table.row($(`#SelectPO_${orderID}`).closest('tr')).data()[9] = orderQty;


                    $.each(allKeys, function () {
                        var key = this;
                        var tOrderID = key.split('-')[0];
                        var tSeq = key.split('-')[1];
                        if (tOrderID == orderID) {
                            Order_AvailableQty[key] = 0;
                        }
                    });

                    ////index 11是Shipmode seq
                    table.row($(`#SelectPO_${orderID}`).closest('tr')).data()[11] = '';
                    ////index 8是Cartons
                    table.row($(`#SelectPO_${orderID}`).closest('tr')).data()[8] = '';
                });
                Cacu_AvailableQty();
            }
            else {
                // 如果不是Final則清空ShipModeSeq、Carton、Available Qty

                // 如果[Selected PO]區塊沒展開，透過以下方式Bind AvailableQty資料
                $.each(SelectedPOs, function () {
                    var obj = this;
                    var orderID = obj.OrderID;
                    var allKeys = Object.keys(Order_AvailableQty);

                    //index9是AvailableQty
                    table.row($(`#SelectPO_${orderID}`).closest('tr')).data()[9] = 0;

                    $.each(allKeys, function () {
                        var key = this;
                        var tOrderID = key.split('-')[0];
                        var tSeq = key.split('-')[1];
                        if (tOrderID == orderID) {
                            Order_AvailableQty[key] = 0;
                        }
                    });

                    //index 11是Shipmode seq
                    table.row($(`#SelectPO_${orderID}`).closest('tr')).data()[11] = '';
                    //index 8是Cartons
                    table.row($(`#SelectPO_${orderID}`).closest('tr')).data()[8] = '';
                });

                $.each(SelectedSeqs, function () {
                    var obj = this;
                    var orderID = obj.OrderID;;
                    var seq = obj.Seq;;
                    var qty = obj.Qty;;

                    Order_AvailableQty[orderID + '-' + seq] = qty;
                });

                // 如果[Selected PO]區塊有展開，透過以下方式Bind AvailableQty資料
                $.each(availableQtycheck, function () {
                    var orderID = $($(this)[0]).attr("orderID");
                    var seq = $($(this)[0]).attr("Seq");
                    $($(this)[0]).removeAttr("readonly");
                    $($(this)[0]).val(0);
                    var allKeys = Object.keys(Order_AvailableQty);

                    //index9是AvailableQty
                    table.row($(`#SelectPO_${orderID}`).closest('tr')).data()[9] = 0;
                    $.each(allKeys, function () {
                        var key = this;
                        var tOrderID = key.split('-')[0];
                        var tSeq = key.split('-')[1];
                        if (tOrderID == orderID) {
                            Order_AvailableQty[key] = 0;
                        }
                    });

                    //index 11是Shipmode seq
                    table.row($(`#SelectPO_${orderID}`).closest('tr')).data()[11] = '';
                    //index 8是Cartons
                    table.row($(`#SelectPO_${orderID}`).closest('tr')).data()[8] = '';

                });


                Cacu_AvailableQty();
                //Cacu_AvailableQty(orderID, seq);
            }
        }

        function ClearSewing(obj) {
            $("#SewingLineID").val("");
        }

        //選擇箱子時，將資料同步到Model的標籤
        function SelectCartonChange(self) {

            var Idx = $(self).attr("Idx");
            var OrderID = $(self).attr("orderID");
            var PackingListID = $(self).attr("PackingListID");
            var CTNNo = $(self).attr("CTNNo");
            var icChecked = $(self).prop("checked");
            $("input[Type=hidden][ID=SelectCarton_" + Idx + "__Selected]").val(icChecked);

            if (icChecked == false) {
                $("#CTNSelectAll").prop("checked", false);
            }
        }

        //選擇Seq時，將資料同步到Model的標籤
        function SelectOrderShipSeqChange(self) {

            var Idx = $(self).attr("Idx");
            var OrderID = $(self).attr("orderID");
            var PackingListID = $(self).attr("PackingListID");
            var Seq = $(self).attr("Seq");
            var icChecked = $(self).prop("checked");
            $("input[Type=hidden][ID=SelectOrderShipSeq_" + Idx + "__Selected]").val(icChecked);
        }

        function onSampleSizeChange(value) {
            // 不可大於 [Total Available Qty]

            var totalavailableQtyValue = parseInt($("#totalAvailableQty").text());
            var sampleSizeValue = parseInt(value);

            if (sampleSizeValue > totalavailableQtyValue) {
                msg.WithError("[Sample Plan Qty] can not great than [Total Available Qty]");
                $("#SampleSize").val(0);
                return false;
            }
            else {
                $("#SampleSize").val(sampleSizeValue);
            }

            return true;
        }

        function checkSubmitValue() {

            if (onSampleSizeChange($("#SampleSize").val()) == false) {
                return false;
            }

            $('#SampleSize').prop('disabled', false);
            $('#AcceptQty').prop('disabled', false);
            $('#RejectQty').prop('disabled', false);

            //保存前檢查[Basic]部分都有輸入，若沒有則顯示
            if ($("#InspectionStage").val() == "" || $("#AuditDate").val() == "") {
                msg.WithError("＜Basic＞ part cannot be empty.");
                return false;
            }

            //*保存前檢查[Selected PO]部分都有輸入，若沒有則顯示
            //<Selected PO> part cannot be empty.

            //*保存前檢查[Accepted Qty]是否有輸入，若沒有則顯示
            //<Accepted Qty> cannot be empty.
            if ($("#AcceptQty").val() == "") {
                msg.WithError("＜Accepted Qty＞ cannot be empty.");
                return false;
            }
            ShowLoading();
            //*保存前檢查[Choose Inspection Stage]選擇 Final或3rd Party時，若AQL Plan為空白則顯示
            //<AQL Plan>thiscannot be empty.
            //var inspectionStage = $("#InspectionStage").val();
            //if (inspectionStage == "Final" || inspectionStage == "3rd Party") {
            //    if () {
            //        msg.WithError("<AQL Plan> cannot be empty.");
            //    }
            //}

            //*保存前依照AQL Plan選擇項目，若是選擇
            // -1.0 Level I
            // -1.0 Level II
            // -1.5 Level I
            // -2.5 Level I
            //請依照AQL Plan中所寫邏輯重抓AcceptableQualityLevels設定資料


            //為避免POST抓不到畫面上的控制項，因此要全部打開
            var trlist = $("#SelectedPOTable tbody td.details-control");

            trlist.each(function () {
                var tr = $(this).closest('tr');
                var row = table.row(tr);

                if (row.child.isShown()) {
                    // 打開的就不用管他
                    //row.child.hide();
                    //tr.removeClass('shown');
                }
                else {
                    //row.child(format(row.data())).show();
                    //tr.addClass('shown');
                    $(this).click();
                }
            });

            var ShipmodeResult = true;
            $('input[col=ShipmodeSeq]').each(function () {
                if ($(this).val() == "") {
                    msg.WithError("Shipmode Seq cannot be empty.");
                    ShipmodeResult =  false;
                }
            });

            var AQLPlanResult = true;
            $("#AQLPlan").removeAttr("disabled");
            $("#AQProLPlan").removeAttr("disabled");
            var stage = $("#InspectionStage").val();

            if ((stage == 'Final' || stage == '3rd Party') && $("#AQLPlan").val() == '' && $("#AQProLPlan").val() == '' ) {
                AQLPlanResult = false;
            }

            var CartonResult = true;
            if (stage == 'Final') {

                var cartoncheck = $('input[col=Cartons]');

                $.each(cartoncheck, function () {
                    var selectcarton = $($(this)[0]).val();
                    if (selectcarton == '' || selectcarton == undefined) {
                        CartonResult = false;
                    }
                });
            }


            if (ShipmodeResult && AQLPlanResult && CartonResult) {
                return true;
            }
            else {
                if (!ShipmodeResult) {
                    msg.WithError("Shipmode Seq cannot be empty.");
                    NonLoading();
                    return false;
                }
                if (!CartonResult) {
                    msg.WithError("＜Cartons＞ cannot be empty if inspection stage is Final.");
                    NonLoading();
                    return false;
                }
                if (!AQLPlanResult) {
                    msg.WithError("AQL Plan cannot be empty when Choose Inspection Stage is Final or 3rd Party.");
                    NonLoading();
                    return false;
                }
            }
        }

        function sampleQtyEnableChange() {
            var aqlInputType = $('#AqlInputType').val();
            var aQLPlan = $('#AQLPlan').val();

            if (aqlInputType == 'Auto') {
                $('#AQLPlan').prop('disabled', false);
                $('#SampleSize').prop('disabled', true);
                $('#AcceptQty').prop('disabled', true);
                $('#RejectQty').prop('disabled', true);
            }
            //else if (aqlInputType == 'Manual' && aQLPlan == "100% Inspection") {
            //    $('#SampleSize').prop('disabled', true);
            //    $('#AcceptQty').prop('disabled', true);
            //    $('#RejectQty').prop('disabled', true);
            //}
            else if (aqlInputType == 'Manual') {
                $('#AQLPlan').prop('disabled', true);

                $('#SampleSize').prop('disabled', false);
                $('#AcceptQty').prop('disabled', false);
                //$('#RejectQty').prop('disabled', false);
            }
        }
    </script>
}
