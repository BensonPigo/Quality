@{
    ViewBag.Title = "Detail";
}

@model DatabaseObject.ViewModel.FinalInspection.QueryReport

@section FinalInspection_head{
    <link href="~/ThirdParty/plugins/DataTables/datatables.min.css" rel="stylesheet" />
    <link href="~/ThirdParty/SciCustom/css/TableStyle.css" rel="stylesheet" />
    <link href="~/ThirdParty/plugins/sweetalert2/sweetalert2.min.css" rel="stylesheet" />
    <script src="~/ThirdParty/plugins/DataTables/datatables.min.js"></script>
    <link href="~/Areas/FinalInspection/CSS/FinalInspection.css" rel="stylesheet" />

    <link href="~/ThirdParty/plugins/bootstrap-table/bootstrap-table.css" rel="stylesheet" />
    <script src="~/ThirdParty/plugins/bootstrap-table/bootstrap-table.js"></script>
    <style type="text/css">
        .whiteBackgrond div {
            padding-bottom: 0.5em;
        }

        .valueColor {
            color: #0000FF;
        }

        tr.row-name {
            color: black;
        }

        #Detail_Cartons_wrapper tr.row-name {
            color: wheat;
        }

        #Detail_ShipmodeSeq_wrapper tr.row-name {
            color: wheat;
        }

        #tab-Change {
            width: 100%;
        }

            #tab-Change > ul {
                display: block;
                margin: 0;
                list-style: none;
            }

        .tab-title {
            list-style: none;
        }

        #tab-Change > ul > li {
            display: inline-block;
            vertical-align: top;
            margin: 0 -1px -1px 0;
            border: 1px solid #BCBCBC;
            height: 4vh;
            line-height: 25px;
            background: #CDCDCD;
            padding: 0 15px;
            list-style: none;
            box-sizing: border-box;
        }

            #tab-Change > ul > li a {
                color: #000;
                text-decoration: none;
            }

            #tab-Change > ul > li.active {
                background: #fff;
            }

        #tab-Change > .tab-inner {
            padding: 10px;
            color: #000;
            border: 1px #BCBCBC solid;
            height: 50vh;
            overflow: auto;
        }

        #Detail_Cartons_info {
            color: white
        }

        #Detail_Cartons_previous, #Detail_Cartons_next {
            color: white !important;
        }

        #Detail_Cartons_wrapper, #Detail_Cartons_wrapper > .dataTables_scrollHeadInner {
            width: 100%
        }

        #Detail_ShipmodeSeq_info {
            color: white
        }

        #Detail_ShipmodeSeq_previous, #Detail_ShipmodeSeq_next {
            color: white !important;
        }

        #Detail_ShipmodeSeq_wrapper, #Detail_ShipmodeSeq_wrapper > .dataTables_scrollHeadInner {
            width: 100%
        }

        textarea {
            height: 20px;
        }

        .red {
            color: red !important;
        }

        #divSetting, #divPOInfo {
            width: 100%;
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
        }

        .divSettingCell {
            /*display: flex;*/
            width: 12.5%;
        }

        .divPOInfoCell {
            /*display: flex;*/
            width: 16.6%;
        }

        .divPOInfoCell5 {
            width: 83%;
        }
    </style>
}

<div class="whiteBackgrond" style="height:88vh;overflow-y:scroll;">
    <div style="padding: 1em; display: flex; flex-direction: row; flex-wrap: wrap;">
        <div style="width:100%;">
            <h1 style="font-size:2em;color: #999999;">Inspection Report</h1>
            <button class="site-btn btn-blue" style="position:absolute;top:1em;right:0" onclick="ClickDownload()">Download</button>
        </div>
        <div style=" display: flex; flex-direction: row; flex-wrap: wrap; border: 1px solid gray; width: 38%; height: 20vh; padding-left: 5px;float:left;">
            <div style="width: 100%"><h1 style="font-size:1.5em">PO information</h1></div>
            <div>
                @{
                    string IsFD = Model.FinalInspection.ISFD ? "red" : string.Empty;
                    string CustPONO = string.IsNullOrEmpty(Model.FinalInspection.CustPONO) ? "1" : Model.FinalInspection.CustPONO;
                }
                <div id="divPOInfo">
                    <!--#region Row 1-->
                    <div class="divPOInfoCell">PO#</div>
                    <div class="divPOInfoCell @IsFD">@Model.FinalInspection.CustPONO</div>
                    <div class="divPOInfoCell">Style</div>
                    <div class="divPOInfoCell">@Model.StyleID</div>
                    <div class="divPOInfoCell">Brand</div>
                    <div class="divPOInfoCell">@Model.BrandID</div>
                    <!--#endregion-->
                    <!--#region Row 2-->
                    <div class="divPOInfoCell">SP#</div>
                    <div class="divPOInfoCell5">
                        <input type="text" value="@Model.SP" style="width:100%" class="@IsFD" readonly />
                    </div>
                    <!--#endregion-->
                    <!--#region Row 3-->
                    <div class="divPOInfoCell">Factory</div>
                    <div class="divPOInfoCell">@Model.FinalInspection.FactoryID</div>
                    <div class="divPOInfoCell">Total SP# Qty</div>
                    <div class="divPOInfoCell">@Model.TotalSPQty</div>
                    @if (!string.IsNullOrEmpty(Model.Dest))
                    {
                        <div class="divPOInfoCell">Destination</div>
                        <div class="divPOInfoCell">@Model.Dest</div>
                    }
                    else
                    {
                        <div class="divPOInfoCell"></div>
                        <div class="divPOInfoCell"></div>
                    }
                    <!--#endregion-->
                </div>
            </div>
        </div>
        <div style="display: flex; flex-direction: row; flex-wrap: wrap; border: 1px solid gray; width: 58%; height: 20vh; padding-left: 5px;margin-left:2px; float: left;">
            <div style="width: 100%"><h1 style="font-size:1.5em">Inspection Setting</h1></div>
            <div>
                <div id="divSetting">
                    <!--#region Row 1-->
                    <div class="divSettingCell">Inspection Stage</div>
                    <div class="divSettingCell">@Model.FinalInspection.InspectionStage</div>
                    <div class="divSettingCell">Carton</div>
                    <div class="divSettingCell">
                        <button type="button" style="min-width:50%" onclick="open_cartonsDetail()" class="site-btn btn-blue">...</button>
                    </div>
                    <div class="divSettingCell">Shipmode Seq</div>
                    <div class="divSettingCell">
                        <button type="button" style="min-width:50%" onclick="open_ShipmodeSeqDetail()" class="site-btn btn-blue">...</button>
                    </div>
                    <div class="divSettingCell"></div>
                    <div class="divSettingCell"></div>
                    <!--#endregion-->
                    <!--#region Row 2-->
                    <div class="divSettingCell">Audit Date</div>
                    <div class="divSettingCell">@Convert.ToDateTime(Model.FinalInspection.AuditDate).ToString("yyyy/MM/dd")</div>
                    <div class="divSettingCell">Available Qty</div>
                    <div class="divSettingCell">@Model.AvailableQty</div>
                    <div class="divSettingCell"></div>
                    <div class="divSettingCell"></div>
                    <div class="divSettingCell"></div>
                    <div class="divSettingCell"></div>
                    <!--#endregion-->
                    <!--#region Row 3-->
                    <div class="divSettingCell">AQL Plan</div>
                    <div class="divSettingCell">@Model.AQLPlan</div>
                    <div class="divSettingCell">Sample Plan Qty</div>
                    <div class="divSettingCell">@Model.FinalInspection.SampleSize</div>

                    <!--#endregion-->
                    <!--#region Row 4-->
                    @if (Model.FinalInspection.AcceptableQualityLevelsProUkey == 0)
                    {<div class="divSettingCell"></div>
                        <div class="divSettingCell"></div>
                        <div class="divSettingCell"></div>
                        <div class="divSettingCell"></div>
                        <div class="divSettingCell">Accepted</div>
                        <div class="divSettingCell">@Model.FinalInspection.AcceptQty</div>
                        <div class="divSettingCell">Rejected</div>
                        <div class="divSettingCell">@(Model.FinalInspection.AcceptQty+1)</div>
                        <div class="divSettingCell"></div>
                        <div class="divSettingCell"></div>
                        <div class="divSettingCell"></div>
                        <div class="divSettingCell"></div>
                    }
                    else
                    {
                        int rowCtn = 8;
                        foreach (var finalInspection_DefectDetail in Model.FinalInspection_DefectDetails)
                        {
                            <div class="divSettingCell">@finalInspection_DefectDetail.DefectCategoryDescription Accepted</div>
                            <div class="divSettingCell">@finalInspection_DefectDetail.AcceptedQty</div>
                            <div class="divSettingCell">@finalInspection_DefectDetail.DefectCategoryDescription Rejected</div>
                            <div class="divSettingCell">@(finalInspection_DefectDetail.AcceptedQty + 1)</div>
                            rowCtn--;
                        }

                    }
                    <!--#endregion-->
                    <!--#region Row 5-->
                    <div class="divSettingCell">Re-Inspection</div>
                    <div class="divSettingCell">

                        @{string strReInspection = Model.FinalInspection.ReInspection ? "Y" : "N";}
                        @strReInspection
                    </div>
                    <div class="divSettingCell"></div>
                    <div class="divSettingCell"></div>
                    <div class="divSettingCell"></div>
                    <div class="divSettingCell"></div>
                    <div class="divSettingCell"></div>
                    <div class="divSettingCell"></div>
                    <!--#endregion-->
                </div>

            </div>
        </div>
        <div style="margin: 0.5em; width: 100%;"><h1 style="font-size:2em">Inspection Detail</h1></div>
        <div id="tab-Change">
            <ul class="tab-title">
                <li link="#tab01">General</li>
                <li link="#tab02">Check List</li>
                <li link="#tab03">Defect</li>
                <li link="#tab04">Beautiful Product Audit</li>
                <li link="#tab05">Moisture</li>
                <li link="#tab06">Measurement</li>
                <li link="#tab07">Others</li>
            </ul>
            <div id="tab01" class="tab-inner">
                <div style="height:100%;overflow:scroll;">
                    @Html.Partial("~/Areas/FinalInspection/Views/Query/_Tab1_Layout.cshtml")
                </div>
            </div>
            <div id="tab02" class="tab-inner">
                @Html.Partial("~/Areas/FinalInspection/Views/Query/_Tab2_Layout.cshtml")
            </div>
            <div id="tab03" class="tab-inner">
                @Html.Partial("~/Areas/FinalInspection/Views/Query/_Tab3_Layout.cshtml")
            </div>
            <div id="tab04" class="tab-inner">
                @Html.Partial("~/Areas/FinalInspection/Views/Query/_Tab4_Layout.cshtml")
            </div>
            <div id="tab05" class="tab-inner">
                @Html.Partial("~/Areas/FinalInspection/Views/Query/_Tab5_Layout.cshtml")
            </div>
            <div id="tab06" class="tab-inner">
                @Html.Partial("~/Areas/FinalInspection/Views/Query/_Tab6_Layout.cshtml")
            </div>
            <div id="tab07" class="tab-inner">
                @Html.Partial("~/Areas/FinalInspection/Views/Query/_Tab7_Layout.cshtml")
            </div>
        </div>
        <div style="width: 100%; display: flex; flex-direction: row; flex-wrap: wrap;">
            <div style="width: 10%;">CFA</div>
            <div style="width: 10%;">@Model.FinalInspection.CFA</div>
            <div style="width: 10%;">Inpection Result</div>
            <div style="width: 10%;">@Model.FinalInspection.InspectionResult</div>
            <div style="width: 5%;">QC</div>
            <div style="width: 15%;">
                @Html.TextBoxFor(o => o.SignatureBy_QC, new { @readonly = "readonly", @style = "width:80%", @placeholder = "Click" })
                <img src="~/Image/Icon/Signature.png" id="imgSignature_QC" style=" max-width: 10%;height:auto;" />
            </div>
            <div style="width: 5%;">Production</div>
            <div style="width: 15%;">
                @Html.TextBoxFor(o => o.SignatureBy_Production, new { @readonly = "readonly", @style = "width:80%", @placeholder = "Click" })
                <img src="~/Image/Icon/Signature.png" id="imgSignature_Production" style=" max-width: 10%;height:auto;" />
            </div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;">
                @if (Model.FinalInspection.InspectionResult == "On-going")
                {
                    <button type="button" onclick="GoOnInspect()" class="site-btn btn-red">Go On Inspect</button>
                }
            </div>

            <div style="width: 10%;">Pass Qty(pcs)</div>
            <div style="width: 10%;">@Model.FinalInspection.PassQty</div>
            <div style="width: 10%;">Reject Qty(pcs)</div>
            <div style="width: 10%;">@Model.FinalInspection.RejectQty</div>
            <div style="width: 5%;">QC Manager</div>
            <div style="width: 15%;">
                @Html.TextBoxFor(o => o.SignatureBy_QCManager, new { @readonly = "readonly", @style = "width:80%", @placeholder = "Click" })
                <img src="~/Image/Icon/Signature.png" id="imgSignature_QCManager" style=" max-width: 10%;height:auto;" />
            </div>
            <div style="width: 5%;">Production Mangaer</div>
            <div style="width: 15%;">
                @Html.TextBoxFor(o => o.SignatureBy_ProductionManager, new { @readonly = "readonly", @style = "width:80%", @placeholder = "Click" })
                <img src="~/Image/Icon/Signature.png" id="imgSignature_ProductionManager" style=" max-width: 10%;height:auto;" />
            </div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;">
                @if (Model.FinalInspection.InspectionResult != "On-going")
                {
                    <button type="button" onclick="SendMail()" class="site-btn btn-blue">Send Mail</button>
                }
            </div>

            <div style="width: 10%;">Submit Date</div>
            <div style="width: 10%;">
                @if (Model.FinalInspection.SubmitDate == null)
                {
                    @:N/A
                }
                else
                {
                    @Convert.ToDateTime(Model.FinalInspection.SubmitDate).ToString("yyyy/MM/dd")
                }
            </div>
            <div style="width: 10%;">Shipment Status</div>
            <div style="width: 10%;">@Model.FinalInspection.ShipmentStatus</div>
            <div style="width: 5%;">TSD</div>
            <div style="width: 15%;">
                @Html.TextBoxFor(o => o.SignatureBy_TSD, new { @readonly = "readonly", @style = "width:80%", @placeholder = "Click" })
                <img src="~/Image/Icon/Signature.png" id="imgSignature_TSD" style=" max-width: 10%;height:auto;" />
            </div>
            <div style="width: 5%;"></div>
            <div style="width: 15%; "></div>
            <div style="width: 10%; ">
            </div>
            <div style="width: 10%;"></div>

        </div>
    </div>
</div>

<div class="detail-dialog-cartons to-edit-detail-cartons">
    <div class="detail-dialog-content dialog-content-w-icon" style="height:60vh">
        <table cellspacing="100" id="Detail_Cartons" class="table table-striped display">
            <thead>
                <tr class="row-name">
                    <th>SP</th>
                    <th>Packing List ID</th>
                    <th>CTN No</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.ListCartonInfo.Count; i++)
                {
                    <tr class="row-content" style="vertical-align: middle; text-align: center;">
                        <td>
                            @Html.DisplayFor(o => Model.ListCartonInfo[i].OrderID)
                        </td>
                        <td>
                            @Html.DisplayFor(o => Model.ListCartonInfo[i].PackinglistID)
                        </td>
                        <td>
                            @Html.DisplayFor(o => Model.ListCartonInfo[i].CTNNo)
                        </td>
                    </tr>
                }
            </tbody>

        </table>
        <br />
        <div>
        </div>
    </div>
</div>

<div class="detail-dialog-ShipmodeSeq to-edit-detail-ShipmodeSeq">
    <div class="detail-dialog-content dialog-content-w-icon" style="height:60vh">
        <table cellspacing="100" id="Detail_ShipmodeSeq" class="table table-striped display">
            <thead>
                <tr class="row-name">
                    <th>SP</th>
                    <th>Seq</th>
                    <th>Shipmode</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.ListShipModeSeq.Count; i++)
                {
                    <tr class="row-content" style="vertical-align: middle; text-align: center;">
                        <td>
                            @Html.DisplayFor(o => Model.ListShipModeSeq[i].OrderID)
                        </td>
                        <td>
                            @Html.DisplayFor(o => Model.ListShipModeSeq[i].Seq)
                        </td>
                        <td>
                            @Html.DisplayFor(o => Model.ListShipModeSeq[i].ShipmodeID)
                        </td>
                    </tr>
                }
            </tbody>

        </table>
        <br />
        <div>
        </div>
    </div>
</div>


<dialog id="diaUserList" style="height:70vh;width:30vw;">

    <button class="site-btn btn-red" id="btnDialogSave" onclick="SaveSignatureUserDialog()" jobTitle="">Save</button>
    <button class="site-btn btn-blue" onclick="CloseSignatureUserDialog()">Close</button>

    <table id="UserListTable" data-maintain-meta-data="true"></table>

</dialog>


<dialog id="diaSignature" style="height:70vh;width:70vw;">
    <div style="width:100%;display:flex;flex-direction:row;">
        <div style="width:20%">
            <h3 class="h3" id="headJobTitle"></h3>
            <input type="hidden"  id="headJobTitleVal"/>
        </div>
        <div style="width:10%">
            <select id="SignatureUserList" onchange="SignatureUserListChange()" style="height: 100%; margin: 0;"></select>

        </div>
        <div style="width:10%">
            <button class="site-btn btn-red" onclick="saveSignature()" style="height: 100%; margin: 0;">Save</button>

        </div>
        <div style="width:10%">
            <button class="site-btn btn-blue" onclick="clearSignature()" style="height: 100%; margin: 0;">Clear</button>

        </div>
        <div style="width:10%">
            <button class="site-btn btn-blue" onclick="CloseSignatureDialog()" style="height:100%;margin:0;">Close</button>

        </div>
    </div>
    <div style="width:100%;height:1vh;">
    </div>
    <canvas></canvas>

</dialog>


@section FinalInspection_script
{
    <script>
        var msg = new MessagerAlert();
        let UserListTable = $("#UserListTable");


        $(function () {
            tabChange();

            $('#Detail_Cartons').DataTable({
                "autoWidth": false,
                "info": false,
                "filter": false,
                "paging": false,
                "info": false,
                "scrollY": "50vh",
                "scrollCollapse": true,
                columnDefs: [
                    { targets: 0, width: "30%" },
                    { targets: 1, width: "30%" },
                    { targets: 2, width: "30%" },
                ]
            });

            $('#Detail_ShipmodeSeq').DataTable({
                "autoWidth": false,
                "info": false,
                "filter": false,
                "paging": false,
                "info": false,
                "scrollY": "50vh",
                "scrollCollapse": true,
                columnDefs: [
                    { targets: 0, width: "30%" },
                    { targets: 1, width: "30%" },
                    { targets: 2, width: "30%" },
                ]
            });

            $(".detail-dialog-cartons").dialog({
                autoOpen: false,
                modal: true,
                closeText: ' ',
                width: 500,
                minHeight: 400,
                position: {
                    my: "center top",
                    at: "center top",
                    of: window
                },
                dialogClass: "site-box",
                open: function (event, ui) {
                    $('.ui-widget-overlay').bind('click', function () {
                        //location.reload();//強制Refresh頁面 Benson
                        $(".ui-dialog-content").dialog('close');
                    });
                    $(this).parent().siblings().find(".ui-dialog-content").dialog('close');

                },
                close: function () {
                },
            });

            $(".to-edit-detail-cartons").dialog({
                width: "70%",
                dialogClass: "add-contact-box",
            });

            $(".detail-dialog-ShipmodeSeq").dialog({
                autoOpen: false,
                modal: true,
                closeText: ' ',
                width: 500,
                minHeight: 400,
                position: {
                    my: "center top",
                    at: "center top",
                    of: window
                },
                dialogClass: "site-box",
                open: function (event, ui) {
                    $('.ui-widget-overlay').bind('click', function () {
                        //location.reload();//強制Refresh頁面 Benson
                        $(".ui-dialog-content").dialog('close');
                    });
                    $(this).parent().siblings().find(".ui-dialog-content").dialog('close');

                },
                close: function () {
                },
            });

            $(".to-edit-detail-ShipmodeSeq").dialog({
                width: "70%",
                dialogClass: "add-contact-box",
            });


            $("#SignatureBy_QC").click(function () {
                GeneratorUserList($(this).val());
                SetBtnUserDialogSave('QC');
            });
            $("#SignatureBy_QCManager").click(function () {
                GeneratorUserList($(this).val());
                SetBtnUserDialogSave('QCManager');
            });
            $("#SignatureBy_Production").click(function () {
                GeneratorUserList($(this).val());
                SetBtnUserDialogSave('Production');
            });
            $("#SignatureBy_ProductionManager").click(function () {
                GeneratorUserList($(this).val());
                SetBtnUserDialogSave('ProductionManager');
            });
            $("#SignatureBy_TSD").click(function () {
                GeneratorUserList($(this).val());
                SetBtnUserDialogSave('TSD');
            });


            $("#imgSignature_QC").click(function () {
                if ($("#SignatureBy_QC").val() != '') {
                    $("#headJobTitle").text('QC');
                    $("#headJobTitleVal").val('QC');

                    SetSignatureUserList('QC');
                    OpenSignatureDialog();
                }
            });
            $("#imgSignature_QCManager").click(function () {
                if ($("#SignatureBy_QCManager").val() != '') {
                    $("#headJobTitle").text('QC Manager');
                    $("#headJobTitleVal").val('QCManager');
                    SetSignatureUserList('QCManager');
                    OpenSignatureDialog();
                }
            });
            $("#imgSignature_Production").click(function () {
                if ($("#SignatureBy_Production").val() != '') {
                    $("#headJobTitle").text('Production');
                    $("#headJobTitleVal").val('Production');

                    SetSignatureUserList('Production');
                    OpenSignatureDialog();
                }
            });
            $("#imgSignature_ProductionManager").click(function () {
                if ($("#SignatureBy_ProductionManager").val() != '') {
                    $("#headJobTitle").text('Production Manager');
                    $("#headJobTitleVal").val('ProductionManager');

                    SetSignatureUserList('ProductionManager');
                    OpenSignatureDialog();
                }
            });
            $("#imgSignature_TSD").click(function () {
                if ($("#SignatureBy_TSD").val() != '') {
                    $("#headJobTitle").text('TSD');
                    $("#headJobTitleVal").val('TSD');

                    SetSignatureUserList('TSD');
                    OpenSignatureDialog();
                }
            });


        });

        function tabChange() {
            var $li = $('#tab-Change > ul.tab-title li');
            $($li.eq(0).attr('link')).show();

            $($li.eq(0).addClass('active').attr('link')).siblings('.tab-inner').hide();
            $li.click(function () {
                $($(this).attr('link')).show().siblings('.tab-inner').hide();
                $(this).addClass('active').siblings('.active').removeClass('active');
            });
        }

        function open_cartonsDetail() {
            $(".to-edit-detail-cartons").dialog("open");
            $("#Detail_Cartons").DataTable().columns.adjust();
        }

        function open_ShipmodeSeqDetail() {
            $(".to-edit-detail-ShipmodeSeq").dialog("open");
            $("#Detail_ShipmodeSeq").DataTable().columns.adjust();
        }

        function OpenDefectPicture(DetailUkey, RowIndex) {

            // Ukey = -1代表還沒有這筆Detail紀錄
            if (DetailUkey == -1) {
                //msg.WithInfo("No Picture");
                window.open('@Url.Action("DefectPicture", "Inspection")?RowIndex=' + RowIndex, "Picture", config = 'toolbar=no,status=no,location=no,width=700,height=600');
            }
            else {
                window.open('@Url.Action("DefectPicture", "Inspection")?DetailUkey=' + DetailUkey, "Picture", config = 'toolbar=no,status=no,location=no,width=700,height=600');
            }
        }

        function OpenBAPicture(DetailUkey, RowIndex) {

            // Ukey = -1代表還沒有這筆Detail紀錄
            if (DetailUkey == -1) {
                window.open('@Url.Action("BAPicture", "Inspection")?RowIndex=' + RowIndex, "Picture", config = 'toolbar=no,status=no,location=no,width=700,height=600');
            }
            else {
                window.open('@Url.Action("BAPicture", "Inspection")?DetailUkey=' + DetailUkey, "Picture", config = 'toolbar=no,status=no,location=no,width=700,height=600');
            }
        }

        function OpenOthersPicture() {
            window.open('@Url.Action("OthersPicture", "Inspection")?callFrom=Query&FinalInspectionID=@Model.FinalInspection.ID', "Picture", config = 'toolbar=no,status=no,location=no,width=700,height=600');
        }

        function ClickDownload() {

            window.location.href = '@Url.Action("Download")?FinalInspectionID='+'@Model.FinalInspection.ID';

        }

        function GoOnInspect() {
            ShowLoading();
            window.location.href = '@Url.Action(Model.GoOnInspectURL,"Inspection",new { FinalInspectionID = Model.FinalInspection.ID})';
        }

        function SendMail() {
            var url = '@Url.Action("SendMail")?FinalInspectionID='+'@Model.FinalInspection.ID';
            $.ajax({
                url: url,
                type: 'POST',
                dataType: "json",
                async: false,
                success: function (data) {

                    if (data.Result) {
                        msg.WithSuccess("Success!!");
                    }
                    else {
                        msg.WithError(data.ErrorMessage);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });

        }

        function OpenSignatureUserDialog() {

            let infoModal = document.querySelector(`#diaUserList`);
            infoModal.showModal();

        }

        function CloseSignatureUserDialog() {

            let infoModal = document.querySelector(`#diaUserList`);
            infoModal.close();
        }

        function GeneratorUserList(userIDs) {
            var url = '@Url.Action("GetSignatureUserList")' + '?userIDs=' + userIDs;

            var columns = [
                {
                    field: "Selected", title: "", searchable: false,checkbox:true,
                },
                {
                    field: "UserID", title: "User ID"
                },
                {
                    field: "UserName", title: "User Name"
                },
            ];
            UserListTable.bootstrapTable('destroy').bootstrapTable({
                toggle: "table",
                url: url,
                method: 'GET',
                columns: columns,
                search: true,

            });
            UserListTable.bootstrapTable('refreshOptions', { columns: columns, url: '' });
            OpenSignatureUserDialog('');
        }

        function SetBtnUserDialogSave(jobTitle) {
            $("#btnDialogSave").attr('jobTitle', jobTitle);
        }

        function SaveSignatureUserDialog() {
            let jobTitle = $("#btnDialogSave").attr('jobTitle');
            let finalInspectionID = '@Model.FinalInspection.ID';
            let allData = UserListTable.bootstrapTable('getData', { useCurrentPage: false, includeHiddenRows: true, unfiltered: true });
            let selectedUserIDs = [];
            let selectedDatas = [];

            $.map(allData, function (data, index, array) {
                if (data.Selected === true) {
                    data.FinalInspectionID = '@Model.FinalInspection.ID';
                    data.JobTitle = jobTitle;
                    selectedDatas.push(data);
                    selectedUserIDs.push(data.UserID);
                }
            });

            $.ajax({
                url: "@Url.Action("PostSignatureUserList")",
                type: 'POST',
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ FinalInspectionID: finalInspectionID, JobTitle: jobTitle, allData: selectedDatas }),
                async: false,
                success: function (data) {

                    if (data.Result) {
                        var newUserIDs = selectedUserIDs.join(',');
                        $("#SignatureBy_" + jobTitle).val(newUserIDs);
                        CloseSignatureUserDialog();
                    }
                    else {
                        CloseSignatureUserDialog();
                        msg.WithError(data.ErrorMessage);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    CloseSignatureUserDialog();
                    msg.WithError(xhr.responseText);
                }
            });
        }



        function OpenSignatureDialog() {
            let infoModal = document.querySelector(`#diaSignature`);
            infoModal.showModal();
        }

        function CloseSignatureDialog() {

            let infoModal = document.querySelector(`#diaSignature`);
            infoModal.close();
            clearSignature();
        }

        function SetSignatureUserList(jobTitle) {

            let userIDs = $("#SignatureBy_" + jobTitle).val().split(',');
            $("#SignatureUserList").empty();
            $.map(userIDs, function (userID, index, array) {

                $("#SignatureUserList").append(`<option value="${userID}">${userID}</option>`);
            });
            SignatureUserListChange();
        }

        function SignatureUserListChange() {
            clearSignature();

            let jobTitle = $("#headJobTitleVal").val();
            let userID = $("#SignatureUserList").val();
            GetSignature(jobTitle, userID);
        }

        function GetSignature(jobTitle, userID) {
            let finalInspectionID = '@Model.FinalInspection.ID';

            var param =
            {
                FinalInspectionID: finalInspectionID,
                JobTitle: jobTitle,
                UserID: userID
            };
            $.ajax({
                url: "@Url.Action("GetSignature")",
                type: 'POST',
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ Req: param }),
                async: false,
                success: function (data) {

                    if (data.Result) {
                        var Signature_Base64 = data.Data.Signature_Base64;
                        let image = new Image();
                        image.src = Signature_Base64; // 替換成實際圖片source

                        // 圖片載入完成後，再繪製到Canvas
                        image.onload = function () {
                            showPngData(image);
                        }
                    }
                    else {
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    msg.WithError(xhr.responseText);
                }
            });
        }

        function InsertSignature(img) {

            let finalInspectionID = '@Model.FinalInspection.ID';
            let jobTitle = $("#headJobTitleVal").val();
            let userID = $("#SignatureUserList").val();

            var param =
            {
                FinalInspectionID: finalInspectionID,
                JobTitle: jobTitle,
                UserID: userID,
                Signature: img
            };
            $.ajax({
                url: "@Url.Action("InsertSignature")",
                type: 'POST',
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ Req: param }),
                async: false,
                success: function (data) {

                    CloseSignatureDialog();
                    if (data.Result) {
                        msg.WithSuccess("Success!!");
                    }
                    else {
                        msg.WithError(data.ErrorMessage);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    msg.WithError(xhr.responseText);
                }
            });
        }
        async function GetCanvasBase64(blob) {


            var base64 = await convertFile(blob);
            var img = base64.replace("data:image/jpg;base64,", "").replace("data:image/jpeg;base64,", "").replace("data:image/png;base64,", "");

            InsertSignature(img);
        }

        // 使用FileReader讀取檔案，並且回傳Base64編碼後的source
        function convertFile(file) {
            return new Promise((resolve, reject) => {
                // 建立FileReader物件
                let reader = new FileReader()
                // 註冊onload事件，取得result則resolve (會是一個Base64字串)
                reader.onload = () => { resolve(reader.result) }
                // 註冊onerror事件，若發生error則reject
                reader.onerror = () => { reject(reader.error) }
                // 讀取檔案
                reader.readAsDataURL(file)
            })
        }

        ////////////////


        const config = {
            //width: 400,
            //height: 200,
            width: $("#diaSignature").width() ,
            height: $("#diaSignature").height() * 0.92,
            lineWidth: 5,
            strokeStyle: 'red',
            lineCap: 'round',
            lineJoin: 'round',
        }

        const canvas = document.querySelector('canvas')

        //var sizeWidth = $("#diaSignature").width() * 0.99,
        //    sizeHeight = $("#diaSignature").height() * 0.9;

        //canvas.width = sizeWidth;
        //canvas.height = sizeHeight;
        //canvas.style.width = sizeWidth;
        //canvas.style.height = sizeHeight;

        canvas.width = config.width
        canvas.height = config.height
        canvas.style.width = config.width
        canvas.style.height = config.height

        canvas.style.border = '1px solid #000'
        const ctx = canvas.getContext('2d')
        ctx.fillStyle = 'transparent'
        ctx.fillRect(0, 0, config.width, config.height);

        const client = {
            offsetX: 0,
            offsetY: 0,
            endX: 0,
            endY: 0
        }

        const mobileStatus = (/Mobile|Android|iPhone/i.test(navigator.userAgent))

        const init = event => {
            const { offsetX, offsetY, pageX, pageY } = mobileStatus ? event.changedTouches[0] : event
            client.offsetX = offsetX
            client.offsetY = offsetY
            client.endX = pageX - canvas.getBoundingClientRect().left;
            client.endY = pageY - canvas.getBoundingClientRect().top;

            ctx.beginPath()
            ctx.lineWidth = config.lineWidth
            ctx.strokeStyle = config.strokeStyle
            ctx.lineCap = config.lineCap
            ctx.lineJoin = config.lineJoin
            ctx.moveTo(client.endX, client.endY)
            window.addEventListener(mobileStatus ? "touchmove" : "mousemove", draw)
        }

        const draw = event => {
            const { pageX, pageY } = mobileStatus ? event.changedTouches[0] : event
            client.endX = pageX - canvas.getBoundingClientRect().left;
            client.endY = pageY - canvas.getBoundingClientRect().top;

            ctx.lineTo(client.endX, client.endY)
            ctx.stroke()
        }

        const cloaseDraw = () => {
            ctx.closePath()
            window.removeEventListener(mobileStatus ? "touchmove" : "mousemove", draw)
        }

        const showPngData = (image) => {
            ctx.drawImage(image, 0, 0, canvas.width, canvas.height);
        }

        window.addEventListener(mobileStatus ? "touchstart" : "mousedown", init)
        window.addEventListener(mobileStatus ? "touchend" : "mouseup", cloaseDraw)

        const clearSignature = () => {
            ctx.clearRect(0, 0, config.width, config.height)
        }

        const saveSignature = () => {

            canvas.toBlob(blob => {

                //// 下載.png
                //const date = Date.now().toString()
                //const a = document.createElement('a')
                //a.download = `${date}.png`
                //a.href = URL.createObjectURL(blob)
                //a.click()
                //a.remove()

                GetCanvasBase64(blob);
            })
        }
        ////////////////
    </script>
}