
@using DatabaseObject.ViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string download = ViewData["tempFilePath"] == null ? "" : ViewData["tempFilePath"].ToString();
    string QueryType = Model.QueryType;
    bool isReadOnly = true;

    List<string> stageList = new List<string>();
    List<string> categoryList = new List<string>();
    if (Model.DataList != null || Model.DataList.Count > 0)
    {
        stageList = Model.DataList.Select(o => o.SampleStage).Distinct().ToList();
        categoryList = Model.DataList.Select(o => o.CommentsCategory).Distinct().ToList();
    }

}

@model CFTComments_ViewModel


<link href="~/ThirdParty/plugins/DataTables/datatables.min.css" rel="stylesheet" />
<link href="~/ThirdParty/SciCustom/css/TableStyle.css" rel="stylesheet" />
<link href="~/ThirdParty/plugins/sweetalert2/sweetalert2.min.css" rel="stylesheet" />
<script src="~/ThirdParty/plugins/DataTables/datatables.min.js"></script>

<style type="text/css">
    .dataTables_wrapper {
        position: static;
    }

    h3, label, #myTable_info {
        color: white
    }

    #myTable_previous, #myTable_next {
        color: white !important;
    }

    select {
        color: wheat
    }

    .btnmargin {
        margin-left: 10px;
        margin-top: 10px;
    }

    tfoot input {
        width: 100%;
        padding: 3px;
        box-sizing: border-box;
    }

    td {
        padding: 5px 5px 5px 5px;
    }

    .readonly {
        background-color: lightgray;
    }

    .button {
        width: 7vw;
    }
</style>
<div class="main-content">

    <header class="page-header">
        <h3>
            <i class=""></i><span>CFT Comments</span>
        </h3>
        <div class="breadcrumb">
            <div>Home</div>
            <div class="current">CFT Comments</div>
        </div>
    </header>


    <div class="main-area">

        <div class="content-scroll">
            <div class="inner-scroll" style="float:left">

                <div>
                    @using (Html.BeginForm("Query", ViewContext.RouteData.GetRequiredString("Controller"), FormMethod.Post, new { @class = "", @name = "SearchFrom", @onsubmit = "", @id = "SearchFrom" }))
                    {
                        <div>
                            <table>
                                <tr>
                                    @{
                                        isReadOnly = !(QueryType == "Style");
                                    }
                                    <td>
                                        @Html.RadioButtonFor(o => o.QueryType, "Style", new { @ID = "TypeStyle", @class = "Radio" })
                                    </td>
                                    <td>
                                        <label class="FindLab">Brand</label>
                                    </td>
                                    <td>
                                        @if (isReadOnly)
                                        {
                                            @Html.TextBoxFor(o => o.BrandID, new { @value = Model.BrandID, @readonly = "readonly" })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(o => o.BrandID, new { @value = Model.BrandID, @style = "width:9vw" })
                                            <input id="btnBrandID" onclick="OpenWindow('BrandID')" type="button" class="site-btn btn-blue" style="margin:0;border: 2px solid transparent;" name="" value="..." />

                                        }
                                    </td>
                                    <td>
                                        <label class="FindLab">Season</label>
                                    </td>
                                    <td>
                                        @if (isReadOnly)
                                        {
                                            @Html.TextBoxFor(o => o.SeasonID, new { @value = "Model.SeasonID", @readonly = "readonly" })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(o => o.SeasonID, new { @value = Model.SeasonID, @style = "width:9vw" })
                                            <input id="btnSeasonID" onclick="OpenWindow('SeasonID')" type="button" class="site-btn btn-blue" style="margin:0;border: 2px solid transparent;" name="" value="..." />
                                        }
                                    </td>
                                    <td>
                                        <label class="FindLab" for="TypeStyle">Style</label>
                                    </td>
                                    <td>
                                        @if (isReadOnly)
                                        {
                                            @Html.TextBoxFor(o => o.StyleID, new { @value = Model.StyleID, @readonly = "readonly" })
                                        }
                                        else
                                        {

                                            @Html.TextBoxFor(o => o.StyleID, new { @value = Model.StyleID, @style = "width:9vw" })
                                            <input id="btnStyleID" onclick="OpenWindow('StyleID')" type="button" class="site-btn btn-blue" style="margin:0;border: 2px solid transparent;" name="" value="..." />
                                        }
                                    </td>
                                    <td>
                                        <input type="submit" class="button" name="action:Query" id="btnFind" value="Find" />
                                    </td>
                                </tr>
                                <tr>
                                    @{
                                        isReadOnly = !(QueryType == "OrderID");
                                    }
                                    <td>
                                        @Html.RadioButtonFor(o => o.QueryType, "OrderID", new { @ID = "TypeSP", @class = "Radio", @value = Model.SampleStage })
                                    </td>
                                    <td>
                                        <label class="FindLab" for="TypeSP">SP#</label>
                                    </td>
                                    <td>
                                        @if (isReadOnly)
                                        {
                                            @Html.TextBoxFor(o => o.OrderID, new { @value = Model.OrderID, @readonly = "readonly" })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(o => o.OrderID, new { @value = Model.OrderID })
                                        }
                                    </td>
                                    <td>
                                        <label class="FindLab">Sample Stage</label>
                                    </td>
                                    <td colspan="3">
                                        @Html.TextBoxFor(o => o.SampleStage, new { @class = "readonly", @value = Model.SampleStage })
                                    </td>
                                    <td>
                                        <input type="submit" class="button" name="action:ToExcel" id="btnExcel" value="To Excel" />
                                    </td>
                                </tr>
                            </table>
                        </div>
                    }
                </div>
                <br />
                <div>
                    <table id="myTable" class="table table-striped display" style="text-align:center">
                        <thead>
                            <tr class="row-name">
                                <th>Comments Category</th>
                                @foreach (var stage in stageList)
                                {
                                    <th>@stage</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var category in categoryList)
                            {
                                <tr class="row-content">
                                    <td>
                                        @Html.DisplayFor(modelItem => category)
                                    </td>
                                    @foreach (var stage in stageList)
                                    {
                                        var data = Model.DataList.Where(o => o.SampleStage == stage && o.CommentsCategory == category);
                                        string comment = data.Any() ? data.FirstOrDefault().Comnments.Replace("<br>", " ") : string.Empty;
                                        <td>
                                            @comment
                                        </td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <br />

            </div>
        </div>
    </div>


</div>

<script type="text/javascript">

    var msg = new MessagerAlert();

    $(function () {

        if ('@download' != '') {
            window.location.href = '@download';
        }
        QueryButtonBind();

        @Html.Raw(Model.ErrorMessage);

        $('#myTable').DataTable({
            "pageLength": 10,
            initComplete: function () {
            }
        });

        $(".Radio").click(function () {
            if ($("#TypeStyle").prop("checked")) {
                $("#OrderID").val("");
                $("#SampleStage").val("");

                $("#BrandID").removeAttr("readonly");
                $("#btnBrandID").removeAttr("disabled");

                $("#SeasonID").removeAttr("readonly");
                $("#btnSeasonID").removeAttr("disabled");

                $("#StyleID").removeAttr("readonly");
                $("#btnStyleID").removeAttr("disabled");

                $("#OrderID").attr("readonly", "readonly");
            }
            if ($("#TypeSP").prop("checked")) {
                $("#BrandID").val("");
                $("#SeasonID").val("");
                $("#StyleID").val("");
                $("#OrderID").removeAttr("readonly");

                $("#BrandID").attr("readonly", "readonly");
                $("#btnBrandID").attr("disabled", "disabled");

                $("#SeasonID").attr("readonly", "readonly");
                $("#btnSeasonID").attr("disabled", "disabled");

                $("#StyleID").attr("readonly", "readonly");
                $("#btnStyleID").attr("disabled", "disabled");
            }
        });


        $("#OrderID").blur(function () {

            //選到SP#才需要查資料
            if ($("#TypeSp").prop("checked")) {
                $.ajax({
                    url: '@Url.Action("GetOrderinfo")',
                    data: { OrderID: $(this).val() },
                    type: 'POST',
                    dataType: "json",
                    async: false,
                    success: function (res) {

                        if (res.Result) {
                            // 表頭塞值
                            $("#StyleID").val(res.StyleID);
                            $("#SampleStage").val(res.SampleStage);
                            $("#BrandID").val(res.BrandID);
                            $("#SeasonID").val(res.SeasonID);

                        }
                        else {
                            msg.WithErrorCheck(res.ErrorMessage, function () {
                                location.reload();
                            });
                        }

                    }
                });
            }
        });

    });

    function QueryButtonBind() {
        $("#BrandID").blur(function () {
            $.ajax({
                url: "@Url.Action("BrandList", "PublicWindow",new { Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#BrandID").val('');
                        msg.WithError('Brand Not Found');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $("#SeasonID").blur(function () {
            var BrandID = $('#BrandID').val();
            $.ajax({
                url: "@Url.Action("SeasonList", "PublicWindow",new { Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: BrandID, SeasonID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#SeasonID").val('');
                        msg.WithError('Season Not Found');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });

        $("#StyleID").blur(function () {
            var BrandID = $('#BrandID').val();
            var SeasonID = $('#SeasonID').val();
            $.ajax({
                url: "@Url.Action("StyleList", "PublicWindow",new { Area=""})",
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BrandID: BrandID, SeasonID: SeasonID, StyleID: $(this).val(), ReturnType: "JSON" }),
                async: true,
                success: function (data) {
                    if (data.length == 0) {
                        $("#StyleID").val('');
                        msg.WithError('Style Not Found');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                }
            });
        });
    }

    function OpenWindow(WindowType) {
        if (WindowType == "BrandID") {
            window.open('@Url.Action("BrandList", "PublicWindow",new { Area=""})', WindowType, config = 'toolbar=no,status=no,location=no,width=400,height=650');
        }
        if (WindowType == "SeasonID") {
            window.open(`@Url.Action("SeasonList", "PublicWindow",new { Area=""})?BrandID=${$("#BrandID").val()}`, WindowType, config = 'toolbar=no,status=no,location=no,width=400,height=650');
        }
        if (WindowType == "StyleID") {
            var para = "?BrandID=" + $('#BrandID').val() + "&SeasonID=" + $('#SeasonID').val();
            window.open('@Url.Action("StyleList", "PublicWindow",new { Area=""})' + para, WindowType, config = 'toolbar=no,status=no,location=no,width=400,height=650');
        }
    }

    function GetBrandList(BrandID) {
        $("#BrandID").val(BrandID);
        // 在這邊取得開窗選擇的Brand，進行後續動作
    }
    function GetSeasonList(SeasonID) {
        $("#SeasonID").val(SeasonID);
        // 在這邊取得開窗選擇的Brand，進行後續動作
    }
    function GetStyleList(StyleID) {
        $("#StyleID").val(StyleID);
        // 在這邊取得開窗選擇的Brand，進行後續動作
    }
</script>

