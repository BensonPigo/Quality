@using DatabaseObject.ViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model Inspection_ViewModel
<link href="~/ThirdParty/plugins/jquery-magnific-popup/magnific-popup.css" rel="stylesheet" />
<link href="~/ThirdParty/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" />
<script src="~/ThirdParty/plugins/jquery-magnific-popup/jquery.magnific-popup.js"></script>
<style type="text/css">
    .row {
        --bs-gutter-x: 1.5rem;
        --bs-gutter-y: 0;
        display: flex;
        flex-wrap: wrap;
        width: 95vw;
        margin-top: calc(var(--bs-gutter-y) * -1);
        margin-right: calc(var(--bs-gutter-x)/ -2);
        margin-left: calc(var(--bs-gutter-x)/ -2);
    }

        .row > * {
            flex-shrink: 0;
            width: 100%;
            max-width: 100%;
            padding-left: calc(var(--bs-gutter-x)/ 2);
        }

    .rowHeader {
        font-size: 1.1vw;
        font-weight: bold;
    }

    .col-auto {
        width: auto;
    }

        .col-auto > p {
            padding: 0
        }

    .InfoTitle {
        color: #ffffff;
    }

    .table {
        font-size: 1rem;
    }

    .table-striped > tbody > tr > td > input[type="text"] {
        width: 11em;
    }

    .table-striped > tbody > tr:nth-of-type(even),
    .table-striped > tbody > tr:nth-of-type(even) > td > input,
    .table-top3 > thead > tr {
        background: #F0F2F2;
    }

    .table-striped > tbody > tr:nth-of-type(odd),
    .table-top3 > tbody > tr {
        background: #ffffff;
    }

        .table-striped > tbody > tr > td,
        .table-top3 > tbody > tr > td {
            padding: 1px 5px;
        }

    .btn-blue {
        background-color: #4fc1e9 !important;
    }

    #SelectItemBackground {
        background-color: rgba(204, 204, 204, 0.5);
        bottom: 0;
        left: 0;
        position: fixed;
        right: 0;
        top: 0;
        z-index: 1040;
    }

    .SelectItem {
        width: 15vw;
        height: 45vh;
        position: absolute;
        left: 42vw;
        top: 30vh;
        z-index: 1041;
        overflow-y: auto;
    }

    .FilterInput {
        background-image: url('../../../../Image/searchicon.png'); /* Add a search icon to input */
        background-position: 10px 12px; /* Position the search icon */
        background-repeat: no-repeat; /* Do not repeat the icon image */
        width: 100%; /* Full-width */
        font-size: 1rem; /* Increase font-size */
        padding: 12px 20px 12px 40px; /* Add some padding */
        border: 1px solid #ddd; /* Add a grey border */
    }

    .FilterUL {
        /* Remove default list styling */
        list-style-type: none;
        padding: 0;
        margin: 0;
    }

        .FilterUL li a {
            border: 1px solid #ddd; /* Add a border to all links */
            margin-top: -1px; /* Prevent double borders */
            background-color: #f6f6f6; /* Grey background color */
            padding: 12px; /* Add some padding */
            text-decoration: none; /* Remove default text underline */
            font-size: 1rem; /* Increase the font-size */
            color: black; /* Add a black text color */
            display: block; /* Make it into a block element to fill the whole list */
        }

            .FilterUL li a:hover:not(.header) {
                background-color: #eee; /* Add a hover effect to all links, except for headers */
            }

    .para {
        background-color: #f6f6f6;
        border: 1px solid #ddd;
        font-size: 1rem;
        padding: 11px;
    }

    .black {
        color: black !important;
    }

    .font1rem {
        font-size: 1rem;
    }

    .font2rem {
        font-size: 2rem;
    }

    .middBtn {
        margin: 0;
        border: 0;
        width: 9.6vw;
        height: 8vh;
        font-weight: bold;
        margin-bottom: 1rem;
    }

    .rightBtn {
        margin: 0;
        border: 0;
        width: 7vw;
        height: 8vh;
        font-weight: bold;
        margin-bottom: 1rem;
    }

    #DefectType td:nth-child(1),
    #DefectType td:nth-child(2) {
        width: 3vw;
        cursor: pointer;
    }

    #DefectType td {
        vertical-align: middle;
        text-align: center;
    }

    #Switch {
        width: 21vw;
        height: 25vh;
        position: absolute;
        left: 40vw;
        top: 40vh;
        z-index: 1041;
        background-color: white;
        vertical-align: middle;
        text-align: center;
        font-size: 1em;
        font-weight: bold;
    }

    #AddDefect {
        width: 72vw;
        height: 82vh;
        position: absolute;
        left: 15vw;
        top: 13vh;
        z-index: 1041;
        background-color: white;
        border: solid 1px black;
        vertical-align: middle;
        text-align: center;
        font-size: 1em;
        font-weight: bold;
    }

    #ReworkCardNoSelect {
        width: 52vw;
        height: 84vh;
        position: absolute;
        left: 20vw;
        top: 10vh;
        z-index: 1041;
        background-color: white;
        border: solid 1px black;
        font-size: 1em;
        font-weight: bold;
        padding: 1em;
    }

        #ReworkCardNoSelect .ReworkCardNoOuter {
            width: 50vw;
            height: 71vh;
            overflow: auto;
            margin-top: 7px;
        }

            #ReworkCardNoSelect .ReworkCardNoOuter .ReworkCardNoInside {
                vertical-align: middle;
            }

                #ReworkCardNoSelect .ReworkCardNoOuter .ReworkCardNoInside > input {
                    padding: 4em 4em;
                    border: 0;
                    margin: 1em;
                }

    .DefectTable {
        font-size: 1rem;
        font-weight: bold;
        border: solid 1px black;
    }

        .DefectTable > thead > tr {
            background-color: gray;
        }

            .DefectTable > thead > tr > th {
                padding: 1em 2em 1em 2em;
            }

        .DefectTable > tbody > tr > td {
            border: solid 1px gray;
            cursor: pointer;
        }

        .DefectTable .tdEmpty {
            padding: 2em 1em 2em 1em;
        }

        .DefectTable .tdValue {
            padding: 1em;
        }

    .selectDefect {
        background-color: #4fc1e9;
    }

    .ReworkCardNo[idx='Fixed'] {
        background-color: cadetblue;
    }

    .ReworkCardNo[idx='Rework'] {
        background-color: #a4a9ae;
    }

    .selectReworkCard {
        background-color: brown !important;
    }

    .SelectItemV2 {
        width: 11em;
        position: fixed;
        z-index: 9;
    }

    #ReworkList {
        width: 73vw;
        height: 84vh;
        position: absolute;
        left: 15vw;
        top: 10vh;
        z-index: 1041;
        background-color: white;
        border: solid 1px black;
        font-size: 1em;
        font-weight: bold;
        padding: 1em;
    }

    .ReworkListRowHeader {
        color: black;
        font-size: 1.1vw;
        font-weight: bold;
    }

    .ReworkListTag {
        width: 6vw;
        float: left;
    }

        .ReworkListTag > div {
            border: solid 1px black;
            text-align: center;
            background-color: lightgray;
            cursor: pointer;
        }
            .ReworkListTag > div:hover {
                background-color: gray;
            }

            .ReworkListTag > div.selectTag {
                background-color: white;
            }

    .ReworkListTable {

    }
        .ReworkListTable > thead > tr > th {
            padding: 0.5em;
        }

        .ReworkListTable > tbody > tr > td {
            padding: 1em;
        }

        .ReworkListTable > tbody > tr > td > input[type='checkbox'] {
            width: 3em;
            height: 2em;
            vertical-align: middle;
        }

    .ReworkListButton {
        padding: 1em;
    }

        .ReworkListButton > div {
            width: 10em;
            float: left;
        }

        .ReworkListButton input[type="button"] {
            cursor: pointer;
            font-weight: bolder;
        }

    .ReworkListButtonAction {
        width: 11vw;
        position: relative;
        top: -15em;
        border: solid 1px lightgray;
    }

        .ReworkListButtonAction > input[type="button"] {
            width: 100%;
        }

    .ReworkListButtonDispose {
        width: 11vw;
        position: relative;
        top: -12em;
        border: solid 1px lightgray;
    }

        .ReworkListButtonDispose > input[type="button"] {
            width: 100%;
            cursor: pointer;
        }

    .ReworkListTableAction {
        width: 11vw;
        position: absolute;
        border: solid 1px lightgray;
        z-index: 2;
    }
        .ReworkListTableAction > input[type="button"] {
            width: 100%;
        }

    #CFTComments {
        width: 73vw;
        height: 84vh;
        position: absolute;
        left: 15vw;
        top: 10vh;
        z-index: 1041;
        background-color: white;
        border: solid 1px black;
        font-size: 1em;
        font-weight: bold;
        padding: 1em;
    }

    .CFTCommentsRowHeader {
        color: black;
        font-size: 1.1vw;
        font-weight: bold;
    }

    .CFTCommentsTable {
        width: 69vw;
    }

        .CFTCommentsTable > thead > tr > th {
            text-align: center;
            vertical-align: middle;
        }

        .CFTCommentsTable > tbody > tr > td {
            text-align: center;
            vertical-align: middle;
        }

            .CFTCommentsTable > tbody > tr > td > textarea {
                min-height: 14vh;
            }

    #PictureDuringDummyFitting {
        width: 73vw;
        height: 84vh;
        position: absolute;
        left: 15vw;
        top: 10vh;
        z-index: 1041;
        background-color: white;
        border: solid 1px black;
        font-size: 1em;
        font-weight: bold;
        padding: 1em;
    }

    .PictureDuringDummyFittingRowHeader {
        color: black;
        font-size: 1.1vw;
        font-weight: bold;
    }

    .PictureDuringDummyFittingTable {
        width: 71vw;
        height: 70vh;
    }

        .PictureDuringDummyFittingTable > thead > tr > th {
            width: 23vw;
            text-align: center;
            vertical-align: middle;
        }

        .PictureDuringDummyFittingTable > thead > tr > th img{
           cursor: pointer;
        }

        .PictureDuringDummyFittingTable > tbody > tr > td {
            text-align: center;
            vertical-align: middle;
        }
</style>

<div class="main-content">
    <header class="page-header">
        <h3>
            <i class="icon-users"></i><span>Inspection</span>
        </h3>
        <div class="breadcrumb" style="justify-content: flex-end;">
            <input id="btnSwitch" type="button" class="site-btn btn-blue" style="margin:0;border:0;" name="Switch" value="Switch" />
        </div>
    </header>

    <div class="main-area">
        <div class="content-scroll">
            <div class="inner-scroll">
                <div class="row rowHeader">
                    <div class="col-auto"><p class="InfoTitle">Factory</p></div>
                    <div class="col-auto"><p class="darkblue">@Model.FactoryID</p></div>
                    <div class="col-auto"><p class="InfoTitle">Line</p></div>
                    <div class="col-auto"><p class="darkblue">@Model.Line</p></div>
                    <div class="col-auto"><p class="InfoTitle">Inspection Date</p></div>
                    <div class="col-auto"><p class="darkblue">@Model.InspectionDate.ToString("yyyy/MM/dd")</p></div>
                    <div class="col-auto"><p class="InfoTitle">Inspector</p></div>
                    <div class="col-auto"><p class="darkblue">@ViewBag.UserID</p></div>
                    <div class="col-auto"><p class="InfoTitle">Brand</p></div>
                    <div class="col-auto"><p class="darkblue">@Model.Brand</p></div>
                </div>

                <div style="width: 90vw; height: 92vh; background-color: white;">
                    <div style="width:40vw; float:left;">
                        <div style="width: 40vw;">
                            <table style="width: 40vw;" class="table table-striped">
                                <tbody>
                                    <tr>
                                        <td>Style#</td>
                                        <td colspan="3" align="left">
                                            <input id="txtStyle" type="text" readonly="readonly" />
                                            <input id="btnStyleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" name="StyleSelectItem" value="..." />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>SP#</td>
                                        <td colspan="3">
                                            <input id="txtSP" type="text" readonly="readonly"/>
                                            <input id="btnSPSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" name="SPSelectItem" value="..." />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="width: 6.8vw;">Article</td>
                                        <td style="width: 12vw;">
                                            <input id="txtArticle" type="text" style="width: 8em;" readonly="readonly"/>
                                            <input id="btnArticleSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" name="ArticleSelectItem" value="..." />
                                        </td>
                                        <td style="width: 5.7vw;">Size</td>
                                        <td style="width: 12vw;">
                                            <input id="txtSize" type="text" style="width: 8em;" readonly="readonly"/>
                                            <input id="btnSizeSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" name="SizeSelectItem" value="..." />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>Production Type</td>
                                        <td>
                                            <input id="txtProductType" type="text" style="width: 8em;" readonly="readonly"/>
                                            <input id="btnProductTypeSelectItem" type="button" class="site-btn btn-blue" style="margin:0;border:0;" name="ProductTypeSelectItem" value="..." />
                                        </td>
                                        <td colspan="2"><input id="txtProductTypePMS" type="text" readonly="readonly" /></td>
                                    </tr>
                                    <tr>
                                        <td>Brand</td>
                                        <td><input id="txtBrand" type="text" readonly="readonly" /></td>
                                        <td>Season</td>
                                        <td><input id="txtSeason" type="text" readonly="readonly" /></td>
                                    </tr>
                                    <tr>
                                        <td>Sample Stage</td>
                                        <td><input id="txtSampleStage" type="text" readonly="readonly" /></td>
                                        <td>Original Line</td>
                                        <td><input id="txtOriginalLine" type="text" readonly="readonly" /></td>
                                    </tr>
                                    <tr>
                                        <td>Size Qty</td>
                                        <td><input id="txtSizeQty" type="text" readonly="readonly" /></td>
                                        <td>Balance Qty</td>
                                        <td><input id="txtSizeBalanceQty" type="text" readonly="readonly" /></td>
                                    </tr>
                                    <tr>
                                        <td>Order Qty</td>
                                        <td><input id="txtOrderQty" type="text" readonly="readonly" /></td>
                                        <td>Balance Qty</td>
                                        <td><input id="txtOrderBalanceQty" type="text" readonly="readonly" /></td>
                                    </tr>
                                    <tr>
                                        <td colspan="4" height="30"></td>
                                    </tr>
                                    <tr>
                                        <td>Pass</td>
                                        <td><input id="txtPass" type="text" readonly="readonly" /></td>
                                        <td>Reject</td>
                                        <td><input id="txtReject" type="text" readonly="readonly" /></td>
                                    </tr>
                                    <tr>
                                        <td class="red">Hard</td>
                                        <td><input id="txtHard" type="text" readonly="readonly" /></td>
                                        <td class="darkblue">Quick</td>
                                        <td><input id="txtQuick" type="text" readonly="readonly" /></td>
                                    </tr>
                                    <tr>
                                        <td class="red">Wash</td>
                                        <td><input id="txtWash" type="text" readonly="readonly" /></td>
                                        <td class="red">Repl.</td>
                                        <td><input id="txtRepl" type="text" readonly="readonly" /></td>
                                    </tr>
                                    <tr>
                                        <td class="red">Print</td>
                                        <td><input id="txtPrint" type="text" readonly="readonly" /></td>
                                        <td class="red">Shade</td>
                                        <td><input id="txtShade" type="text" readonly="readonly" /></td>
                                    </tr>
                                    <tr>
                                        <td>Dispose</td>
                                        <td><input id="txtDispose" type="text" readonly="readonly" /></td>
                                        <td colspan="2"></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div style="padding: 10px 0px; background-color: rgb(87, 87, 87);">
                            <table style="width: 40vw;">
                                <tr>
                                    <td align="right" style="padding-right: 10px;"><input id="btnRefresh" type="button" class="site-btn btn-gy" style="margin:0;border:0;" name="Refresh" value="Refresh" /></td>
                                </tr>
                            </table>
                        </div>
                        <div>
                            <table style="width: 40vw;" class="table table-top3">
                                <thead>
                                    <tr>
                                        <th>Top 3 Defects</th>
                                        <th>Area</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td align="center" valign="middle" style="width: 20vw;"><input id="txtDefect1" type="text" readonly="readonly" /></td>
                                        <td align="center" valign="middle" style="width: 20vw;"><input id="txtArea1" type="text" readonly="readonly" /></td>
                                    </tr>
                                    <tr>
                                        <td align="center" valign="middle"><input id="txtDefect2" type="text" readonly="readonly" /></td>
                                        <td align="center" valign="middle"><input id="txtArea2" type="text" readonly="readonly" /></td>
                                    </tr>
                                    <tr>
                                        <td align="center" valign="middle"><input id="txtDefect3" type="text" readonly="readonly" /></td>
                                        <td align="center" valign="middle"><input id="txtArea3" type="text" readonly="readonly" /></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div style="width: 10vw; height: 92vh; float: left; background-color: rgb(87, 87, 87); padding-left: 2px;">
                        <input id="btnPass" type="button" class="site-btn btn-green middBtn font2rem" name="Pass" value="Pass" />
                        <input id="btnReject" type="button" class="site-btn btn-red middBtn font2rem" name="Reject" value="Reject" />
                        <input id="btnReworkList" type="button" class="site-btn btn-yellow black middBtn font1rem" style="margin-top: 5rem;" name="ReworkList" value='Rework List' />
                        <input id="btnMeasurement" type="button" class="site-btn btn-gy black middBtn font1rem" name="Measurement" value="Measurement" />
                        <input id="btnCFTComments" type="button" class="site-btn btn-gy black middBtn font1rem" name="CFTComments" value="CFT Comments" />
                        <input id="btnPictures" type="button" class="site-btn btn-gy black middBtn font1rem" name="Pictures" value="Pictures" />
                    </div>
                    <div style="width:40vw; float:left;">
                        <div>
                            <table style="width: 40vw; margin-bottom:1em;">
                                <tr>
                                    <td align="right">
                                        <input id="btnAddDefect" type="button" class="site-btn btn-red font1rem" style="margin:0;border:0;padding: 1rem; font-weight:bold;" name="AddDefect" value="Add Defect" />
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div>
                            <table id="DefectType" align="center" valign="middle" style="width: 40vw; margin-bottom:5em;" class="table table-top3">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th></th>
                                        <th>Defect Type</th>
                                        <th class="display-None">other</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                        <div>
                            <table style="width: 40vw;">
                                <tr>
                                    <td>
                                        <input id="btnHard" type="button" class="site-btn btn-orange rightBtn font1rem" name="Hard" value="Hard" />
                                    </td>
                                    <td>
                                        <input id="btnQuick" type="button" class="site-btn btn-darkblue rightBtn font1rem" name="Quick" value="Quick" />
                                    </td>
                                    <td style="width:10vw;">
                                        <p class="FixType display-None" idx="FixType"></p>
                                    </td>
                                    <td>
                                        <input id="btnSave" type="button" class="site-btn btn-blue rightBtn font1rem" name="Save" value="Save" />
                                    </td>
                                    <td>
                                        <input id="btnCancel" type="button" class="site-btn btn-blue rightBtn font1rem" name="Cancel" value="Cancel" />
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="SelectItemBackground" class="display-None"></div>
    @{
        Dictionary<string, string> keyValues = new Dictionary<string, string>();
        Html.RenderPartial("SelectItem", new SelectItem_ViewModel()
        {
            IDX = "Style",
            keyValues = keyValues,
        });

        keyValues.Add("Style#", "");
        Html.RenderPartial("SelectItem", new SelectItem_ViewModel()
        {
            IDX = "SP",
            keyValues = keyValues,
        });

        keyValues.Add("SP#", "");
        Html.RenderPartial("SelectItem", new SelectItem_ViewModel()
        {
            IDX = "Article",
            keyValues = keyValues,
        });

        keyValues.Add("Article", "");
        Html.RenderPartial("SelectItem", new SelectItem_ViewModel()
        {
            IDX = "Size",
            keyValues = keyValues,
        });

        keyValues.Clear();
        Html.RenderPartial("SelectItem", new SelectItem_ViewModel()
        {
            IDX = "ProductType",
            keyValues = keyValues,
        });
    }

    <div id="Switch" class="display-None">
        @using (Html.BeginForm("Index", ViewContext.RouteData.GetRequiredString("Controller"), new { }, FormMethod.Post))
        {
            <table class="table table-striped" style="width: 20vw; border: solid 1px black;">
                <tbody>
                    <tr>
                        <td>Factory</td>
                        <td>
                            @Html.DropDownListFor(o => o.FactoryID, (List<SelectListItem>)ViewBag.FactoryList, null, new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td>Line</td>
                        <td>
                            @Html.DropDownListFor(o => o.Line, (List<SelectListItem>)ViewBag.LineList, null, new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td>Inspection Date</td>
                        <td>
                            @Html.TextBoxFor(o => o.InspectionDate, "{0:yyyy/MM/dd}", new { @class = "form-control date-picker" })
                        </td>
                    </tr>
                    <tr>
                        <td>Brand</td>
                        <td>
                            <input id="Brand" name="Brand" type="text" class="FilterInput" idx="Brand" onkeyup="FilterFunction('Brand'); $('.SelectItemV2').removeClass('display-None');" value="@Model.Brand" placeholder="Search ....">
                            <ul class="FilterUL SelectItemV2 display-None" idx="Brand">
                                @foreach (string brand in (List<string>)ViewBag.BrandList)
                                {
                                    <li><a href="#">@brand</a></li>
                                }
                            </ul>
                        </td>
                    </tr>
                    <tr>
                        <td style="padding-top: 0.5em;">
                            <button id="SaveFactory" type="submit" class="site-btn btn-blue" style="width: 7vw; height: 5vh;" onclick="return SwitchCheck();">Save</button>
                        </td>
                        <td><button id="CloseFactory" type="button" class="site-btn btn-gy" style="width: 7vw; height: 5vh;">Close</button></td>
                    </tr>
                </tbody>
            </table>
        }
    </div>

    <div id="AddDefect" class="display-None">
        <div>
            <table style="width: 69vw;">
                <tbody>
                    <tr>
                        <td align="left" valign="middle" style="width: 20%;">
                            <p style="padding-left: 1em; font-size: 1.5em; font-weight: bold;">Add Defect</p>
                        </td>
                        <td align="right" valign="middle">
                            <input id="btnDefectSave" type="button" class="site-btn btn-blue font1rem" style="margin:0;border:0;padding: 7px 2em;" name="DefectSave" value="Save" />
                            <input id="btnDefectCamera" type="button" class="site-btn btn-gy font1rem" style="margin:0;border:0;padding: 7px 2em;margin-left: 1em;" name="DefectCamera" value="Camera" />
                            <input id="btnDefectPicture" type="button" class="site-btn btn-gy font1rem" style="margin:0;border:0;padding: 7px 2em;margin: 0 1em;" name="DefectPicture" value="Picture" />
                            <div class="zoom-gallery display-None DefectPicture">
                                <a id="aimgDefect" href="" data-source="" title="Defect Picture" style="width:640px;height:480px;">
                                    <img id="imgDefect" width="30" />
                                </a>
                            </div>
                            <input id="btnDefectExit" type="button" class="site-btn btn-gy font1rem" style="margin:0;border:0;padding: 7px 2em;" name="DefectExit" value="Exit" />
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div>
            <div style="float:left; width:12vw; height:73vh; margin:0 1em 0 1.5em;">
                <table class="DefectTable DefectCategory" style="width: 12vw;">
                    <thead>
                        <tr>
                            <th>Defect Category</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr><td class="tdEmpty"></td></tr>
                        <tr><td class="tdEmpty"></td></tr>
                        <tr><td class="tdEmpty"></td></tr>
                        <tr><td class="tdEmpty"></td></tr>
                        <tr><td class="tdEmpty"></td></tr>
                        <tr><td class="tdEmpty"></td></tr>
                        <tr><td class="tdEmpty"></td></tr>
                        <tr><td class="tdEmpty"></td></tr>
                    </tbody>
                </table>
            </div>
            <div style="float:left; width:20vw; height:73vh; margin:0 1em; overflow-x: hidden; overflow-y: auto;">
                <table class="DefectTable ADDDefectType" style="width: 20vw;">
                    <thead>
                        <tr>
                            <th colspan="2">Defect Type</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr><td class="tdEmpty"></td><td class="tdEmpty"></td></tr>
                        <tr><td class="tdEmpty"></td><td class="tdEmpty"></td></tr>
                        <tr><td class="tdEmpty"></td><td class="tdEmpty"></td></tr>
                        <tr><td class="tdEmpty"></td><td class="tdEmpty"></td></tr>
                        <tr><td class="tdEmpty"></td><td class="tdEmpty"></td></tr>
                        <tr><td class="tdEmpty"></td><td class="tdEmpty"></td></tr>
                        <tr><td class="tdEmpty"></td><td class="tdEmpty"></td></tr>
                        <tr><td class="tdEmpty"></td><td class="tdEmpty"></td></tr>
                    </tbody>
                </table>
            </div>
            <div style="float:left; width:20vw; height:73vh; margin:0 1em;">
                <div>
                    <table class="DefectTable Area1" style="width: 20vw;">
                        <thead>
                            <tr>
                                <th colspan="2">Area-1</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="tdValue Area1ID" idx="Outside">Outside</td>
                                <td class="tdValue Area1ID" idx="Inside">Inside</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div style="margin-top:1em; overflow-x: hidden; overflow-y: auto; height: 57vh;">
                    <table class="DefectTable Area2" style="width: 20vw;">
                        <thead>
                            <tr>
                                <th colspan="2">Area-2</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
            <div style="float:left; width:12vw; height:73vh; margin:0 1em;">
                <div>
                    <table class="DefectTable Responsibility" style="width: 12vw;">
                        <thead>
                            <tr>
                                <th>Responsibility</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <div style="margin-top:1em;">
                    <table class="DefectTable BAAuditCriteria" style="width: 12vw;">
                        <thead>
                            <tr>
                                <th style="padding: 1em;">BA Audit Criteria</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    @{
        Html.RenderPartial("ScreenShot");
    }

    <div id="ReworkCardNoSelect" class="display-None">
        <h3>Select Rework Card no</h3>
        <div class="ReworkCardNoOuter">
            <div class="ReworkCardNoInside">
            </div>
        </div>
        <div style="vertical-align:middle; text-align:center; margin-top:1em; ">
            <input id="btnReworkCardNoSave" type="button" class="site-btn btn-blue font1rem" style="margin:0;border:0;padding: 7px 2em;" name="ReworkCardNoSave" value="Save" />
            <input id="btnReworkCardNoExit" type="button" class="site-btn btn-gy font1rem" style="margin:0;border:0;padding: 7px 2em;" name="ReworkCardNoExit" value="Exit" />
            <p class="ReworkCardNoSelectValue display-None"></p>
        </div>
    </div>

    <div id="ReworkList" class="display-None">
        <div>
            <table style="width: 69vw;">
                <tbody>
                    <tr>
                        <td align="left" valign="middle" style="width: 30%;">
                            <p style="padding-left: 1em; font-size: 1.5em; font-weight: bold;">Rework List</p>
                        </td>
                        <td align="right" valign="middle">
                            <input id="btnCFTCommentsExit" type="button" class="site-btn btn-gy font1rem" style="margin:0;border:0;padding: 7px 2em;" name="CFTCommentsExit" value="Exit" />
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="row ReworkListRowHeader">
            <div class="col-auto"><p>SP no.</p></div>
            <div class="col-auto"><select class="form-control" id="ReworkListSP" name="ReworkListSP"></select></div>
            <div class="col-auto"><p>Style#</p></div>
            <div class="col-auto"><select class="form-control" id="ReworkListStyle" name="ReworkListStyle"></select></div>
            <div class="col-auto"><p>Article</p></div>
            <div class="col-auto"><select class="form-control" id="ReworkListArticle" name="ReworkListArticle"></select></div>
            <div class="col-auto"><p>Size</p></div>
            <div class="col-auto"><select class="form-control" id="ReworkListSize" name="ReworkListSize"></select></div>
        </div>
        <div style="width: 70vw; height: 59vh; overflow: auto;">
            <div class="ReworkListTag">
                <div class="selectTag"><p>All</p></div>
                <div><p>Quick</p></div>
                <div><p>Hard</p></div>
                <div><p>Wash</p></div>
                <div><p>Relp.</p></div>
                <div><p>Print</p></div>
                <div><p>Shade</p></div>
            </div>
            <div style="float: left; width: 60vw; ">
                <table class="ReworkListTable DefectTable">
                    <thead>
                        <tr>
                            <th></th>
                            <th>Rework No</th>
                            <th>SP#</th>
                            <th>PO#</th>
                            <th>Style#</th>
                            <th>Size</th>
                            <th>Article</th>
                            <th>Defect</th>
                            <th>Reworked</th>
                            <th>Add Defect</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        
                    </tbody>
                </table>
            </div>
        </div>
        <div class="ReworkListButton">
            <div>
                <input id="btnReworkListAction" type="button" class="btn-yellow font1rem" style="margin: 0; border: 0; padding: 7px 2em; " name="ReworkListAction" value="Action">
                <div class="ReworkListButtonAction display-None">
                    <input idx="Wash" type="button" value="Send To Washing">
                    <input idx="Print" type="button" value="Printing Repair">
                    <input idx="Repl." type="button" value="Need Replacement">
                    <input idx="Shade" type="button" value="Shading Defect">
                </div>
            </div>
            <div style="width: 15em;">
                <input id="btnReworkListDelete" type="button" class="btn-yellow font1rem" style="margin: 0; border: 0; padding: 7px 2em; " name="ReworkListDelete" value="Delete Defect">
            </div>
            <div>
                <input id="btnReworkListDispose" type="button" class="btn-yellow font1rem" style="margin: 0; border: 0; padding: 7px 2em; " name="ReworkListDispose" value="Dispose">
                <div class="ReworkListButtonDispose display-None">
                </div>
            </div>
        </div>
    </div>

    <div id="CFTComments" class="display-None">
        <div>
            <table style="width: 69vw;">
                <tbody>
                    <tr>
                        <td align="left" valign="middle" style="width: 30%;">
                            <p style="padding-left: 1em; font-size: 1.5em; font-weight: bold;">CFT Comment</p>
                        </td>
                        <td align="right" valign="middle">
                            <input id="btnCFTCommentsSendMail" type="button" class="site-btn btn-gy font1rem" style="margin:0;border:0;padding: 7px 2em;" name="CFTCommentsSendMail" value="Send to MR" />
                            <input id="btnCFTCommentsSave" type="button" class="site-btn btn-blue font1rem" style="margin:0;border:0;padding: 7px 2em;" name="CFTCommentsave" value="Save" />
                            <input id="btnCFTCommentsExit" type="button" class="site-btn btn-gy font1rem" style="margin:0;border:0;padding: 7px 2em;" name="CFTCommentsExit" value="Exit" />
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="row CFTCommentsRowHeader">
            <div class="col-auto"><p>SP no.</p></div>
            <div class="col-auto"><p class="darkblue SP"></p></div>
            <div class="col-auto"><p>Style#</p></div>
            <div class="col-auto"><p class="darkblue Style"></p></div>
            <div class="col-auto"><p>Season</p></div>
            <div class="col-auto"><p class="darkblue Season"></p></div>
            <div class="col-auto"><p>Sample Stage</p></div>
            <div class="col-auto"><p class="darkblue SampleStage"></p></div>
        </div>
        <div style=" width: 71vw; height: 70vh; overflow-y: auto;">
            <table class="CFTCommentsTable DefectTable">
                <thead>
                    <tr>
                        <th style="width:17vw;">
                            <p>Comments Category</p>
                        </th>
                        <th>
                            <p>Comments</p>
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>

    <div id="PictureDuringDummyFitting" class="display-None">
        <div>
            <table style="width: 69vw;">
                <tbody>
                    <tr>
                        <td align="left" valign="middle" style="width: 30%;">
                            <p style="padding-left: 1em; font-size: 1.5em; font-weight: bold;">Picture During Dummy Fitting</p>
                        </td>
                        <td align="right" valign="middle">
                            <input id="btnPictureDuringDummyFittingSave" type="button" class="site-btn btn-blue font1rem" style="margin:0;border:0;padding: 7px 2em;" name="PictureDuringDummyFittingSave" value="Save" />
                            <input id="btnPictureDuringDummyFittingExit" type="button" class="site-btn btn-gy font1rem" style="margin:0;border:0;padding: 7px 2em;" name="PictureDuringDummyFittingExit" value="Exit" />
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="row PictureDuringDummyFittingRowHeader">
            <div class="col-auto"><p>SP no.</p></div>
            <div class="col-auto"><p class="darkblue SP"></p></div>
            <div class="col-auto"><p>Style#</p></div>
            <div class="col-auto"><p class="darkblue Style"></p></div>
            <div class="col-auto"><p>Article</p></div>
            <div class="col-auto"><p class="darkblue Article"></p></div>
            <div class="col-auto"><p>Size</p></div>
            <div class="col-auto"><p class="darkblue Size"></p></div>
        </div>
        <div>
            <table class="PictureDuringDummyFittingTable DefectTable">
                <thead>
                    <tr>
                        <th>
                            <table style="width:100%">
                                <tr>
                                    <td style="width: 80%; vertical-align: middle;text-align: center;">
                                        <h3>Front view</h3>
                                    </td>
                                    <td style="width: 20%; vertical-align: middle;text-align: center;">
                                        <img src='/Image/Icon/Camera.png' width='30' idx="1" class='PictureDuringDummyFittingCamera' />
                                        <img src='/Image/Icon/Delete.png' width='30' idx="1" class='PictureDuringDummyFittingDefectType' />
                                    </td>
                                </tr>
                            </table>
                        </th>
                        <th>
                            <table style="width:100%">
                                <tr>
                                    <td style="width: 80%; vertical-align: middle;text-align: center;">
                                        <h3>Side view</h3>
                                    </td>
                                    <td style="width: 20%; vertical-align: middle;text-align: center;">
                                        <img src='/Image/Icon/Camera.png' width='30' idx="2" class='PictureDuringDummyFittingCamera' />
                                        <img src='/Image/Icon/Delete.png' width='30' idx="2" class='PictureDuringDummyFittingDefectType' />
                                    </td>
                                </tr>
                            </table>
                        </th>
                        <th>
                            <table style="width:100%">
                                <tr>
                                    <td style="width: 80%; vertical-align: middle;text-align: center;">
                                        <h3>Back view</h3>
                                    </td>
                                    <td style="width: 20%; vertical-align: middle;text-align: center;">
                                        <img src='/Image/Icon/Camera.png' width='30' idx="3" class='PictureDuringDummyFittingCamera' />
                                        <img src='/Image/Icon/Delete.png' width='30' idx="3" class='PictureDuringDummyFittingDefectType' />
                                    </td>
                                </tr>
                            </table>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <div class="zoom-gallery">
                                <a id="aPictureFront" href="" data-source="" title="Picture Front" style="width:640px;height:480px;">
                                    <img id="PictureFront" style="width:20vw;" />
                                </a>
                            </div>
                        </td>
                        <td>
                            <div class="zoom-gallery">
                                <a id="aPictureSide" href="" data-source="" title="Picture Side" style="width:640px;height:480px;">
                                    <img id="PictureSide" style="width:20vw;" />
                                </a>
                            </div>
                        </td>
                        <td>
                            <div class="zoom-gallery">
                                <a id="aPictureBack" href="" data-source="" title="Picture Back" style="width:640px;height:480px;">
                                    <img id="PictureBack" style="width:20vw;" />
                                </a>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<script type="text/javascript">
    var msg;
    var EditMode;
    $(function () {
        msg = new MessagerAlert();
        EditMode = false;
        SelectItemV2ClickBind();
        LeftOnBindEvent();
        MidOnBindEvent();
        RightOnBindEvent();
        SwitchBindEvent();
        AddDefectBindEvent();
        ReworkCardBindEvent();
        ReworkListBindEvent();
        CFTCommentsBindEvent();
        PictureDuringDummyFittingBindEvent();
        $('#SelectItemBackground').on('click', function () {
            $("#SelectItemBackground, .SelectItem").addClass('display-None');
        });

        if (@ViewBag.ShowSwitch) {
            $('.menu-trigger').click();
            $('#btnSwitch').click();
        }

        PrveLoad();
        IsEditModeButtonChange();

        // Screenshot Exit
        $('#btnScreenshotExit').on('click', function () {
            StopScreen();
            $('#Screenshot').addClass("display-None");
        });
    });

    function IsEditModeButtonChange() {
        if ($("#txtStyle").val() == "" ||
            $("#txtSP").val() == "" ||
            $("#txtArticle").val() == "" ||
            $("#txtSize").val() == "" ||
            $("#txtProductType").val() == "" ||
            parseIntEX($('#txtSizeBalanceQty').val()) >= parseIntEX($('#txtSizeQty').val())) {

            EditMode = false;
        }
        else {
            EditMode = true;
        }

        $('#btnHard').removeClass("btn-orange").addClass("btn-gy");
        $('#btnQuick').removeClass("btn-darkblue").addClass("btn-gy");
        $('#btnAddDefect').removeClass("btn-red").addClass("btn-gy");
        $('#btnSave').removeClass("btn-blue").addClass("btn-gy");
        if (EditMode) {
            $('#btnPass').addClass("btn-green").removeClass("btn-gy");
            $('#btnReject').addClass("btn-red").removeClass("btn-gy");
            $('#btnCancel').addClass("btn-blue").removeClass("btn-gy");
            var rowCount = $('#DefectType tr').length;
            if (rowCount > 1) {
                $('#btnAddDefect').addClass("btn-red").removeClass("btn-gy");
                $('#btnHard').addClass("btn-orange").removeClass("btn-gy");
                $('#btnQuick').addClass("btn-darkblue").removeClass("btn-gy");
                $('#btnSave').addClass("btn-blue").removeClass("btn-gy");
            }
        }
        else {
            $('#btnPass').removeClass("btn-green").addClass("btn-gy");
            $('#btnReject').removeClass("btn-red").addClass("btn-gy");
            $('#btnCancel').removeClass("btn-blue").addClass("btn-gy");
        }
    }

    function PrveLoad() {
        StyleClick($("#txtSP").val());
        SPClick($("#txtStyle").val());
    }

    function LeftOnBindEvent() {
        $('#btnStyleSelectItem').on('click', function () {
            $("#SelectItemBackground, .SelectItem[idx='Style']").removeClass('display-None');
        });

        $('#txtStyle').on("change", function () {
            $('#txtSP, #txtArticle, #txtSize, #txtProductType, #txtProductTypePMS, #txtBrand, #txtSeason, #txtSampleStage, #txtOriginalLine, #txtSizeQty, #txtSizeBalanceQty, #txtOrderQty, #txtOrderBalanceQty').val("");
            $(".table-top3>tbody>tr>td>input[type='text']").val("");
            $("#DefectType>tbody>tr").remove();
            StyleCheck($(this).val());
        });

        $('#btnSPSelectItem').on('click', function () {
            if ($("#txtStyle").val() != "") {
                $(".para[idx='SP'][idi=1]").show();
            }
            else {
                $(".para[idx='SP'][idi=1]").hide();
            }

            $(".para[idx='SP'][idi=1] > .Value").html($("#txtStyle").val());
            $("#SelectItemBackground, .SelectItem[idx='SP']").removeClass('display-None');
        });

        $('#txtSP').on("change", function () {
            $('#txtArticle, #txtSize, #txtProductType, #txtProductTypePMS, #txtBrand, #txtSeason, #txtSampleStage, #txtOriginalLine, #txtSizeQty, #txtSizeBalanceQty, #txtOrderQty, #txtOrderBalanceQty').val("");
            $(".table-top3>tbody>tr>td>input[type='text']").val("");
            $("#DefectType>tbody>tr").remove();
            SPCheck($('#txtStyle').val(), $(this).val());
        });

        $('#btnArticleSelectItem').on('click', function () {
            if ($("#txtStyle").val() == "" || $("#txtSP").val() == "") {
                msg.WithError("Please select SP# first.");
                return;
            }

            $(".para[idx='Article'][idi=1] > .Value").html($("#txtStyle").val());
            $(".para[idx='Article'][idi=2] > .Value").html($("#txtSP").val());
            $(".para[idx='Article']").show();
            $("#SelectItemBackground, .SelectItem[idx='Article']").removeClass('display-None');
        });

        $('#txtArticle').on("change", function () {
            $('#txtSize, #txtProductType, #txtSizeQty, #txtSizeBalanceQty, #txtOrderQty, #txtOrderBalanceQty').val("");
            $(".table-top3>tbody>tr>td>input[type='text']").val("");
            $("#DefectType>tbody>tr").remove();
            ArticleCheck($('#txtStyle').val(), $('#txtSP').val(), $(this).val());
        });

        $('#btnSizeSelectItem').on('click', function () {
            if ($("#txtStyle").val() == "" || $("#txtSP").val() == "" || $("#txtArticle").val() == "") {
                msg.WithError("Please select Article first.");
                return;
            }

            $(".para[idx='Size'][idi=1] > .Value").html($("#txtStyle").val());
            $(".para[idx='Size'][idi=2] > .Value").html($("#txtSP").val());
            $(".para[idx='Size'][idi=3] > .Value").html($("#txtArticle").val());
            $(".para[idx='Size']").show();
            $("#SelectItemBackground, .SelectItem[idx='Size']").removeClass('display-None');
        });

        $('#txtSize').on("change", function () {
            $('#txtProductType, #txtSizeQty, #txtSizeBalanceQty, #txtOrderQty, #txtOrderBalanceQty').val("");
            $(".table-top3>tbody>tr>td>input[type='text']").val("");
            $("#DefectType>tbody>tr").remove();
            SizeCheck($('#txtStyle').val(), $('#txtSP').val(), $('#txtArticle').val(), $(this).val());
        });

        $('#btnProductTypeSelectItem').on('click', function () {
            if ($("#txtStyle").val() == "" || $("#txtSP").val() == "" || $("#txtArticle").val() == "" || $("#txtSize").val() == "") {
                msg.WithError("Please select Size first.");
                return;
            }

            $("#SelectItemBackground, .SelectItem[idx='ProductType']").removeClass('display-None');
        });

        $('#txtProductType').on("change", function () {
            $('#txtSizeBalanceQty, #txtOrderBalanceQty').val("");
            $(".table-top3>tbody>tr>td>input[type='text']").val("");
            $("#DefectType>tbody>tr").remove();
            ProductTypeCheck($('#txtStyle').val(), $('#txtSP').val(), $('#txtArticle').val(), $('#txtSize').val(), $(this).val());
        });

        $('#btnRefresh').on('click', function () {
            Refresh($("#txtStyle").val(), $("#txtSP").val(), $("#txtArticle").val(), $("#txtSize").val(), $("#txtProductType").val());
        });
    }

    function MidOnBindEvent() {
        $('#btnPass').on('click', function () {
            IsEditModeButtonChange();
            if (!EditMode) {
                return;
            }

            PassClick($("#txtStyle").val(), $("#txtSP").val(), $("#txtArticle").val(), $("#txtSize").val(), $("#txtProductType").val());
        });

        $('#btnReject').on('click', function () {
            IsEditModeButtonChange();
            if (!EditMode) {
                return;
            }
            GetDefectCategory();
            $('#SelectItemBackground, #AddDefect').removeClass('display-None').unbind('click');
        });

        $('#btnReworkList').on('click', function () {
            ReworkListGet();
            $('#ReworkList').removeClass("display-None");
            $('#btnRefresh').click();
        });

        $('#btnMeasurement').on('click', function () {
            alert('open other page');
        });

        $('#btnCFTComments').on('click', function () {
            if ($('#txtSP').val() == "" || $('#txtStyle').val() == "" || $('#txtSeason').val() == "" || $('#txtSampleStage').val() == "") {
                return;
            }

            $('.CFTCommentsRowHeader .SP').html($('#txtSP').val());
            $('.CFTCommentsRowHeader .Style').html($('#txtStyle').val());
            $('.CFTCommentsRowHeader .Season').html($('#txtSeason').val());
            $('.CFTCommentsRowHeader .SampleStage').html($('#txtSampleStage').val());
            CFTCommentsClick($('#txtSP').val(), $('#txtStyle').val(), $('#txtSeason').val(), $('#txtSampleStage').val());
            $('#CFTComments').removeClass("display-None");
        });

        $('#btnPictures').on('click', function () {
            if ($('#txtSP').val() == "" || $('#txtArticle').val() == "" || $('#txtSize').val() == "" || $('#txtStyle').val() == "") {
                return;
            }

            $('.PictureDuringDummyFittingRowHeader .SP').html($('#txtSP').val());
            $('.PictureDuringDummyFittingRowHeader .Style').html($('#txtStyle').val());
            $('.PictureDuringDummyFittingRowHeader .Article').html($('#txtArticle').val());
            $('.PictureDuringDummyFittingRowHeader .Size').html($('#txtSize').val());
            PicturesClick($('#txtSP').val(), $('#txtStyle').val(), $('#txtArticle').val(), $('#txtSize').val());
            $('#PictureDuringDummyFitting').removeClass("display-None");
        });
    }

    function RightOnBindEvent() {
        $('#btnCancel').on("click", function () {
            if (!EditMode) {
                return;
            }

            $('#txtStyle, #txtSP, #txtArticle, #txtSize, #txtProductType, #txtProductTypePMS, #txtBrand, #txtSeason, #txtSampleStage, #txtOriginalLine, #txtSizeQty, #txtSizeBalanceQty, #txtOrderQty, #txtOrderBalanceQty').val("");
            $(".table-top3>tbody>tr>td>input[type='text']").val("");
            $("#DefectType>tbody>tr").remove();
            IsEditModeButtonChange();
        });

        $('#btnHard').on("click", function () {
            IsEditModeButtonChange();
            if (!EditMode) {
                return;
            }

            var rowCount = $('#DefectType tr').length;
            if (rowCount <= 1) {
                return;
            }

            $('.FixType').html("Hard");
            $('#btnHard').addClass("btn-orange").removeClass("btn-gy");
            $('#btnQuick').removeClass("btn-darkblue").addClass("btn-gy");
        });

        $('#btnQuick').on("click", function () {
            IsEditModeButtonChange();
            if (!EditMode) {
                return;
            }

            var rowCount = $('#DefectType tr').length;
            if (rowCount <= 1) {
                return;
            }

            $('.FixType').html("Quick");
            $('#btnHard').removeClass("btn-orange").addClass("btn-gy");
            $('#btnQuick').addClass("btn-darkblue").removeClass("btn-gy");
        });

        $('#btnSwitch').on('click', function () {
            $("#SelectItemBackground, #Switch").removeClass('display-None').unbind('click');
        });

        $('#btnSave').on('click', function () {
            IsEditModeButtonChange();
            if (!EditMode) {
                return;
            }

            var rowCount = $('#DefectType tr').length;
            if (rowCount <= 1) {
                msg.WithError("Selected Defety Type cannot be empty.");
                return;
            }

            if ($('.FixType').html() == "") {
                msg.WithError("Please select Fix Type (Hard/Quick) first.");
                return;
            }

            GetReworkCard($('.FixType').html());
            $("#SelectItemBackground, #ReworkCardNoSelect").removeClass('display-None').unbind('click');
        });

        DynamicBindEvent();
    }

    function DynamicBindEvent() {
        $('.deleteDefectType').on("click", function () {
            $(this).parent().parent().remove();
        });

        ZoomGlleryBind();
    }

    function SwitchBindEvent() {
        $('#CloseFactory').on('click', function () {
            $('#Switch').addClass('display-None');

            $("#SelectItemBackground").addClass('display-None');

            $('#SelectItemBackground').on('click', function () {
                $("#SelectItemBackground, .SelectItem").addClass('display-None');
            });
        });
    }

    function AddDefectBindEvent() {
        GetDefectCategory();

        $('#btnAddDefect').on("click", function () {
            IsEditModeButtonChange();
            if (!EditMode) {
                return;
            }

            var rowCount = $('#DefectType tr').length;
            if (rowCount <= 1) {
                return;
            }

            GetDefectCategory();
            $('#SelectItemBackground, #AddDefect').removeClass('display-None').unbind('click');
        });

        $('#btnDefectExit').on('click', function () {
            $('#AddDefect').addClass('display-None');

            $("#SelectItemBackground").addClass('display-None');

            $('#SelectItemBackground').on('click', function () {
                $("#SelectItemBackground, .SelectItem").addClass('display-None');
            });

            document.querySelector("#aimgDefect").removeAttribute('href');
            document.querySelector("#imgDefect").removeAttribute('src');

            DynamicBindEvent();
            IsEditModeButtonChange();
        });

        $('#btnDefectSave').on('click', function () {
            var defectCategoryID = $('.DefectCategory .selectDefect').attr('idx');
            var defectCategory = $('.DefectCategory .selectDefect>p').html();
            var defectTypeID = $('.ADDDefectType .selectDefect').attr('idx');
            var defectType = $('.ADDDefectType .selectDefect>p').html();
            var area1 = $('.Area1 .selectDefect').attr('idx');
            var area2 = $('.Area2 .selectDefect').attr('idx');
            var responsibilityID = $('.Responsibility .selectDefect').attr('idx');
            var responsibility = $('.Responsibility .selectDefect>p').html();
            var bAAuditCriteriaID = $('.BAAuditCriteria .selectDefect').attr('idx');
            var bAAuditCriteria = $('.BAAuditCriteria .selectDefect>p').html();
            var pic = document.querySelector("#imgDefect").src;

            if (defectCategoryID == null) {
                msg.WithError("Please choose Defect Category before save.");
                return;
            }

            if (defectTypeID == null) {
                msg.WithError("Please choose Defect Type before save.");
                return;
            }

            if (area1 == null || area2 == null) {
                msg.WithError("Please choose Area-1, Area-2 before save.");
                return;
            }

            if (responsibilityID == null ) {
                msg.WithError("Please choose Responsibility before save.");
                return;
            }

            var tbody = $('#DefectType>tbody');
            var rowCount = $('#DefectType tr').length;
            var content = "<tr>";
            if (pic != "") {
                content += "<td><div id='pic" + rowCount+ "' class='zoom-gallery'> ";
                content += "<a href='" + pic + "' data-source='' title='Defect Picture' style='width:640px;height:480px;'> ";
                content += "<img src='" + pic + "' width='30' />";
                content += "</a></div></td>";
            }
            else {
                content += "<td></td>";
            }

            content += "<td><img src='/Image/Icon/Delete.png' width='30' class='deleteDefectType' /></td>";
            content += "<td><p>" + area2 + '-' + defectTypeID + '-' + responsibility + '-' + bAAuditCriteriaID  + "</p></td>";
            content += "<td class='display-None DefectValue' idi='" + rowCount + "'>";
            content += "<p idx='DefectCategory' idv='" + defectCategoryID + "'>" + defectCategory + "</p>";
            content += "<p idx='ADDDefectType' idv='" + defectTypeID + "'>" + defectType + "</p>";
            content += "<p idx='Area1' idv='" + area1 + "'>" + area1 + "</p>";
            content += "<p idx='Area2' idv='" + area2 + "'>" + area2 + "</p>";
            content += "<p idx='Responsibility' idv='" + responsibilityID + "'>" + responsibility + "</p>";
            content += "<p idx='BAAuditCriteria' idv='" + bAAuditCriteriaID + "'>" + bAAuditCriteria + "</p>";
            content += "<p idx='pic' idv='pic'>" + pic + "</p>";
            content += "</td></tr>";
            tbody.append(content);

            $('#btnDefectExit').click();
        });

        $('#btnDefectCamera').on('click', function () {
            $('#Screenshot').removeClass("display-None");
            Screenshot('imgDefect');
        });

        $('#btnDefectPicture').on('click', function () {
            $('.DefectPicture>a').click();
        });
    }

    function ReworkCardBindEvent() {
        $('#btnReworkCardNoExit').on('click', function () {
            $("#SelectItemBackground, #ReworkCardNoSelect").addClass('display-None');
            $('#SelectItemBackground').on('click', function () {
                $("#SelectItemBackground, .SelectItem").addClass('display-None');
            });

            $('#btnRefresh').click();
        });

        $('#btnReworkCardNoSave').on('click', function () {
            if ($('.ReworkCardNoSelectValue').html() == "") {
                msg.WithError("Please select a Rework Card.");
                return;
            }

            ReworkCardSave();
        });

    }

    function ReworkListBindEvent() {
        GetReworkListButtonDispose();

        $('.ReworkListTag>div').on('click', function () {
            $('.ReworkListTag>div').removeClass("selectTag");
            $(this).addClass("selectTag");

            var idx = $(this).children('p').html();
            if (idx == 'All') {
                $(".ReworkListTable>tbody>tr").removeClass("display-None");
            }
            else {
                $(".ReworkListTable>tbody>tr").addClass("display-None");
                $(".ReworkListTable>tbody>tr[idx='" + idx + "']").removeClass("display-None");
            }
        });

        $('#btnCFTCommentsExit').on('click', function () {
            $('#ReworkList').addClass("display-None");
        });

        $('#btnReworkListAction').on('click', function () {
            $('.ReworkListButtonAction').slideToggle(800);
        });

        $('#btnReworkListDispose').on('click', function () {
            $('.ReworkListButtonDispose').slideToggle(800);
        });
    }

    function CFTCommentsBindEvent() {
        $('#btnCFTCommentsExit').on('click', function () {
            $('#CFTComments').addClass("display-None");
        });

        $('#btnCFTCommentsSave').on('click', function () {
            CFTCommentsSave(0);
        });

        $('#btnCFTCommentsSendMail').on('click', function () {
            CFTCommentsSave(1);
        });
    }

    function PictureDuringDummyFittingBindEvent() {
        $('.PictureDuringDummyFittingCamera').on('click', function () {
            var idx = $(this).attr('idx');
            var sentID = "PictureFront";
            switch (idx) {
                case "1":
                    sentID = "PictureFront";
                    break;
                case "2":
                    sentID = "PictureSide";
                    break;
                case "3":
                    sentID = "PictureBack";
                    break;
            }

            $('#Screenshot').removeClass("display-None");
            Screenshot(sentID);
        });

        $('.PictureDuringDummyFittingDefectType').on('click', function () {
            var idx = $(this).attr('idx');
            var sentID = "PictureFront";
            switch (idx) {
                case "1":
                    sentID = "PictureFront";
                    break;
                case "2":
                    sentID = "PictureSide";
                    break;
                case "3":
                    sentID = "PictureBack";
                    break;
            }

            document.querySelector("#a" + sentID).removeAttribute('href');
            document.querySelector("#" + sentID).removeAttribute('src');
        });

        $('#btnPictureDuringDummyFittingExit').on('click', function () {
            $('.PictureDuringDummyFittingDefectType').click();
            $('#PictureDuringDummyFitting').addClass("display-None");
        });
    }

    function InitDefect(type) {
        var DefectTypeBody, Area2Body, ResponsibilityBody, BAAuditCriteriaBody;
        DefectTypeBody += "<tr><td class='tdEmpty'></td><td class='tdEmpty'></td></tr>";
        DefectTypeBody += "<tr><td class='tdEmpty'></td><td class='tdEmpty'></td></tr>";
        DefectTypeBody += "<tr><td class='tdEmpty'></td><td class='tdEmpty'></td></tr>";
        DefectTypeBody += "<tr><td class='tdEmpty'></td><td class='tdEmpty'></td></tr>";
        DefectTypeBody += "<tr><td class='tdEmpty'></td><td class='tdEmpty'></td></tr>";
        DefectTypeBody += "<tr><td class='tdEmpty'></td><td class='tdEmpty'></td></tr>";
        DefectTypeBody += "<tr><td class='tdEmpty'></td><td class='tdEmpty'></td></tr>";
        DefectTypeBody += "<tr><td class='tdEmpty'></td><td class='tdEmpty'></td></tr>";

        Area2Body += " <tr><td class='tdEmpty'></td><td class='tdEmpty'></td></tr>";
        Area2Body += " <tr><td class='tdEmpty'></td><td class='tdEmpty'></td></tr>";
        Area2Body += " <tr><td class='tdEmpty'></td><td class='tdEmpty'></td></tr>";
        Area2Body += " <tr><td class='tdEmpty'></td><td class='tdEmpty'></td></tr>";
        Area2Body += " <tr><td class='tdEmpty'></td><td class='tdEmpty'></td></tr>";
        Area2Body += " <tr><td class='tdEmpty'></td><td class='tdEmpty'></td></tr>";

        ResponsibilityBody += "<tr><td class='tdEmpty'></td></tr>";
        ResponsibilityBody += "<tr><td class='tdEmpty'></td></tr>";
        ResponsibilityBody += "<tr><td class='tdEmpty'></td></tr>";
        ResponsibilityBody += "<tr><td class='tdEmpty'></td></tr>";

        BAAuditCriteriaBody += "<tr><td class='tdEmpty'></td></tr>";
        BAAuditCriteriaBody += "<tr><td class='tdEmpty'></td></tr>";
        BAAuditCriteriaBody += "<tr><td class='tdEmpty'></td></tr>";

        switch (type) {
            case 'ALL':
                $('.ADDDefectType>tbody').html(DefectTypeBody);
                $('.Area1ID').removeClass("selectDefect").unbind('click');
                $('.Area2>tbody').html(Area2Body);
                $('.Responsibility>tbody').html(ResponsibilityBody);
                $('.BAAuditCriteria>tbody').html(BAAuditCriteriaBody);
                break;
            case 'DefectType':
                $('.Area1ID').removeClass("selectDefect")
                $('.Area2>tbody').html(Area2Body);
                $('.Responsibility>tbody').html(ResponsibilityBody);
                $('.BAAuditCriteria>tbody').html(BAAuditCriteriaBody);
            case 'Area1':
                $('.Area2>tbody').html(Area2Body);
                $('.Responsibility>tbody').html(ResponsibilityBody);
                $('.BAAuditCriteria>tbody').html(BAAuditCriteriaBody);
                break;
            case 'Area2':
                $('.Responsibility>tbody').html(ResponsibilityBody);
                $('.BAAuditCriteria>tbody').html(BAAuditCriteriaBody);
                break;
            case 'Responsibility':
                $('.BAAuditCriteria>tbody').html(BAAuditCriteriaBody);
                break;
            default:
                $('.ADDDefectType>tbody').html(DefectTypeBody);
                $('.Area1ID').removeClass("selectDefect").unbind('click');
                $('.Area2>tbody').html(Area2Body);
                $('.Responsibility>tbody').html(ResponsibilityBody);
                $('.BAAuditCriteria>tbody').html(BAAuditCriteriaBody);
                break;
        }
    }

    function SwitchCheck() {
        if ($('#InspectionDate').val() == "") {
            msg.WithError("Inspection Date cannot be empty");
            return false;
        }
    }

    function BrandCheck(Brand) {
        $.ajax({
            url: "@Url.Action("CheckBrand", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ Brand: Brand }),
            async: true,
            success: function (data) {
                $('#Brand').val(data.Brand);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function StyleClick(OrderID) {
        $.ajax({
            url: "@Url.Action("GetStyle", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ OrderID: OrderID }),
            async: true,
            success: function (data) {
                $(".FilterUL[idx='Style']").html(data);
                SelectItemClickBind();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function StyleCheck(StyleID) {
        if (StyleID == null || StyleID == "") {
            return;
        }

        $.ajax({
            url: "@Url.Action("CheckStyle", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ StyleID: StyleID }),
            async: true,
            success: function (data) {
                if (data.Result == 0) {
                    $('#txtStyle').val("");
                    msg.WithError("Style not found.");
                }

                SPClick($("#txtStyle").val());
                IsEditModeButtonChange();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function SPClick(StyleID) {
        $.ajax({
            url: "@Url.Action("GetSP", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ StyleID: StyleID }),
            async: true,
            success: function (data) {
                $(".FilterUL[idx='SP']").html(data);
                SelectItemClickBind();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function SPCheck(StyleID, OrderID) {
        if (OrderID == null || OrderID == "") {
            return;
        }

        $.ajax({
            url: "@Url.Action("CheckSP", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ StyleID: StyleID, OrderID: OrderID }),
            async: true,
            success: function (data) {
                if (data.Result == 0) {
                    $('#txtSP').val("");
                    msg.WithError("SP# not found.");
                }
                else {
                    $('#txtStyle').val(data.StyleID);
                    $('#txtBrand').val(data.Brand);
                    $('#txtSeason').val(data.Season);
                    $('#txtProductTypePMS').val(data.ProductTypePMS);
                    $('#txtSampleStage').val(data.SampleStage);
                    $('#txtOriginalLine').val(data.OriginalLine);
                    $('#txtOrderQty').val(data.OrderQty);

                    if (data.Article) {
                        $('#txtArticle').val(data.Article);
                        $('#txtSize').val(data.Size);
                        $('#txtProductType').val(data.ProductType);
                        $('#txtSizeQty').val(data.SizeQty);
                        $('#txtSizeBalanceQty').val(data.SizeBalanceQty);
                        $('#txtOrderBalanceQty').val(data.OrderBalanceQty);
                    }
                    $('#btnRefresh').click();
                }

                SPClick($("#txtStyle").val());
                ArticleClick($("#txtStyle").val(), $('#txtSP').val());
                IsEditModeButtonChange();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function ArticleClick(StyleID, OrderID) {
        $.ajax({
            url: "@Url.Action("GetArticle", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ StyleID: StyleID, OrderID: OrderID }),
            async: true,
            success: function (data) {
                $(".FilterUL[idx='Article']").html(data);
                SelectItemClickBind();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function ArticleCheck(StyleID, OrderID, Article) {
        if (Article == null || Article == "") {
            return;
        }

        $.ajax({
            url: "@Url.Action("CheckArticle", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ StyleID: StyleID, OrderID: OrderID, Article: Article }),
            async: true,
            success: function (data) {
                if (data.Result == 0) {
                    $('#txtArticle').val("");
                    msg.WithError("Article not found.");
                }
                else {
                    if (data.Size) {
                        $('#txtSize').val(data.Size);
                        $('#txtProductType').val(data.ProductType);
                        $('#txtSizeQty').val(data.SizeQty);
                        $('#txtSizeBalanceQty').val(data.SizeBalanceQty);
                        $('#txtOrderQty').val(data.OrderQty);
                        $('#txtOrderBalanceQty').val(data.OrderBalanceQty);
                        $('#btnRefresh').click();
                    }
                }

                ArticleClick($("#txtStyle").val(), $("#txtSP").val());
                SizeClick($("#txtStyle").val(), $("#txtSP").val(), $("#txtArticle").val());
                IsEditModeButtonChange();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function SizeClick(StyleID, OrderID, Article) {
        $.ajax({
            url: "@Url.Action("GetSize", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ StyleID: StyleID, OrderID: OrderID, Article: Article }),
            async: true,
            success: function (data) {
                $(".FilterUL[idx='Size']").html(data);
                SelectItemClickBind();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function SizeCheck(StyleID, OrderID, Article, Size) {
        if (Size == null || Size == "") {
            return;
        }

        $.ajax({
            url: "@Url.Action("CheckSize", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ StyleID: StyleID, OrderID: OrderID, Article: Article, Size: Size }),
            async: true,
            success: function (data) {
                if (data.Result == 0) {
                    $('#txtSize').val("");
                    msg.WithError("Size not found.");
                }
                else {
                    $('#txtSizeQty').val(data.SizeQty);
                    $('#txtOrderQty').val(data.OrderQty);
                    if (data.ProductType) {
                        $('#txtProductType').val(data.ProductType);
                        $('#txtSizeBalanceQty').val(data.SizeBalanceQty);
                        $('#txtOrderBalanceQty').val(data.OrderBalanceQty);
                        $('#btnRefresh').click();
                    }
                }

                SizeClick($("#txtStyle").val(), $("#txtSP").val(), $("#txtArticle").val());
                ProductTypeClick($("#txtStyle").val(), $("#txtSP").val(), $("#txtArticle").val(), $("#txtSize").val());
                IsEditModeButtonChange();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function ProductTypeClick(StyleID, OrderID, Article, Size) {
        $.ajax({
            url: "@Url.Action("GetProductType", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ StyleID: StyleID, OrderID: OrderID, Article: Article, Size: Size }),
            async: true,
            success: function (data) {
                $(".FilterUL[idx='ProductType']").html(data);
                SelectItemClickBind();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function ProductTypeCheck(StyleID, OrderID, Article, Size, ProductType) {
        if (ProductType == null || ProductType == "") {
            return;
        }

        $.ajax({
            url: "@Url.Action("CheckProductType", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ StyleID: StyleID, OrderID: OrderID, Article: Article, Size: Size, ProductType: ProductType }),
            async: true,
            success: function (data) {
                if (data.Result == 0) {
                    $('#txtProductType').val("");
                    msg.WithError("ProductType not found.");
                }
                else {
                    $('#txtSizeQty').val(data.SizeQty);
                    $('#txtOrderQty').val(data.OrderQty);
                    $('#txtSizeBalanceQty').val(data.SizeBalanceQty);
                    $('#txtOrderBalanceQty').val(data.OrderBalanceQty);
                    $('#btnRefresh').click();
                }
                IsEditModeButtonChange();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function Refresh(StyleID, OrderID, Article, Size, ProductType) {
        $.ajax({
            url: "@Url.Action("RefreshQty", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ StyleID: StyleID, OrderID: OrderID, Article: Article, Size: Size, ProductType: ProductType }),
            async: true,
            success: function (data) {
                $('#txtPass').val(data.Pass);
                $('#txtReject').val(data.Reject);
                $('#txtHard').val(data.Hard);
                $('#txtQuick').val(data.Quick);
                $('#txtWash').val(data.Wash);
                $('#txtRepl').val(data.Repl);
                $('#txtPrint').val(data.Print);
                $('#txtShade').val(data.Shade);
                $('#txtDispose').val(data.Dispose);
                $.each(data.top3, function (index, value) {
                    $("#txtDefect" + (index + 1)).val(value.Defect);
                    $("#txtArea" + (index + 1)).val(value.Area);
                });

                if (data.Result) {
                    $('#txtSizeQty').val(data.SizeQty);
                    $('#txtSizeBalanceQty').val(data.SizeBalanceQty);
                    $('#txtOrderQty').val(data.OrderQty);
                    $('#txtOrderBalanceQty').val(data.OrderBalanceQty);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function PassClick(StyleID, OrderID, Article, Size, ProductType) {
        $.ajax({
            url: "@Url.Action("Pass", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ StyleID: StyleID, OrderID: OrderID, Article: Article, Size: Size, ProductType: ProductType }),
            async: false,
            success: function (data) {
                if (data.Result) {
                    msg.WithSuccess("You pass 1 garment.");
                    $('#btnRefresh').click();
                }
                else {
                    msg.WithError(data.ErrMsg);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function GetDefectCategory() {
        $.ajax({
            url: "@Url.Action("GetDefectType", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({  }),
            async: true,
            success: function (data) {
                $(".DefectCategory>tbody").html(data);
                InitDefect('ALL');

                $('.DefectCategoryTD').on('click', function () {
                    $('.DefectCategoryTD').removeClass("selectDefect");
                    $(this).addClass("selectDefect");
                    InitDefect("ALL");
                    GetADDDefectType($(this).attr("idx"));
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function GetADDDefectType(DefectTypeID) {
        $.ajax({
            url: "@Url.Action("GetDefectCode", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ DefectTypeID: DefectTypeID }),
            async: true,
            success: function (data) {
                $(".ADDDefectType>tbody").html(data);

                $('.DefectTypeID').on('click', function () {
                    $('.DefectTypeID').removeClass("selectDefect");
                    $(this).addClass("selectDefect");
                    InitDefect('DefectType');

                    $('.Area1ID').on('click', function () {
                        $('.Area1ID').removeClass("selectDefect");
                        $(this).addClass("selectDefect");
                        InitDefect('Area1');
                        GetArea2($(this).attr("idx"), $('#txtProductType').val());
                    });
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function GetArea2(Area1, Location) {
        $.ajax({
            url: "@Url.Action("GetArea", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ Type: Area1, Location: Location}),
            async: true,
            success: function (data) {
                $(".Area2>tbody").html(data);

                $('.Area2ID').on('click', function () {
                    $('.Area2ID').removeClass("selectDefect");
                    $(this).addClass("selectDefect");
                    InitDefect('Area2');
                    GetResponsibility("PMS_RFTResp", "Responsibility");
                    GetBAAuditCriteria("PMS_BACriteria", "BAAuditCriteria");
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function GetResponsibility(Type, defectType) {
        $.ajax({
            url: "@Url.Action("GetDropDownList", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ Type: Type, defectType: defectType}),
            async: true,
            success: function (data) {
                $(".Responsibility>tbody").html(data);

                $('.ResponsibilityID').on('click', function () {
                    $('.ResponsibilityID').removeClass("selectDefect");
                    $(this).addClass("selectDefect");
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function GetBAAuditCriteria(Type, defectType) {
        $.ajax({
            url: "@Url.Action("GetDropDownList", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ Type: Type, defectType: defectType}),
            async: true,
            success: function (data) {
                $(".BAAuditCriteria>tbody").html(data);

                $('.BAAuditCriteriaID').on('click', function () {
                    $('.BAAuditCriteriaID').removeClass("selectDefect");
                    $(this).addClass("selectDefect");
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function GetReworkCard(FixType) {
        $.ajax({
            url: "@Url.Action("GetReworkCard", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ fixType: FixType}),
            async: true,
            success: function (data) {
                var rCount = Object.keys(data).length;
                var content = "";

                $.each(data, function (index, value) {
                    content += "<input id='ReworkCardNo" + padLeft(value.No.toString(), 2) + "' idx='" + value.Status + "' type='button' class='site-btn ReworkCardNo font1rem' name='ReworkCardNo' value='" + padLeft(value.No.toString(), 2) + "' />";
                });

                if (rCount > 12) {
                    var width = 64;
                    var displacement = Math.floor((rCount - 12) / 3);
                    if (((rCount - 12) % 3) == 0) {
                        displacement--;
                    }

                    width = width + (displacement * 13);
                    $('.ReworkCardNoInside').css("width", width + "vw");
                }

                $('.ReworkCardNoInside').html(content);
                $('.ReworkCardNoInside>input').on('click', function () {
                    if ($(this).attr("idx") == "Rework") {
                        return;
                    }

                    $('.ReworkCardNoInside>input').removeClass("selectReworkCard");
                    $(this).addClass("selectReworkCard");
                    $('.ReworkCardNoSelectValue').html($(this).val());
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function GetReworkListButtonDispose() {
            $.ajax({
            url: "@Url.Action("GetDQSReason", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ }),
            async: true,
            success: function (data) { 
                $('.ReworkListButtonDispose').html(data);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function ReworkCardSave() {
        var style = $('#txtStyle').val();
        var datas =
            {
                OrderID: $('#txtSP').val(),
                Article: $('#txtArticle').val(),
                Location: $('#txtProductType').val(),
                Size: $('#txtSize').val(),
                FixType: $('.FixType').html(),
                ReworkCardNo: $('.ReworkCardNoSelectValue').html(),
            };

        var datasDetail = [];

        $("#DefectType>tbody>tr>.DefectValue").each(function (index, value) {
            var GarmentDefectTypeID = "";
            var GarmentDefectCodeID = "";
            var DefectCode = "";
            var AreaCode = "";
            var PMS_RFTBACriteriaID = "";
            var PMS_RFTRespID = "";
            var DefectPicture = "";

            $(this).children("p").each(function (index, value) {
                var idx = $(this).attr('idx');
                var idv = $(this).attr('idv');
                var h = $(this).html();

                switch (idx) {
                    case "DefectCategory":
                        GarmentDefectTypeID = idv;
                        break;
                    case "ADDDefectType":
                        GarmentDefectCodeID = idv;
                        DefectCode = h;
                        break;
                    case "Area2":
                        AreaCode = idv;
                        break;
                    case "Responsibility":
                        PMS_RFTRespID = idv;
                        break;
                    case "BAAuditCriteria":
                        PMS_RFTBACriteriaID = idv;
                        break;
                    case "pic":
                        DefectPicture = h.replace("data:image/webp;base64,", "");
                        break;
                }
            });

            datasDetail.push({
                GarmentDefectTypeID: GarmentDefectTypeID,
                GarmentDefectCodeID: GarmentDefectCodeID,
                DefectCode: DefectCode,
                AreaCode: AreaCode,
                PMS_RFTRespID: PMS_RFTRespID,
                PMS_RFTBACriteriaID: PMS_RFTBACriteriaID,
                DefectPicture: DefectPicture,
            });
        });

        var saveView = {
            StyleID: style,
            rft_Inspection: datas,
            fT_Inspection_Details: datasDetail
        };

        $.ajax({
            url: "@Url.Action("ReworkCardSave", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ saveView }),
            async: false,
            success: function (data) {
                if (data.Result) {
                    $("#DefectType>tbody>tr").remove();
                    $('#btnReworkCardNoExit').click();
                    $('#btnRefresh').click();
                    IsEditModeButtonChange();
                    msg.WithSuccess("Success");
                }
                else {
                    msg.WithError(data.ErrMsg);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function ReworkListGet() {
        $.ajax({
            url: "@Url.Action("GetReworkList", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ }),
            async: true,
            success: function (data) {
                var tableContent = "";
                var spOption = "", styleOption = "", articleOption = "", sizeOption = "";
                var spArrList = [];
                $.each(data, function (index, value) {
                    spArrList.push(value.OrderID);
                    spOption += "<option value=" + value.OrderID + ">" + value.OrderID + "</option>";
                    styleOption += "<option value=" + value.Style + ">" + value.Style + "</option>";
                    articleOption += "<option value=" + value.Article + ">" + value.Article + "</option>";
                    sizeOption += "<option value=" + value.Size + ">" + value.Size + "</option>";

                    tableContent += "<tr idx='" + value.FixType + "'>";
                    tableContent += "<td><input type='checkbox' idx='" + value.ID + "' class='ReworkListCheckBox'></td>";
                    tableContent += "<td><input id='txtReworkListReworkNo" + value.ID + "' type='text' readonly='readonly' value='" + value.ReworkNo + "' /></td>";
                    tableContent += "<td><input id='txtReworkListOrderID" + value.ID + "' type='text' readonly='readonly' value='" + value.OrderID + "' /></td>";
                    tableContent += "<td><input id='txtReworkListPOID" + value.ID + "' type='text' readonly='readonly' value='" + value.POID + "'/></td>";
                    tableContent += "<td><input id='txtReworkListStyle" + value.ID + "' type='text' readonly='readonly' value='" + value.Style + "'/></td>";
                    tableContent += "<td><input id='txtReworkListSize" + value.ID + "' type='text' readonly='readonly' value='" + value.Size + "'/></td>";
                    tableContent += "<td><input id='txtReworkListArticle" + value.ID + "' type='text' readonly='readonly' value='" + value.Article + "'/></td>";
                    tableContent += "<td><input id='txtReworkListDefect" + value.ID + "' type='text' readonly='readonly' value='" + value.Defect + "'/></td>";
                    tableContent += "<td><input id='btnReworkListPass" + value.ID + "' type='button' class='site-btn btn-green font1rem btnReworkListPass' style='margin: 0; border: 0; padding: 7px 2em; ' name='ReworkListPass' value='Pass' /></td>";
                    tableContent += "<td><input id='btnReworkListReject" + value.ID + "' type='button' class='site-btn btn-red font1rem btnReworkListReject' style='margin:0;border:0;padding: 7px 2em;' name='ReworkListReject' value='Reject' /></td>";
                    tableContent += "<td>";
                    tableContent += "<input id='btnReworkListAction" + value.ID + "' type='button' class='site-btn btn-blue font1rem btnReworkListAction' style='margin:0;border:0;padding: 7px 2em;' name='ReworkListAction' value='Action' />";
                    tableContent += "<div style='position: relative;'><div class='ReworkListTableAction display-None'>";
                    tableContent += "<input idx='Wash' type='button' value='Send To Washing'>";
                    tableContent += "<input idx='Print' type='button' value='Printing Repair'>";
                    tableContent += "<input idx='Repl.' type='button' value='Need Replacement'>";
                    tableContent += "<input idx='Shade' type='button' value='Shading Defect'>";
                    tableContent += "</div></div>";
                    tableContent += "</td>";
                    tableContent += "</tr>";
                });
                console.log(spArrList);
                $('.ReworkListTable>tbody').html(tableContent);
                $("#ReworkListSP").html(spOption);
                $("#ReworkListStyle").html(styleOption);
                $("#ReworkListArticle").html(articleOption);
                $("#ReworkListSize").html(sizeOption);

                $(".ReworkListTable>tbody>tr>td>input[name='ReworkListAction']").on('click', function () {
                    $(this).siblings('div').children('div').slideToggle(100);
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function CFTCommentsClick(OrderID, StyleID, Season, SampleStage) {
        $.ajax({
            url: "@Url.Action("GetCFTComments", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ OrderID: OrderID, StyleID: StyleID, Season: Season, SampleStage: SampleStage }),
            async: true,
            success: function (data) {
                $(".CFTCommentsTable>tbody").html(data);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function CFTCommentsSave(SendMail) {
        var SP = $('#txtSP').val();
        var datasDetail = [];

        $(".CFTCommentsTable>tbody>tr>td").each(function (index, value) {

            $(this).children("textarea").each(function (index, value) {
                var idx = $(this).attr('idx');
                var h = $(this).html();

                datasDetail.push({
                    OrderID: SP,
                    PMS_RFTCommentsID: idx,
                    Comnments: h,
                });
            });
        });

        $.ajax({
            url: "@Url.Action("CFTCommentsSave", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ duringDummyFitting : datasDetail }),
            async: false,
            success: function (data) {
                if (data.Result) {
                    if (SendMail) {
                        CFTCommentsSendMail(SP);
                    }
                    else {
                        $(".CFTCommentsTable>tbody>tr").remove();
                        $('#btnCFTCommentsExit').click();
                    }
                }
                else {
                    msg.WithError(data.ErrMsg);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function CFTCommentsSendMail(OrderID) {
          $.ajax({
            url: "@Url.Action("CFTCommentsSend", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
              data: JSON.stringify({ OrderID: OrderID }),
            async: false,
            success: function (data) {
                if (data.Result) {
                    msg.WithSuccess("Send Mail");
                }
                else {
                    msg.WithError(data.ErrMsg);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function PicturesClick(OrderID, StyleID, Article, Size) {
        $.ajax({
            url: "@Url.Action("GetPictures", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ OrderID: OrderID, StyleID: StyleID, Article: Article, Size: Size }),
            async: true,
            success: function (data) {
                const PictureFront = document.querySelector("#PictureFront");
                const aPictureFront = document.querySelector("#aPictureFront");
                const PictureSide = document.querySelector("#PictureSide");
                const aPictureSide = document.querySelector("#aPictureSide");
                const PictureBack = document.querySelector("#PictureBack");
                const aPictureBack = document.querySelector("#aPictureBack");
                if (data.Font != null) {
                    PictureFront.src = "data:image/webp;base64," + ByteArrayToBase64(data.Font);
                    aPictureFront.href = PictureFront.src;
                }
                if (data.Side != null) {
                    PictureSide.src = "data:image/webp;base64," + ByteArrayToBase64(data.Side);
                    aPictureSide.href = PictureSide.src;
                }
                if (data.Back != null) {
                    PictureBack.src = "data:image/webp;base64," + ByteArrayToBase64(data.Back);
                    aPictureBack.href = PictureBack.src;
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function PicturesSave() {
        const PictureFront = document.querySelector("#PictureFront").src.replace("data:image/webp;base64,", "");
        const PictureSide = document.querySelector("#PictureSide").src.replace("data:image/webp;base64,", "");
        const PictureBack = document.querySelector("#PictureBack").src.replace("data:image/webp;base64,", "");

        var datas =
        {
            OrderID: $('#txtSP').val(),
            Article: $('#txtArticle').val(),
            Size: $('#txtSize').val(),
            Front: PictureFront,
            Side: PictureSide,
            Back: PictureBack,
        };

        $.ajax({
            url: "@Url.Action("PicturesSave", "Inspection", new { Area = "SampleRFT" })",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ duringDummyFitting: datas }),
            async: true,
            success: function (data) {
                if (data.Result) {
                    $('#btnPictureDuringDummyFittingExit').click();
                    $('#btnRefresh').click();
                    IsEditModeButtonChange();
                }
                else {
                    msg.WithError(data.ErrMsg);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
            }
        });
    }

    function SelectItemClickBind() {
        $('.SelectItem>ul>li>a').unbind('click').on('click', function () {
            var idx = $(this).parent().parent().parent().attr('idx');
            $("#txt" + idx).val($(this).html()).trigger("change");
            $('#SelectItemBackground, .SelectItem').addClass('display-None');
        });
    }

    function SelectItemV2ClickBind() {
        $(".SelectItemV2>li>a").on('click', function () {
            var idx = $(this).parent().parent().attr('idx');
            // $("#" + idx).val($(this).html()).trigger("change");
            $("#" + idx).val($(this).html())
            $('.SelectItemV2').addClass('display-None');
        });

        $("#Brand").on("change", function () {
            BrandCheck($(this).val());
        });
    }

    function FilterFunction(idx) {
        // Declare variables
        var filter, li, a, i, txtValue;
        filter = $(".FilterInput[idx='" + idx + "']").val().toUpperCase();
        li = $(".FilterUL[idx='" + idx + "'] li");

        // Loop through all list items, and hide those who don't match the search query
        for (i = 0; i < li.length; i++) {
            a = li[i].getElementsByTagName("a")[0];
            txtValue = a.textContent || a.innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                li[i].style.display = "";
            } else {
                li[i].style.display = "none";
            }
        }
    }
</script>

